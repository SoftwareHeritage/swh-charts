environment: production
sentry:
  environment: production

clusterNetworkRanges:
  # cluster internal range ip
  - 10.42.0.0/16
  - 10.43.0.0/16

internalNetworkRanges:
  - 127.0.0.0/8
  # rocq production range ip
  - 192.168.100.0/24
  # azure production range ip
  - 192.168.200.0/22
  # Cluster internal ip
  - 10.42.0.0/16
  - 10.43.0.0/16

externalAuthorizedNetworkRanges:
  - 128.93.166.14
  - 131.107.174.0/24
  - 213.135.60.145
  - 213.135.60.146
  - 37.187.96.121

keycloakConfiguration:
  server_url: https://auth.softwareheritage.org/auth/
  realm_name: SoftwareHeritage

memcached:
  enabled: true
  memory: 1024
  requestedMemory: 1Gi

podPriority:
  enabled: true

noopObjectStorage:
  cls: noop

kafkaBrokers:
  - kafka1.internal.softwareheritage.org
  - kafka2.internal.softwareheritage.org
  - kafka3.internal.softwareheritage.org
  - kafka4.internal.softwareheritage.org

internalSecuredKafkaBrokers:
  - kafka1.internal.softwareheritage.org:9094
  - kafka2.internal.softwareheritage.org:9094
  - kafka3.internal.softwareheritage.org:9094
  - kafka4.internal.softwareheritage.org:9094

elasticsearchInstances:
  - host: search-esnode4.internal.softwareheritage.org
    port: 9200
  - host: search-esnode5.internal.softwareheritage.org
    port: 9200
  - host: search-esnode6.internal.softwareheritage.org
    port: 9200

elasticsearchConfiguration:
  elasticsearchInstancesRef: elasticsearchInstances
  cls: elasticsearch
  indexes:
    origin:
      index: origin-v0.11
      read_alias: origin-read
      write_alias: origin-write

journalClientConfiguration:
  brokersConfigurationRef: kafkaBrokers
  group_id: swh.scheduler.journal_client

azureObjStorageConfiguration: &azure-storage-conf
  cls: azure-prefixed
  accounts:
    '0':
      account_name: ${ACCOUNT_NAME_0}
      api_secret_key: ${API_SECRET_KEY_0}
      container_name: contents
    '1':
      account_name: ${ACCOUNT_NAME_1}
      api_secret_key: ${API_SECRET_KEY_1}
      container_name: contents
    '2':
      account_name: ${ACCOUNT_NAME_2}
      api_secret_key: ${API_SECRET_KEY_2}
      container_name: contents
    '3':
      account_name: ${ACCOUNT_NAME_3}
      api_secret_key: ${API_SECRET_KEY_3}
      container_name: contents
    '4':
      account_name: ${ACCOUNT_NAME_4}
      api_secret_key: ${API_SECRET_KEY_4}
      container_name: contents
    '5':
      account_name: ${ACCOUNT_NAME_5}
      api_secret_key: ${API_SECRET_KEY_5}
      container_name: contents
    '6':
      account_name: ${ACCOUNT_NAME_6}
      api_secret_key: ${API_SECRET_KEY_6}
      container_name: contents
    '7':
      account_name: ${ACCOUNT_NAME_7}
      api_secret_key: ${API_SECRET_KEY_7}
      container_name: contents
    '8':
      account_name: ${ACCOUNT_NAME_8}
      api_secret_key: ${API_SECRET_KEY_8}
      container_name: contents
    '9':
      account_name: ${ACCOUNT_NAME_9}
      api_secret_key: ${API_SECRET_KEY_9}
      container_name: contents
    a:
      account_name: ${ACCOUNT_NAME_10}
      api_secret_key: ${API_SECRET_KEY_10}
      container_name: contents
    b:
      account_name: ${ACCOUNT_NAME_11}
      api_secret_key: ${API_SECRET_KEY_11}
      container_name: contents
    c:
      account_name: ${ACCOUNT_NAME_12}
      api_secret_key: ${API_SECRET_KEY_12}
      container_name: contents
    d:
      account_name: ${ACCOUNT_NAME_13}
      api_secret_key: ${API_SECRET_KEY_13}
      container_name: contents
    e:
      account_name: ${ACCOUNT_NAME_14}
      api_secret_key: ${API_SECRET_KEY_14}
      container_name: contents
    f:
      account_name: ${ACCOUNT_NAME_15}
      api_secret_key: ${API_SECRET_KEY_15}
      container_name: contents

azureObjStorageConfigurationSecrets: &azure-storage-secrets
  ACCOUNT_NAME_0:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 0_account_name
  API_SECRET_KEY_0:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 0_api_secret_key
  ACCOUNT_NAME_1:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 1_account_name
  API_SECRET_KEY_1:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 1_api_secret_key
  ACCOUNT_NAME_2:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 2_account_name
  API_SECRET_KEY_2:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 2_api_secret_key
  ACCOUNT_NAME_3:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 3_account_name
  API_SECRET_KEY_3:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 3_api_secret_key
  ACCOUNT_NAME_4:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 4_account_name
  API_SECRET_KEY_4:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 4_api_secret_key
  ACCOUNT_NAME_5:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 5_account_name
  API_SECRET_KEY_5:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 5_api_secret_key
  ACCOUNT_NAME_6:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 6_account_name
  API_SECRET_KEY_6:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 6_api_secret_key
  ACCOUNT_NAME_7:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 7_account_name
  API_SECRET_KEY_7:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 7_api_secret_key
  ACCOUNT_NAME_8:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 8_account_name
  API_SECRET_KEY_8:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 8_api_secret_key
  ACCOUNT_NAME_9:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 9_account_name
  API_SECRET_KEY_9:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 9_api_secret_key
  ACCOUNT_NAME_10:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 10_account_name
  API_SECRET_KEY_10:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 10_api_secret_key
  ACCOUNT_NAME_11:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 11_account_name
  API_SECRET_KEY_11:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 11_api_secret_key
  ACCOUNT_NAME_12:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 12_account_name
  API_SECRET_KEY_12:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 12_api_secret_key
  ACCOUNT_NAME_13:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 13_account_name
  API_SECRET_KEY_13:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 13_api_secret_key
  ACCOUNT_NAME_14:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 14_account_name
  API_SECRET_KEY_14:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 14_api_secret_key
  ACCOUNT_NAME_15:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 15_account_name
  API_SECRET_KEY_15:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 15_api_secret_key

pipelineAzureROObjstorageConfiguration:
  cls: multiplexer
  objstorages:
  - cls: filtered
    storage_conf: *azure-storage-conf
    filters_conf:
    - type: readonly
  - cls: filtered
    storage_conf:
      cls: remote
      url: http://objstorage.internal.softwareheritage.org:5003/
    filters_conf:
    - type: readonly

roObjstorageConfiguration:
  configurationRef: pipelineAzureROObjstorageConfiguration
  secrets: *azure-storage-secrets

roObjstorageAwsLocalAzureFallback:
  cls: multiplexer
  objstorages:
  - cls: http
    url: https://softwareheritage.s3.amazonaws.com/content/
    compression: gzip
    timeout: 120
  - cls: remote
    url: http://objstorage-ro-saam-zfs-rpc-ingress
  - cls: filtered
    storage_conf:
      cls: remote
      url: http://banco.internal.softwareheritage.org:5003/
    filters_conf:
    - type: readonly
  - cls: filtered
    storage_conf: *azure-storage-conf
    filters_conf:
    - type: readonly

roObjstorageAwsAzureLocalFallback:
  cls: multiplexer
  objstorages:
  - cls: filtered
    storage_conf:
      # AWS storage
      cls: http
      url: https://softwareheritage.s3.amazonaws.com/content/
      compression: gzip
      timeout: 120
    filters_conf:
    - type: readonly
  - cls: filtered
    storage_conf: *azure-storage-conf
    filters_conf:
    - type: readonly
  - cls: filtered
    storage_conf:
      # banco/saam
      cls: remote
      url: http://objstorage-read-only-rpc-ingress
    filters_conf:
    - type: readonly

cassandraReadOnlyStorageAWSLocalAzureConfiguration:
  storageConfigurationRef: cassandraROStorage
  objstorageConfigurationRef: roObjstorageAwsLocalAzureFallback
  pipelineStepsRef: retryStoragePipelineSteps
  secrets: *azure-storage-secrets

roObjstorageAwsLocalAzureFallbackConfiguration:
  configurationRef: roObjstorageAwsLocalAzureFallback
  secrets: *azure-storage-secrets

roObjstorageAwsAzureLocalFallbackConfiguration:
  configurationRef: roObjstorageAwsAzureLocalFallback
  secrets: *azure-storage-secrets

pathslicingSaamZfsObjstorageConfiguration: &objstorage-saam-zfs-pathslicing-conf
  cls: pathslicing
  root: "/srv/softwareheritage/objects"
  slicing: 0:2/0:5
  compression: none

readonlyBancoXfsObjstorageConfiguration:
  cls: pathslicing
  root: "/srv/softwareheritage/objects"
  slicing: 0:2/2:4/4:6

multiplexerBancoSaamRemoteConfiguration:
  cls: multiplexer
  objstorages:
  - cls: filtered
    storage_conf:
      cls: remote
      url: http://banco.internal.softwareheritage.org:5003/
    filters_conf:
    - type: readonly
  - cls: filtered
    storage_conf:
      cls: remote
      url: http://objstorage-ro-saam-zfs-rpc-ingress
    filters_conf:
    - type: readonly

rwObjstorageLocalSaamAndAzure:
  cls: multiplexer
  objstorages:
  - *objstorage-saam-zfs-pathslicing-conf
  - *azure-storage-conf

readonlySaamZfsObjstorageConfiguration:
  cls: filtered
  storage_conf: *objstorage-saam-zfs-pathslicing-conf
  filters_conf:
    - type: readonly

rwStoragePipelineSteps:
  - cls: record_references

rwStoragePostgresqlWithSaamObjstorageConfiguration:
  storageConfigurationRef: postgresqlRWStorageConfiguration
  journalWriterConfigurationRef: storageJournalWriterConfiguration
  objstorageConfigurationRef: rwObjstorageLocalSaamAndAzure
  pipelineStepsRef: rwStoragePipelineSteps
  secrets: *azure-storage-secrets

retryStoragePipelineSteps:
  - cls: retry

storagePipelineSteps:
  - cls: buffer
    min_batch_size:
      content: 1000
      content_bytes: 52428800
      directory: 1000
      directory_entries: 12000
      revision: 1000
      revision_parents: 2000
      revision_bytes: 52428800
      release: 1000
      release_bytes: 52428800
      extid: 1000
  - cls: filter
  - cls: retry

remoteSearchConfiguration:
  cls: remote
  url: http://search-rpc-ingress

remoteSchedulerConfiguration:
  cls: remote
  url: http://scheduler.internal.softwareheritage.org

remoteVaultConfiguration:
  cls: remote
  url: http://vault-rpc-ingress

legacyIndexerStorageConfiguration:
  cls: remote
  url: http://saam.internal.softwareheritage.org:5007/

remoteReadOnlyIndexerStorageConfiguration:
  cls: remote
  url: http://indexer-storage-read-only-rpc-ingress

remoteReadWriteIndexerStorageConfiguration:
  cls: remote
  url: http://indexer-storage-read-write-rpc-ingress

remoteCountersConfiguration:
    cls: remote
    url: http://counters1.internal.softwareheritage.org:5011/

producerCeleryConfiguration:
  host: rabbitmq.internal.softwareheritage.org
  port: 5672
  user: swhproducer
  pass: ${AMQP_PASSWORD}
  secrets:
    AMQP_PASSWORD:
      secretKeyRef: amqp-secrets
      secretKeyName: swhproducer-password

consumerCeleryConfiguration:
  host: rabbitmq.internal.softwareheritage.org
  port: 5672
  user: swhconsumer
  pass: ${AMQP_PASSWORD}
  secrets:
    AMQP_PASSWORD:
      secretKeyRef: amqp-secrets
      secretKeyName: swhconsumer-password

depositConfiguration:
  host: deposit.softwareheritage.org
  user: ${DEPOSIT_USERNAME}
  pass: ${DEPOSIT_PASSWORD}
  secrets:
    DEPOSIT_USERNAME:
      secretKeyRef: deposit-secrets
      secretKeyName: username
    DEPOSIT_PASSWORD:
      secretKeyRef: deposit-secrets
      secretKeyName: password

postgresqlIndexerStorageConfiguration:
  cls: postgresql
  host: postgresql-indexer-rw.internal.softwareheritage.org
  db: softwareheritage-indexer
  port: 5432
  user: swhstorage
  pass: ${POSTGRESQL_PASSWORD}
  secrets:
    POSTGRESQL_PASSWORD:
      secretKeyRef: swh-indexer-storage-postgresql-secret
      secretKeyName: postgres-swh-indexer-password

postgresqlReadOnlyIndexerStorageConfiguration:
  cls: postgresql
  host: postgresql-indexer-rw.internal.softwareheritage.org
  db: softwareheritage-indexer
  port: 5432
  user: guest
  pass: ${POSTGRESQL_PASSWORD}
  secrets:
    POSTGRESQL_PASSWORD:
      secretKeyRef: swh-indexer-storage-postgresql-secret
      secretKeyName: postgres-guest-password

postgresqlScrubberConfiguration:
  cls: postgresql
  host: postgresql-scrubber-rw.internal.softwareheritage.org
  port: '5432'
  user: swh-scrubber
  pass: ${SCRUBBER_POSTGRESQL_PASSWORD}
  db: swh-scrubber
  secrets:
    SCRUBBER_POSTGRESQL_PASSWORD:
      secretKeyRef: swh-scrubber-postgresql-common-secret
      secretKeyName: postgres-swh-scrubber-password

djangoWebConfiguration:
  secrets:
    DJANGO_SECRET_KEY:
      secretKeyRef: swh-webapp-django-secret
      secretKeyName: webapp-django-secret-key

webThrottling:
  internalExemptedNetworkRangesRef: internalNetworkRanges
  externalExemptedNetworkRangesRef: externalAuthorizedNetworkRanges
  cache_uri: memcached:11211
  scopes_with_exempted_networks:
    swh_api:
      limiter_rate:
        default: 120/h
      exempted_networks:
      - 37.187.137.47
    swh_vault_cooking:
      limiter_rate:
        default: 120/h
        GET: 60/m
    swh_save_origin:
      limiter_rate:
        default: 120/h
        POST: 10/h
  scopes:
    swh_api_origin_search:
      limiter_rate:
        default: 10/m
    swh_api_origin_visit_latest:
      limiter_rate:
        default: 700/m
    swh_raw_object:
      limiter_rate:
        default: 120/h

indexerJournalWriterConfiguration:
  brokersConfigurationRef: kafkaBrokers
  cls: kafka
  prefix: swh.journal.indexed
  client_id: swh.idx_storage.journal_writer.${HOSTNAME}
  producer_config:
    message.max.bytes: 1000000000

addForgeNowConfiguration:
  email_address: add-forge-now@archive.softwareheritage.org

web:
  # Due to the number of cpus on the production nodes
  # nginx starts a lot of workers by default which consumes more memory than the default
  nginxRequestedMemory: 90Mi

externalServices:
  enabled: true
  services:
    search:
      internalName: search-rpc-ingress
      target: archive-production-rke2-ingress-nginx-controller.ingress-nginx.svc.cluster.local
    storage-azure-read-only:
      internalName: storage-azure-read-only-rpc-ingress
      target: archive-production-rke2-ingress-nginx-controller.ingress-nginx.svc.cluster.local
    indexer-storage-read-only:
      internalName: indexer-storage-read-only-rpc-ingress
      target: archive-production-rke2-ingress-nginx-controller.ingress-nginx.svc.cluster.local
    indexer-storage-read-write:
      internalName: indexer-storage-read-write-rpc-ingress
      target: archive-production-rke2-ingress-nginx-controller.ingress-nginx.svc.cluster.local
    objstorage-read-only:
      internalName: objstorage-read-only-rpc-ingress
      target: archive-production-rke2-ingress-nginx-controller.ingress-nginx.svc.cluster.local
    vault:
      internalName: vault-rpc-ingress
      target: archive-production-rke2-ingress-nginx-controller.ingress-nginx.svc.cluster.local
    objstorage-ro-saam-zfs:
      internalName: objstorage-ro-saam-zfs-rpc-ingress
      target: archive-production-rke2-ingress-nginx-controller.ingress-nginx.svc.cluster.local
    objstorage-ro-banco-xfs:
      internalName: objstorage-ro-banco-xfs-rpc-ingress
      target: archive-production-rke2-ingress-nginx-controller.ingress-nginx.svc.cluster.local
    storage-rw-postgresql-saam:
      internalName: storage-rw-postgresql-saam-ingress
      target: archive-production-rke2-ingress-nginx-controller.ingress-nginx.svc.cluster.local
