environment: production
sentry:
  environment: production

clusterNetworkRanges:
  # cluster internal range ip
  - 10.42.0.0/16
  - 10.43.0.0/16

internalNetworkRanges:
  - 127.0.0.0/8
  # rocq production range ip
  - 192.168.100.0/24
  # azure production range ip
  - 192.168.200.0/22
  # Cluster internal ip
  - 10.42.0.0/16
  - 10.43.0.0/16

externalAuthorizedNetworkRanges:
  - 128.93.166.14
  - 131.107.174.0/24
  - 213.135.60.145
  - 213.135.60.146
  - 37.187.96.121

keycloakConfiguration:
  server_url: https://auth.softwareheritage.org/auth/
  realm_name: SoftwareHeritage

memcached:
  enabled: true
  memory: 1024
  requestedMemory: 1Gi

podPriority:
  enabled: true

memoryStorage:
  cls: memory

kafkaBrokers:
  - kafka1.internal.softwareheritage.org:9092
  - kafka2.internal.softwareheritage.org:9092
  - kafka3.internal.softwareheritage.org:9092
  - kafka4.internal.softwareheritage.org:9092

internalSecuredKafkaBrokers:
  - kafka1.internal.softwareheritage.org:9094
  - kafka2.internal.softwareheritage.org:9094
  - kafka3.internal.softwareheritage.org:9094
  - kafka4.internal.softwareheritage.org:9094

cassandraSeeds:
  - cassandra01.internal.softwareheritage.org
  - cassandra02.internal.softwareheritage.org
  - cassandra03.internal.softwareheritage.org
  - cassandra04.internal.softwareheritage.org
  - cassandra05.internal.softwareheritage.org
  - cassandra06.internal.softwareheritage.org
  - cassandra07.internal.softwareheritage.org
  - cassandra08.internal.softwareheritage.org
  - cassandra09.internal.softwareheritage.org
  - cassandra10.internal.softwareheritage.org
  - cassandra11.internal.softwareheritage.org
  - cassandra12.internal.softwareheritage.org
  - cassandra13.internal.softwareheritage.org

cassandraStorage:
  cls: cassandra
  cassandraSeedsRef: cassandraSeeds
  keyspace: swh
  initKeyspace: false
  consistencyLevel: LOCAL_QUORUM
  specificOptions:
    directory_entries_insert_algo: batch
  authProvider:
    cls: cassandra.auth.PlainTextAuthProvider
    username: swh-rw
    password: ${CASSANDRA_PASSWORD}
  secrets:
    CASSANDRA_PASSWORD:
      secretKeyRef: common-secrets
      secretKeyName: cassandra-swh-rw-password

noopObjstorageConfiguration:
  cls: noop

cassandraRWNoObjstorageStorageConfiguration:
  storageConfigurationRef: cassandraStorage
  objstorageConfigurationRef: noopObjstorageConfiguration

memoryNoopStorageConfiguration:
  storageConfigurationRef: memoryStorage
  objstorageConfigurationRef: noopObjstorageConfiguration

elasticsearchInstances:
  - host: search-esnode4.internal.softwareheritage.org
    port: 9200
  - host: search-esnode5.internal.softwareheritage.org
    port: 9200
  - host: search-esnode6.internal.softwareheritage.org
    port: 9200

elasticsearchConfiguration:
  elasticsearchInstancesRef: elasticsearchInstances
  cls: elasticsearch
  indexes:
    origin:
      index: origin-v0.11
      read_alias: origin-read
      write_alias: origin-write

journalClientConfiguration:
  brokersConfigurationRef: kafkaBrokers
  group_id: swh.scheduler.journal_client

azureObjStorageRWConfiguration: &azure-storage-conf-rw
  cls: azure-prefixed
  name: azure
  accounts:
    '0':
      account_name: ${ACCOUNT_NAME_0}
      api_secret_key: ${API_SECRET_KEY_0}
      container_name: contents
    '1':
      account_name: ${ACCOUNT_NAME_1}
      api_secret_key: ${API_SECRET_KEY_1}
      container_name: contents
    '2':
      account_name: ${ACCOUNT_NAME_2}
      api_secret_key: ${API_SECRET_KEY_2}
      container_name: contents
    '3':
      account_name: ${ACCOUNT_NAME_3}
      api_secret_key: ${API_SECRET_KEY_3}
      container_name: contents
    '4':
      account_name: ${ACCOUNT_NAME_4}
      api_secret_key: ${API_SECRET_KEY_4}
      container_name: contents
    '5':
      account_name: ${ACCOUNT_NAME_5}
      api_secret_key: ${API_SECRET_KEY_5}
      container_name: contents
    '6':
      account_name: ${ACCOUNT_NAME_6}
      api_secret_key: ${API_SECRET_KEY_6}
      container_name: contents
    '7':
      account_name: ${ACCOUNT_NAME_7}
      api_secret_key: ${API_SECRET_KEY_7}
      container_name: contents
    '8':
      account_name: ${ACCOUNT_NAME_8}
      api_secret_key: ${API_SECRET_KEY_8}
      container_name: contents
    '9':
      account_name: ${ACCOUNT_NAME_9}
      api_secret_key: ${API_SECRET_KEY_9}
      container_name: contents
    a:
      account_name: ${ACCOUNT_NAME_10}
      api_secret_key: ${API_SECRET_KEY_10}
      container_name: contents
    b:
      account_name: ${ACCOUNT_NAME_11}
      api_secret_key: ${API_SECRET_KEY_11}
      container_name: contents
    c:
      account_name: ${ACCOUNT_NAME_12}
      api_secret_key: ${API_SECRET_KEY_12}
      container_name: contents
    d:
      account_name: ${ACCOUNT_NAME_13}
      api_secret_key: ${API_SECRET_KEY_13}
      container_name: contents
    e:
      account_name: ${ACCOUNT_NAME_14}
      api_secret_key: ${API_SECRET_KEY_14}
      container_name: contents
    f:
      account_name: ${ACCOUNT_NAME_15}
      api_secret_key: ${API_SECRET_KEY_15}
      container_name: contents

azureObjStorageRWConfigurationSecrets: &azure-storage-secrets-rw
  ACCOUNT_NAME_0:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 0_account_name
  API_SECRET_KEY_0:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 0_api_secret_key
  ACCOUNT_NAME_1:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 1_account_name
  API_SECRET_KEY_1:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 1_api_secret_key
  ACCOUNT_NAME_2:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 2_account_name
  API_SECRET_KEY_2:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 2_api_secret_key
  ACCOUNT_NAME_3:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 3_account_name
  API_SECRET_KEY_3:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 3_api_secret_key
  ACCOUNT_NAME_4:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 4_account_name
  API_SECRET_KEY_4:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 4_api_secret_key
  ACCOUNT_NAME_5:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 5_account_name
  API_SECRET_KEY_5:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 5_api_secret_key
  ACCOUNT_NAME_6:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 6_account_name
  API_SECRET_KEY_6:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 6_api_secret_key
  ACCOUNT_NAME_7:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 7_account_name
  API_SECRET_KEY_7:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 7_api_secret_key
  ACCOUNT_NAME_8:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 8_account_name
  API_SECRET_KEY_8:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 8_api_secret_key
  ACCOUNT_NAME_9:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 9_account_name
  API_SECRET_KEY_9:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 9_api_secret_key
  ACCOUNT_NAME_10:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 10_account_name
  API_SECRET_KEY_10:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 10_api_secret_key
  ACCOUNT_NAME_11:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 11_account_name
  API_SECRET_KEY_11:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 11_api_secret_key
  ACCOUNT_NAME_12:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 12_account_name
  API_SECRET_KEY_12:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 12_api_secret_key
  ACCOUNT_NAME_13:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 13_account_name
  API_SECRET_KEY_13:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 13_api_secret_key
  ACCOUNT_NAME_14:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 14_account_name
  API_SECRET_KEY_14:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 14_api_secret_key
  ACCOUNT_NAME_15:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 15_account_name
  API_SECRET_KEY_15:
    secretKeyRef: swh-objstorage-config
    secretKeyName: 15_api_secret_key

azureDeleteObjstorageConfiguration: &azure-storage-conf-delete
  <<: *azure-storage-conf-rw
  allow_delete: true
  secrets: *azure-storage-secrets-rw

azureObjStorageROConfiguration: &azure-storage-conf-ro
  cls: azure-prefixed
  name: azure
  accounts:
    '0': ${AZURE_RO_URL_0}
    '1': ${AZURE_RO_URL_1}
    '2': ${AZURE_RO_URL_2}
    '3': ${AZURE_RO_URL_3}
    '4': ${AZURE_RO_URL_4}
    '5': ${AZURE_RO_URL_5}
    '6': ${AZURE_RO_URL_6}
    '7': ${AZURE_RO_URL_7}
    '8': ${AZURE_RO_URL_8}
    '9': ${AZURE_RO_URL_9}
    'a': ${AZURE_RO_URL_A}
    'b': ${AZURE_RO_URL_B}
    'c': ${AZURE_RO_URL_C}
    'd': ${AZURE_RO_URL_D}
    'e': ${AZURE_RO_URL_E}
    'f': ${AZURE_RO_URL_F}

azureObjStorageROConfigurationSecrets: &azure-storage-secrets-ro
  AZURE_RO_URL_0:
    secretKeyRef: swh-objstorage-azure-ro
    secretKeyName: container_url_0
  AZURE_RO_URL_1:
    secretKeyRef: swh-objstorage-azure-ro
    secretKeyName: container_url_1
  AZURE_RO_URL_2:
    secretKeyRef: swh-objstorage-azure-ro
    secretKeyName: container_url_2
  AZURE_RO_URL_3:
    secretKeyRef: swh-objstorage-azure-ro
    secretKeyName: container_url_3
  AZURE_RO_URL_4:
    secretKeyRef: swh-objstorage-azure-ro
    secretKeyName: container_url_4
  AZURE_RO_URL_5:
    secretKeyRef: swh-objstorage-azure-ro
    secretKeyName: container_url_5
  AZURE_RO_URL_6:
    secretKeyRef: swh-objstorage-azure-ro
    secretKeyName: container_url_6
  AZURE_RO_URL_7:
    secretKeyRef: swh-objstorage-azure-ro
    secretKeyName: container_url_7
  AZURE_RO_URL_8:
    secretKeyRef: swh-objstorage-azure-ro
    secretKeyName: container_url_8
  AZURE_RO_URL_9:
    secretKeyRef: swh-objstorage-azure-ro
    secretKeyName: container_url_9
  AZURE_RO_URL_A:
    secretKeyRef: swh-objstorage-azure-ro
    secretKeyName: container_url_a
  AZURE_RO_URL_B:
    secretKeyRef: swh-objstorage-azure-ro
    secretKeyName: container_url_b
  AZURE_RO_URL_C:
    secretKeyRef: swh-objstorage-azure-ro
    secretKeyName: container_url_c
  AZURE_RO_URL_D:
    secretKeyRef: swh-objstorage-azure-ro
    secretKeyName: container_url_d
  AZURE_RO_URL_E:
    secretKeyRef: swh-objstorage-azure-ro
    secretKeyName: container_url_e
  AZURE_RO_URL_F:
    secretKeyRef: swh-objstorage-azure-ro
    secretKeyName: container_url_f


roObjstorageConfiguration:
  configurationRef: roObjstorageBestEffort
  secrets: *azure-storage-secrets-ro

roObjstorageBestEffort:
  cls: multiplexer
  readonly: true
  objstorages:
  - cls: remote
    name: winery
    url: http://winery-read-only.internal.cea.swh.network
    timeout:
      - 0.5  # Connect
      - 10   # Read
  - cls: http
    name: s3
    url: https://softwareheritage.s3.amazonaws.com/content/
    compression: gzip
    timeout: 120
  - cls: remote
    name: saam
    url: http://objstorage-ro-saam-zfs-rpc-ingress-swh-cassandra
  - cls: remote
    name: banco
    url: http://objstorage-ro-banco-xfs-rpc-ingress-swh-cassandra
  - *azure-storage-conf-ro

roObjstorageBestEffortConfiguration:
  configurationRef: roObjstorageBestEffort
  secrets: *azure-storage-secrets-ro

roObjstorageHighParallelism:
  cls: multiplexer
  readonly: true
  objstorages:
  - cls: remote
    name: winery
    url: http://winery-read-only.internal.cea.swh.network
    timeout:
      - 0.5  # Connect
      - 10   # Read
  - cls: http
    name: s3
    url: https://softwareheritage.s3.amazonaws.com/content/
    compression: gzip
    timeout: 120
  - *azure-storage-conf-ro
  - cls: remote
    name: saam
    url: http://objstorage-ro-saam-zfs-rpc-ingress-swh-cassandra
  - cls: remote
    name: banco
    url: http://objstorage-ro-banco-xfs-rpc-ingress-swh-cassandra

roObjstorageHighParallelismConfiguration:
  configurationRef: roObjstorageHighParallelism
  secrets: *azure-storage-secrets-ro

cassandraReadOnlyStorageConfiguration:
  storageConfigurationRef: cassandraROStorage
  objstorageConfigurationRef: roObjstorageBestEffort
  pipelineStepsRef: maskingStoragePipelineSteps
  secrets: *azure-storage-secrets-ro

wineryObjstorageRWConfiguration: &winery-objstorage-conf-rw
  cls: remote
  name: winery
  url: http://winery-read-write.internal.cea.swh.network

roObjstorageForWineryReplayer:
  cls: multiplexer
  readonly: true
  objstorages:
  - cls: http
    name: s3
    url: https://softwareheritage.s3.amazonaws.com/content/
    compression: gzip
    timeout: 120
  - cls: remote
    name: saam
    url: http://objstorage-ro-saam-zfs-rpc-ingress-swh-cassandra
  - cls: remote
    name: banco
    url: http://objstorage-ro-banco-xfs-rpc-ingress-swh-cassandra
  - *azure-storage-conf-ro

roObjstorageForWineryReplayerConfiguration:
  configurationRef: roObjstorageForWineryReplayer
  secrets: *azure-storage-secrets-ro

roObjstorageForS3Replayer:
  cls: multiplexer
  readonly: true
  objstorages:
  - cls: remote
    name: winery
    url: http://winery-read-only.internal.cea.swh.network
    timeout:
      - 0.5  # Connect
      - 10   # Read
  - cls: remote
    name: saam
    url: http://objstorage-ro-saam-zfs-rpc-ingress-swh-cassandra
  - cls: remote
    name: banco
    url: http://objstorage-ro-banco-xfs-rpc-ingress-swh-cassandra
  - *azure-storage-conf-ro

roObjstorageForS3ReplayerConfiguration:
  configurationRef: roObjstorageForS3Replayer
  secrets: *azure-storage-secrets-ro

pathslicingSaamZfsObjstorageConfiguration:
  cls: pathslicing
  root: "/srv/softwareheritage/objects"
  slicing: 0:2/0:5
  compression: none
  allow_delete: true

pathslicingBancoXfsObjstorageConfiguration:
  cls: pathslicing
  root: "/srv/softwareheritage/objects-xfs"
  slicing: 0:1/0:2/2:4/4:6
  compression: gzip
  allow_delete: true

multiplexerForLocalStoragesConfiguration:
  cls: multiplexer
  readonly: true
  objstorages:
  - cls: remote
    name: winery
    url: http://winery-read-only.internal.cea.swh.network
    timeout:
      - 0.5  # Connect
      - 10   # Read
  - cls: remote
    name: banco
    url: http://objstorage-ro-banco-xfs-rpc-ingress-swh-cassandra
  - cls: remote
    name: saam
    url: http://objstorage-ro-saam-zfs-rpc-ingress-swh-cassandra

rwObjstorageWineryAndAzure:
  cls: multiplexer
  objstorages:
  - *winery-objstorage-conf-rw
  - *azure-storage-conf-rw

rwStoragePostgresqlPipelineBlockingAndRecordReferencesSteps:
  - cls: blocking
    postgresqlConfigurationRef: blockingQueryPostgresqlConfiguration
  # record_reference is postgresql backend specific
  - cls: record_references

storageJournalWriterConfiguration:
  brokersConfigurationRef: kafkaBrokers
  prefix: swh.journal.objects
  clientId: swh.storage.journal_writer.${HOSTNAME}
  producerConfig:
    message.max.bytes: 1000000000
  anonymize: true

rwStoragePostgresqlWithWineryObjstorageConfiguration:
  storageConfigurationRef: postgresqlRWStorageConfiguration
  journalWriterConfigurationRef: storageJournalWriterConfiguration
  objstorageConfigurationRef: rwObjstorageWineryAndAzure
  pipelineStepsRef: rwStoragePostgresqlPipelineBlockingAndRecordReferencesSteps
  secrets: *azure-storage-secrets-rw

rwStoragePipelineBlockingSteps:
  - cls: blocking
    postgresqlConfigurationRef: blockingQueryPostgresqlConfiguration

rwStorageCassandraWithWineryObjstorageConfiguration:
  storageConfigurationRef: cassandraStorage
  journalWriterConfigurationRef: storageJournalWriterConfiguration
  objstorageConfigurationRef: rwObjstorageWineryAndAzure
  pipelineStepsRef: rwStoragePipelineBlockingSteps
  secrets: *azure-storage-secrets-rw

retryStoragePipelineSteps:
  - cls: retry

storagePipelineSteps:
  - cls: buffer
    min_batch_size:
      content: 1000
      content_bytes: 52428800
      directory: 1000
      directory_entries: 12000
      revision: 1000
      revision_parents: 2000
      revision_bytes: 52428800
      release: 1000
      release_bytes: 52428800
      extid: 1000
  - cls: filter
  - cls: retry

remoteROCassandraRpcIngressStorageConfiguration:
  cls: remote
  url: http://storage-cassandra-read-only-rpc-ingress

remoteSearchConfiguration:
  cls: remote
  url: http://search-rpc-ingress-swh-cassandra

remoteSchedulerConfiguration:
  cls: remote
  url: http://scheduler-rpc-ingress-swh-cassandra

remoteVaultConfiguration:
  cls: remote
  url: http://vault-rpc-ingress-swh-cassandra

remoteReadOnlyIndexerStorageConfiguration:
  cls: remote
  url: http://indexer-storage-read-only-rpc-ingress

remoteReadWriteIndexerStorageConfiguration:
  cls: remote
  url: http://indexer-storage-read-write-rpc-ingress-swh-cassandra

remoteCountersConfiguration:
    cls: remote
    url: http://counters-rpc-ingress-swh-cassandra

remoteBancoReadOnlyObjstorageConfiguration:
  cls: remote
  name: banco
  url: http://objstorage-ro-banco-xfs-rpc-ingress-swh-cassandra

remoteSaamReadOnlyObjstorageConfiguration:
  cls: remote
  name: saam
  url: http://objstorage-ro-saam-zfs-rpc-ingress-swh-cassandra

producerCeleryConfiguration:
  host: rabbitmq.internal.softwareheritage.org
  port: 5672
  user: swhproducer
  pass: ${AMQP_PASSWORD}
  secrets:
    AMQP_PASSWORD:
      secretKeyRef: amqp-secrets
      secretKeyName: swhproducer-password

consumerCeleryConfiguration:
  host: rabbitmq.internal.softwareheritage.org
  port: 5672
  user: swhconsumer
  pass: ${AMQP_PASSWORD}
  secrets:
    AMQP_PASSWORD:
      secretKeyRef: amqp-secrets
      secretKeyName: swhconsumer-password

depositConfiguration:
  host: deposit.softwareheritage.org
  user: ${DEPOSIT_USERNAME}
  pass: ${DEPOSIT_PASSWORD}
  secrets:
    DEPOSIT_USERNAME:
      secretKeyRef: deposit-secrets
      secretKeyName: username
    DEPOSIT_PASSWORD:
      secretKeyRef: deposit-secrets
      secretKeyName: password

postgresqlSchedulerConfiguration:
  cls: postgresql
  host: postgresql-scheduler-rw.internal.softwareheritage.org
  port: 5432
  user: swhscheduler
  pass: ${POSTGRESQL_PASSWORD}
  db: softwareheritage-scheduler
  secrets:
    POSTGRESQL_PASSWORD:
      secretKeyRef: swh-scheduler-postgresql-common-secret
      secretKeyName: postgres-swh-scheduler-password

postgresqlROStorageConfiguration:
  cls: postgresql
  host: postgresql-storage-rw.internal.softwareheritage.org
  port: 5432
  user: guest
  pass: ${POSTGRESQL_PASSWORD}
  db: softwareheritage
  secrets:
    POSTGRESQL_PASSWORD:
      secretKeyRef: swh-storage-postgresql-common-secret
      secretKeyName: postgres-guest-password

postgresqlIndexerStorageConfiguration:
  cls: postgresql
  host: postgresql-indexer-rw.internal.softwareheritage.org
  db: softwareheritage-indexer
  port: 5432
  user: swhstorage
  pass: ${POSTGRESQL_PASSWORD}
  secrets:
    POSTGRESQL_PASSWORD:
      secretKeyRef: swh-indexer-storage-postgresql-secret
      secretKeyName: postgres-swh-indexer-password

postgresqlReadOnlyIndexerStorageConfiguration:
  cls: postgresql
  host: postgresql-indexer-rw.internal.softwareheritage.org
  db: softwareheritage-indexer
  port: 5432
  user: guest
  pass: ${POSTGRESQL_PASSWORD}
  secrets:
    POSTGRESQL_PASSWORD:
      secretKeyRef: swh-indexer-storage-postgresql-secret
      secretKeyName: postgres-guest-password

postgresqlScrubberConfiguration:
  cls: postgresql
  host: postgresql-scrubber-rw.internal.softwareheritage.org
  port: '5432'
  user: swh-scrubber
  pass: ${SCRUBBER_POSTGRESQL_PASSWORD}
  db: swh-scrubber
  secrets:
    SCRUBBER_POSTGRESQL_PASSWORD:
      secretKeyRef: swh-scrubber-postgresql-common-secret
      secretKeyName: postgres-swh-scrubber-password

maskingAdminPostgresqlConfiguration:
  host: postgresql-masking-rw.internal.softwareheritage.org
  port: '5432'
  db: swh-masking
  user: swh-masking
  pass: ${MASKING_ADMIN_PGPASSWORD}
  secrets:
    MASKING_ADMIN_PGPASSWORD:
      secretKeyRef: swh-postgresql-masking-secret
      secretKeyName: postgres-swh-masking-password

maskingStoragePipelineSteps:
  - cls: masking
    postgresqlConfigurationRef: maskingQueryPostgresqlConfiguration

maskingQueryPostgresqlConfiguration:
  host: postgresql-masking-rw.internal.softwareheritage.org
  port: '5432'
  db: swh-masking
  user: guest
  pass: ${MASKING_GUEST_PGPASSWORD}
  secrets:
    MASKING_GUEST_PGPASSWORD:
      secretKeyRef: swh-storage-postgresql-common-secret
      secretKeyName: postgres-guest-password

blockingAdminPostgresqlConfiguration:
  host: postgresql-blocking-rw.internal.softwareheritage.org
  port: '5432'
  db: swh-blocking
  user: swh-blocking
  pass: ${BLOCKING_ADMIN_PGPASSWORD}
  secrets:
   BLOCKING_ADMIN_PGPASSWORD:
      secretKeyRef: swh-postgresql-blocking-secret
      secretKeyName: postgres-swh-blocking-password

blockingQueryPostgresqlConfiguration:
  host: postgresql-blocking-rw.internal.softwareheritage.org
  port: '5432'
  db: swh-blocking
  # The blocking proxy writes to a log table (blocked_origin_log)
  # It needs write credentials
  user: swh-blocking
  pass: ${BLOCKING_ADMIN_PGPASSWORD}
  secrets:
    BLOCKING_ADMIN_PGPASSWORD:
      secretKeyRef: swh-postgresql-blocking-secret
      secretKeyName: postgres-swh-blocking-password

djangoWebConfiguration:
  secrets:
    DJANGO_SECRET_KEY:
      secretKeyRef: swh-webapp-django-secret
      secretKeyName: webapp-django-secret-key

webDjangoApps:
  - swh.web.add_forge_now
  - swh.web.archive_coverage
  - swh.web.badges
  - swh.web.banners
  - swh.web.deposit
  - swh.web.inbound_email
  - swh.web.jslicenses
  - swh.web.mailmap
  - swh.web.metrics
  - swh.web.save_code_now
  - swh.web.save_origin_webhooks
  - swh.web.vault
  - swh.web.provenance

webThrottling:
  internalExemptedNetworkRangesRef: internalNetworkRanges
  externalExemptedNetworkRangesRef: externalAuthorizedNetworkRanges
  cache_uri: memcached:11211
  scopes_with_exempted_networks:
    swh_api:
      limiter_rate:
        default: 120/h
      exempted_networks:
      - 37.187.137.47
    swh_vault_cooking:
      limiter_rate:
        default: 120/h
        GET: 60/m
    swh_save_origin:
      limiter_rate:
        default: 120/h
        POST: 10/h
  scopes:
    swh_api_origin_search:
      limiter_rate:
        default: 10/m
    swh_api_origin_visit_latest:
      limiter_rate:
        default: 700/m
    swh_raw_object:
      limiter_rate:
        default: 120/h

indexerJournalWriterConfiguration:
  brokersConfigurationRef: kafkaBrokers
  cls: kafka
  prefix: swh.journal.indexed
  client_id: swh.idx_storage.journal_writer.${HOSTNAME}
  producer_config:
    message.max.bytes: 1000000000

addForgeNowConfiguration:
  email_address: add-forge-now@archive.softwareheritage.org
  gitlab_pipeline:
    trigger_url: https://gitlab.softwareheritage.org/api/v4/projects/474/trigger/pipeline
    token: ${GITLAB_AFN_TOKEN}
  secrets:
    GITLAB_AFN_TOKEN:
      secretKeyRef: common-secrets
      secretKeyName: gitlab_afn_token

web:
  # Due to the number of cpus on the production nodes
  # nginx starts a lot of workers by default which consumes more memory than the default
  nginxRequestedMemory: 90Mi

inboundEmailConfiguration:
  secrets:
    INBOUND_EMAIL_SHARED_KEY:
      secretKeyRef: common-secrets
      secretKeyName: web-inbound-email-shared-key

externalServices:
  enabled: true
  services:
    search:
      internalName: search-rpc-ingress
      target: archive-production-rke2-ingress-nginx-controller.ingress-nginx.svc.cluster.local
    search-swh-cassandra:
      internalName: search-rpc-ingress-swh-cassandra
      target: archive-production-rke2-ingress-nginx-controller.ingress-nginx.svc.cluster.local
    storage-azure-read-only:
      internalName: storage-azure-read-only-rpc-ingress
      target: archive-production-rke2-ingress-nginx-controller.ingress-nginx.svc.cluster.local
    storage-azure-read-only-swh-cassandra:
      internalName: storage-azure-read-only-rpc-ingress-swh-cassandra
      target: archive-production-rke2-ingress-nginx-controller.ingress-nginx.svc.cluster.local
    storage-cassandra-read-only:
      internalName: storage-cassandra-read-only-rpc-ingress
      target: archive-production-rke2-ingress-nginx-controller.ingress-nginx.svc.cluster.local
    storage-cassandra-read-only-swh-cassandra:
      internalName: storage-cassandra-read-only-rpc-ingress-swh-cassandra
      target: archive-production-rke2-ingress-nginx-controller.ingress-nginx.svc.cluster.local
    indexer-storage-read-only:
      internalName: indexer-storage-read-only-rpc-ingress
      target: archive-production-rke2-ingress-nginx-controller.ingress-nginx.svc.cluster.local
    indexer-storage-read-only-swh-cassandra:
      internalName: indexer-storage-read-only-rpc-ingress-swh-cassandra
      target: archive-production-rke2-ingress-nginx-controller.ingress-nginx.svc.cluster.local
    indexer-storage-read-write:
      internalName: indexer-storage-read-write-rpc-ingress
      target: archive-production-rke2-ingress-nginx-controller.ingress-nginx.svc.cluster.local
    indexer-storage-read-write-swh-cassandra:
      internalName: indexer-storage-read-write-rpc-ingress-swh-cassandra
      target: archive-production-rke2-ingress-nginx-controller.ingress-nginx.svc.cluster.local
    objstorage-read-only:
      internalName: objstorage-read-only-rpc-ingress
      target: archive-production-rke2-ingress-nginx-controller.ingress-nginx.svc.cluster.local
    objstorage-read-only-swh-cassandra:
      internalName: objstorage-read-only-rpc-ingress-swh-cassandra
      target: archive-production-rke2-ingress-nginx-controller.ingress-nginx.svc.cluster.local
    vault:
      internalName: vault-rpc-ingress
      target: archive-production-rke2-ingress-nginx-controller.ingress-nginx.svc.cluster.local
    vault-swh-cassandra:
      internalName: vault-rpc-ingress-swh-cassandra
      target: archive-production-rke2-ingress-nginx-controller.ingress-nginx.svc.cluster.local
    scheduler:
      internalName: scheduler-rpc-ingress
      target: archive-production-rke2-ingress-nginx-controller.ingress-nginx.svc.cluster.local
    scheduler-swh-cassandra:
      internalName: scheduler-rpc-ingress-swh-cassandra
      target: archive-production-rke2-ingress-nginx-controller.ingress-nginx.svc.cluster.local
    objstorage-ro-saam-zfs:
      internalName: objstorage-ro-saam-zfs-rpc-ingress
      target: archive-production-rke2-ingress-nginx-controller.ingress-nginx.svc.cluster.local
    objstorage-ro-saam-zfs-swh-cassandra:
      internalName: objstorage-ro-saam-zfs-rpc-ingress-swh-cassandra
      target: archive-production-rke2-ingress-nginx-controller.ingress-nginx.svc.cluster.local
    objstorage-delete-saam-zfs:
      internalName: objstorage-delete-saam-zfs-rpc-ingress
      target: archive-production-rke2-ingress-nginx-controller.ingress-nginx.svc.cluster.local
    objstorage-delete-saam-zfs-swh-cassandra:
      internalName: objstorage-delete-saam-zfs-rpc-ingress-swh-cassandra
      target: archive-production-rke2-ingress-nginx-controller.ingress-nginx.svc.cluster.local
    objstorage-ro-banco-xfs:
      internalName: objstorage-ro-banco-xfs-rpc-ingress
      target: archive-production-rke2-ingress-nginx-controller.ingress-nginx.svc.cluster.local
    objstorage-ro-banco-xfs-swh-cassandra:
      internalName: objstorage-ro-banco-xfs-rpc-ingress-swh-cassandra
      target: archive-production-rke2-ingress-nginx-controller.ingress-nginx.svc.cluster.local
    objstorage-delete-banco-xfs:
      internalName: objstorage-delete-banco-xfs-rpc-ingress
      target: archive-production-rke2-ingress-nginx-controller.ingress-nginx.svc.cluster.local
    objstorage-delete-banco-xfs-swh-cassandra:
      internalName: objstorage-delete-banco-xfs-rpc-ingress-swh-cassandra
      target: archive-production-rke2-ingress-nginx-controller.ingress-nginx.svc.cluster.local
    storage-rw-postgresql:
      internalName: storage-rw-postgresql-ingress
      target: archive-production-rke2-ingress-nginx-controller.ingress-nginx.svc.cluster.local
    storage-rw-postgresql-saam:
      internalName: storage-rw-postgresql-saam-ingress
      target: archive-production-rke2-ingress-nginx-controller.ingress-nginx.svc.cluster.local
    counters:
      internalName: counters-rpc-ingress
      target: archive-production-rke2-ingress-nginx-controller.ingress-nginx.svc.cluster.local
    counters-swh-cassandra:
      internalName: counters-rpc-ingress-swh-cassandra
      target: archive-production-rke2-ingress-nginx-controller.ingress-nginx.svc.cluster.local
    provenance:
      internalName: webapp-provenance-ingress
      target: archive-production-rke2-ingress-nginx-controller.ingress-nginx.svc.cluster.local
    provenance-swh-cassandra:
      internalName: webapp-provenance-ingress-swh-cassandra
      target: archive-production-rke2-ingress-nginx-controller.ingress-nginx.svc.cluster.local

svixConfiguration:
  svix:
    server_url: https://svix.internal.softwareheritage.org
    auth_token: ${SVIX_AUTH_TOKEN}
  event_retention_period: 7
  secrets:
    SVIX_AUTH_TOKEN:
      secretKeyRef: common-secrets
      secretKeyName: svix-token

webhooksConfiguration:
  secrets:
    WEBHOOKS_SECRET:
      secretKeyRef: common-secrets
      secretKeyName: webhooks-secret

ROStorageConfiguration:
  storageConfigurationRef: postgresqlROStorageConfiguration

postgresqlVaultConfiguration:
  cls: postgresql
  host: postgresql-vault-rw.internal.softwareheritage.org
  port: 5432
  db: swh-vault
  user: swh-vault
  pass: ${POSTGRESQL_PASSWORD}
  secrets:
    POSTGRESQL_PASSWORD:
      secretKeyRef: swh-vault-postgresql-secret
      secretKeyName: postgres-swh-vault-password

remoteROStorageConfiguration:
  pipelineStepsRef: retryStoragePipelineSteps
  storageConfigurationRef: remoteStorageConfiguration

remoteStorageConfiguration:
  cls: remote
  url: http://storage-azure-read-only-rpc-ingress-swh-cassandra

azureCacheConfiguration:
  cls: azure
  connection_string: "DefaultEndpointsProtocol=https;AccountName=swhvaultstorage;AccountKey=${ACCOUNT_KEY};EndpointSuffix=core.windows.net"
  container_name: contents-uncompressed
  compression: none
  secrets:
    ACCOUNT_KEY:
      secretKeyRef: swh-vault-azure-secret
      secretKeyName: azure-swh-vault-key

journalClientCountersConfiguration:
  brokersConfigurationRef: kafkaBrokers
  group_id: swh.counters.journal_client
  prefix: swh.journal.objects
  object_types:
  - content
  - directory
  - origin
  - origin_visit
  - origin_visit_status
  - release
  - revision
  - skipped_content
  - snapshot
  message.max.bytes: 524288000

countersRedis:
  cls: redis
  host: counters1.internal.softwareheritage.org:6379

countersHistoryConfiguration:
  cls: prometheus
  prometheus_host: thanos.internal.admin.swh.network
  prometheus_port: 19191
  live_data_start: 1618415227
  interval: 12h
  labels:
    environment: production

postgresqlDepositConfiguration:
  host: postgresql-deposit-rw.internal.softwareheritage.org
  port: 5432
  db: softwareheritage-deposit
  user: swhstorage
  pass: ${POSTGRESQL_PASSWORD}
  secrets:
    POSTGRESQL_PASSWORD:
      secretKeyRef: swh-postgresql-deposit-secrets
      secretKeyName: postgres-swh-deposit-password

djangoDepositConfiguration:
  secrets:
    DJANGO_SECRET_KEY:
      secretKeyRef: swh-deposit-django-secret
      secretKeyName: deposit-django-secret-key

azureDepositConfiguration:
  connection_string: "DefaultEndpointsProtocol=https;AccountName=swhdepositstorage;AccountKey=${ACCOUNT_KEY};EndpointSuffix=core.windows.net"
  container_name: deposit-tarballs
  content_type: application/octet-stream
  content_encoding: ""
  secrets:
    ACCOUNT_KEY:
      secretKeyRef: swh-deposit-azure-secret
      secretKeyName: azure-swh-deposit-key

postgresqlSyncMaskingProxyMailmapsConfiguration:
  cls: postgresql
  host: postgresql-masking-rw.internal.softwareheritage.org
  port: '5432'
  db: swh-masking
  user: swhmailmap
  pass: ${PGPASSWORD}
  secrets:
    PGPASSWORD:
      secretKeyRef: swh-postgresql-syncmailmap-secret
      secretKeyName: postgres-syncmailmap-password
