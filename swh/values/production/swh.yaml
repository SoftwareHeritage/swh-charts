rpcRWStorageConfiguration:
  cls: remote
  url: http://storage-rw-postgresql-ingress
  enable_requests_retry: true

remoteStorageConfiguration:
  cls: remote
  url: http://storage-azure-read-only-rpc-ingress
  enable_requests_retry: true

remoteRpcRWStorageConfiguration:
  pipelineStepsRef: storagePipelineSteps
  storageConfigurationRef: rpcRWStorageConfiguration

storageReplayerPipelineSteps:
  - &bufferStorage
    cls: buffer
    min_batch_size:
      content: 1000
      content_bytes: 52428800
      directory: 1000
      directory_entries: 6000
      revision: 1000
      revision_parents: 2000
      revision_bytes: 52428800
      release: 1000
      release_bytes: 52428800
      extid: 1000
  - cls: filter
  - cls: retry

directPostgresqlReplayerStorageConfiguration:
  pipelineStepsRef: storageReplayerPipelineSteps
  storageConfigurationRef: postgresqlRWStorageConfiguration
  objstorageConfigurationRef: noopObjstorageConfiguration

rwStoragePostgresqlConfiguration:
  storageConfigurationRef: postgresqlRWStorageConfiguration
  pipelineStepsRef: emptyStoragePipelineSteps

readOnlyPostgresqlStorageConfiguration:
  pipelineStepsRef: maskingStoragePipelineSteps
  storageConfigurationRef: primaryPostgresqlROStorageConfiguration
  objstorageConfigurationRef: roObjstorageBestEffortConfiguration

postgresqlSyncmailmapsConfiguration:
  cls: postgresql
  host: postgresql-storage-rw.internal.softwareheritage.org
  port: 5432
  db: softwareheritage
  user: swhmailmap
  pass: ${PGPASSWORD}
  secrets:
    PGPASSWORD:
      secretKeyRef: swh-postgresql-syncmailmap-secret
      secretKeyName: postgres-syncmailmap-password

postgresqlWebConfiguration:
  host: postgresql-web-rw.internal.softwareheritage.org
  port: 5432
  db: swh-web
  user: swh-web
  pass: ${POSTGRESQL_PASSWORD}
  secrets:
    POSTGRESQL_PASSWORD:
      secretKeyRef: swh-postgresql-web-secrets
      secretKeyName: postgres-swh-web-password

primaryPostgresqlROStorageConfiguration:
  cls: postgresql
  host: postgresql-storage-rw.internal.softwareheritage.org
  port: 5432
  user: guest
  pass: ${POSTGRESQL_GUEST_PASSWORD}
  db: softwareheritage
  secrets:
    POSTGRESQL_GUEST_PASSWORD:
      secretKeyRef: swh-storage-postgresql-common-secret
      secretKeyName: postgres-guest-password

secondaryPostgresqlRWStorageConfiguration:
  cls: postgresql
  host: postgresql-storage-replica.internal.softwareheritage.org
  port: 5432
  user: swhstorage
  pass: ${POSTGRESQL_PASSWORD}
  db: softwareheritage
  secrets:
    POSTGRESQL_PASSWORD:
      secretKeyRef: swh-storage-postgresql-common-secret
      secretKeyName: postgres-swh-storage-password

secondaryPostgresqlROStorageConfiguration:
  cls: postgresql
  host: postgresql-storage-replica.internal.softwareheritage.org
  port: 5432
  user: guest
  pass: ${POSTGRESQL_GUEST_PASSWORD}
  db: softwareheritage
  secrets:
    POSTGRESQL_GUEST_PASSWORD:
      secretKeyRef: swh-storage-postgresql-common-secret
      secretKeyName: postgres-guest-password

## Direct postgresql connection without any filter or objstorage
scrubberROStoragePrimaryConfiguration:
  storageConfigurationRef: primaryPostgresqlROStorageConfiguration

## Direct postgresql connection without any filter or objstorage
scrubberROStorageSecondaryConfiguration:
  storageConfigurationRef: secondaryPostgresqlROStorageConfiguration

graphql:
  enabled: true
  deployments:
    # Instance to serve https://webapp-postgresql.internal.softwareheritage.org/graphql/
    postgresql:
      replicas: 2
      gunicorn:
        workers: 4
        threads: 2
        timeout: 3600
      storageConfigurationRef: remoteROStorageConfiguration
      searchConfigurationRef: remoteSearchConfiguration
      introspection: yes
      hosts:
        - webapp-postgresql.internal.softwareheritage.org
      ingress:
        enabled: true
        extraAnnotations:
          nginx.ingress.kubernetes.io/rewrite-target: /
        endpoints:
          default:
            paths:
              - path: /graphql/
      auth:
        enabled: true
        server: https://auth.softwareheritage.org/auth/
        realm: SoftwareHeritage
        client: swh-web
        cacheUrl: memcached://memcached:11211
      maxRawContentSize: 10000

toolbox:
  enabled: true
  configs:
    storage:
      storageDbConfigurationRef: postgresqlRWStorageConfiguration
    storage-secondary:
      moduleName: storage
      storageDbConfigurationRef: secondaryPostgresqlRWStorageConfiguration
    scheduler:
      schedulerDbConfigurationRef: postgresqlSchedulerConfiguration
      celeryConfigurationRef: producerCeleryConfiguration
    scrubber-journal:
      scrubberDbConfigurationRef: postgresqlScrubberConfiguration
      journalClientConfigurationRef: authenticatedJournalClientConfiguration
    scrubber-storage-primary:
      moduleName: scrubber
      scrubberDbConfigurationRef: postgresqlScrubberConfiguration
      storageConfigurationRef: scrubberROStoragePrimaryConfiguration
    scrubber-storage-secondary:
      moduleName: scrubber
      scrubberDbConfigurationRef: postgresqlScrubberConfiguration
      storageConfigurationRef: scrubberROStorageSecondaryConfiguration
    indexer-storage:
      moduleName: indexer
      moduleConfigKey: indexer_storage
      indexerDbConfigurationRef: postgresqlIndexerStorageConfiguration
    webhooks:
      webhooksConfigurationRef: svixConfiguration
    vault:
      vaultDbConfigurationRef: postgresqlVaultConfiguration

scrubber:
  enabled: true
  scrubberDatabaseConfigurationRef: postgresqlScrubberConfiguration
  priorityClassName: background-workload
  objstorageChecker:
    enabled: false
  journalChecker:
    enabled: false
    journalClientConfigurationRef: authenticatedJournalClientConfiguration
    deployments:
      directory:
        # Disabled until a fix or workaroud for swh/devel/swh-scrubber#4698
        # is available
        enabled: false
        configName: journal-checker-directory
        journalClientOverrides:
          batch_size: 100
          on_eof: restart
        object: directory
        replicas: 2
        requestedCpu: 1
        requestedMemory: 200Mi
      release:
        configName: journal-checker-release
        journalClientOverrides:
          batch_size: 200
          privileged: true
          on_eof: restart
        object: release
        replicas: 1
        requestedCpu: 1
        requestedMemory: 200Mi
      revision:
        configName: journal-checker-revision
        journalClientOverrides:
          privileged: true
          on_eof: restart
        object: revision
        replicas: 2
        requestedCpu: 1
        requestedMemory: 250Mi
      snapshot:
        configName: journal-checker-snapshot
        object: snapshot
        journalClientOverrides:
          on_eof: restart
        replicas: 2
        requestedCpu: 1
        requestedMemory: 250Mi
  storageChecker:
    enabled: true
    deployments:
      primary-directory-references:
        storageConfigurationRef: scrubberROStoragePrimaryConfiguration
        configName: storage-primary-references-directory
        object: directory
        replicas: 2
        requestedCpu: 100m
        requestedMemory: 100Mi
      primary-directory-hashes:
        storageConfigurationRef: scrubberROStoragePrimaryConfiguration
        configName: storage-primary-hashes-directory
        object: directory
        replicas: 2
        requestedCpu: 100m
        requestedMemory: 100Mi
      primary-release-references:
        # until https://gitlab.softwareheritage.org/swh/devel/swh-scrubber/-/issues/4699 fix
        enabled: false
        storageConfigurationRef: scrubberROStoragePrimaryConfiguration
        configName: storage-primary-references-release
        object: release
        replicas: 2
      primary-release-hashes:
        # until https://gitlab.softwareheritage.org/swh/devel/swh-scrubber/-/issues/4699 fix
        enabled: false
        storageConfigurationRef: scrubberROStoragePrimaryConfiguration
        configName: storage-primary-hashes-release
        object: release
        replicas: 2
      primary-revision-references:
        # until https://gitlab.softwareheritage.org/swh/devel/swh-scrubber/-/issues/4699 fix
        enabled: false
        storageConfigurationRef: scrubberROStoragePrimaryConfiguration
        configName: storage-primary-references-revision
        replicas: 2
        object: revision
      primary-revision-hashes:
        # until https://gitlab.softwareheritage.org/swh/devel/swh-scrubber/-/issues/4699 fix
        enabled: false
        storageConfigurationRef: scrubberROStoragePrimaryConfiguration
        configName: storage-primary-hashes-revision
        replicas: 2
        object: revision
      primary-snapshot-references:
        # until https://gitlab.softwareheritage.org/swh/devel/swh-scrubber/-/issues/4699 fix
        enabled: false
        storageConfigurationRef: scrubberROStoragePrimaryConfiguration
        configName: storage-primary-references-snapshot
        replicas: 2
        object: snapshot
        requestedCpu: 150m
        requestedMemory: 128Mi
      primary-snapshot-hashes:
        # until https://gitlab.softwareheritage.org/swh/devel/swh-scrubber/-/issues/4699 fix
        enabled: false
        storageConfigurationRef: scrubberROStoragePrimaryConfiguration
        configName: storage-primary-hashes-snapshot
        replicas: 2
        object: snapshot
        requestedCpu: 150m
        requestedMemory: 128Mi
      secondary-directory-references:
        enabled: false
        storageConfigurationRef: scrubberROStorageSecondaryConfiguration
        configName: storage-secondary-references-directory
        object: directory
        replicas: 2
        requestedCpu: 100m
        requestedMemory: 100Mi
      secondary-directory-hashes:
        enabled: false
        storageConfigurationRef: scrubberROStorageSecondaryConfiguration
        configName: storage-secondary-hashes-directory
        object: directory
        replicas: 2
        requestedCpu: 100m
        requestedMemory: 100Mi
      secondary-release-references:
        # until https://gitlab.softwareheritage.org/swh/devel/swh-scrubber/-/issues/4699 fix
        enabled: false
        storageConfigurationRef: scrubberROStorageSecondaryConfiguration
        configName: storage-secondary-references-release
        object: release
        replicas: 2
      secondary-release-hashes:
        # until https://gitlab.softwareheritage.org/swh/devel/swh-scrubber/-/issues/4699 fix
        enabled: false
        storageConfigurationRef: scrubberROStorageSecondaryConfiguration
        configName: storage-secondary-hashes-release
        object: release
        replicas: 2
      secondary-revision-references:
        # until https://gitlab.softwareheritage.org/swh/devel/swh-scrubber/-/issues/4699 fix
        enabled: false
        storageConfigurationRef: scrubberROStorageSecondaryConfiguration
        configName: storage-secondary-references-revision
        replicas: 2
        object: revision
      secondary-revision-hashes:
        # until https://gitlab.softwareheritage.org/swh/devel/swh-scrubber/-/issues/4699 fix
        enabled: false
        storageConfigurationRef: scrubberROStorageSecondaryConfiguration
        configName: storage-secondary-hashes-revision
        replicas: 2
        object: revision
      secondary-snapshot-references:
        enabled: false
        storageConfigurationRef: scrubberROStorageSecondaryConfiguration
        configName: storage-secondary-references-snapshot
        replicas: 2
        object: snapshot
        requestedCpu: 150m
        requestedMemory: 128Mi
      secondary-snapshot-hashes:
        enabled: false
        storageConfigurationRef: scrubberROStorageSecondaryConfiguration
        configName: storage-secondary-hashes-snapshot
        replicas: 2
        object: snapshot
        requestedCpu: 150m
        requestedMemory: 128Mi

storage:
  enabled: true
  logLevel: WARN
  deployments:
    postgresql-azure-readonly:
      autoScaling:
        minReplicaCount: 2
        maxReplicaCount: 10
        cpuPercentageUsage: 30
      gunicorn:
        workers: 8
        threads: 4
      requestedCpu: 500m
      requestedMemory: 1.5Gi
      storageConfigurationRef: readOnlyPostgresqlStorageConfiguration
      hosts:
        - storage-azure-read-only-rpc-ingress
        - storage-postgresql-ro.internal.softwareheritage.org
      ingress:
        enabled: true
        whitelistSourceRangeRef: internalNetworkRanges
        extraAnnotations:
          nginx.ingress.kubernetes.io/proxy-body-size: 4G
          nginx.ingress.kubernetes.io/proxy-buffering: "on"
        endpoints:
          default:
            paths:
              - path: /
            extraWhitelistSourceRange:
              # vpn network
              - 192.168.101.0/24

historyCountersUrl: http://counters-rpc-ingress/counters_history/history.json#

webGraphConfiguration:
  server_url: http://graph.internal.softwareheritage.org:5009/graph/
  max_edges:
    staff: 0
    user: 100000
    anonymous: 1000

web:
  enabled: true
  logLevel: WARN
  deployments:
    # Instance to serve https://webapp-postgresql.internal.softwareheritage.org
    postgresql:
      gunicorn:
        workers: 8
        threads: 1
        timeout: 3600
      replicas: 1
      requestedCpu: 500m
      requestedMemory: 6Gi
      cronJobs:
        refreshSCNStatus:
          enabled: false
          cron: "*/2 * * * *"
          command:
            - "refresh_savecodenow_statuses"
          concurrencyPolicy: Forbid
          priorityClassName: frontend-rpc-workload
        syncMaskingMailmaps:
          enabled: false
          command:
            - "sync_masking_mailmaps"
            - "--perform"
            - "service=syncmaskingmailmaps"
          cron: "15 *  * * *"
          concurrencyPolicy: Forbid
          configurationRef: postgresqlSyncMaskingProxyMailmapsConfiguration
          priorityClassName: frontend-rpc-workload
          pgService: true
      hosts:
        - webapp-postgresql.internal.softwareheritage.org
      ingress:
        enabled: true
        secretName: swh-web-archive-crt
        extraAnnotations:
          cert-manager.io/cluster-issuer: letsencrypt-production-gandi
          kubernetes.io/ingress.class: nginx
          kubernetes.io/tls-acme: "true"
          nginx.ingress.kubernetes.io/ssl-redirect: "true"
        tlsEnabled: true
        endpoints:
          default:
            paths:
              - path: /
          static:
            extraAnnotations:
              nginx.ingress.kubernetes.io/use-regex: "true"
              nginx.ingress.kubernetes.io/rewrite-target: /static/$2
            paths:
              - path: /()(robots.txt)$
                pathType: ImplementationSpecific
                port: 80
              - path: /static(/|$)(.*)
                pathType: ImplementationSpecific
                port: 80
          authenticated:
            paths:
              - path: /api/1/entity/
              - path: /api/1/content/[^/]+/symbol/
            # auth-file with authentication
            authentication: swh/web-auth-secrets
      databaseConfigurationRef: postgresqlWebConfiguration
      searchConfigurationRef: remoteSearchConfiguration
      schedulerConfigurationRef: remoteSchedulerConfiguration
      storageConfigurationRef: remoteStorageConfiguration
      vaultConfigurationRef: remoteVaultConfiguration
      indexerStorageConfigurationRef: remoteReadOnlyIndexerStorageConfiguration
      countersConfigurationRef: remoteCountersConfiguration
      historyCountersUrlRef: historyCountersUrl
      esWorkersIndexUrlRef: esWorkersIndexUrl
      djangoConfigurationRef: djangoWebConfiguration
      giveConfigurationRef: giveConfiguration
      throttlingConfigurationRef: webThrottling
      addForgeNowConfigurationRef: addForgeNowConfiguration
      webhooksConfigurationRef: webhooksConfiguration
      depositConfigurationRef: depositConfiguration
      keycloakConfigurationRef: keycloakConfiguration
      inboundEmailConfigurationRef: inboundEmailConfiguration
      provenanceConfigurationRef: provenanceConfiguration
      djangoAppsRef: webDjangoApps
      graphConfigurationRef: webGraphConfiguration
      extraConfig:
        save_code_now_webhook_secret: ${WEBHOOKS_SECRET}
        search_config:
          metadata_backend: swh-search
        inbound_email:
          shared_key: ${INBOUND_EMAIL_SHARED_KEY}
        content_display_max_size: 5242880
        give:
          public_key: ${GIVE_PUBLIC_KEY}
          token: ${GIVE_PRIVATE_TOKEN}
        matomo:
          url: https://piwik.inria.fr/
          site_id: 59

# Replayer kafka -> postgresql to keep in sync with the main cassandra backend
storageReplayer:
  enabled: true
  journalClientConfigurationRef: storageReplayerJournalClientConfiguration
  storageConfigurationRef: directPostgresqlReplayerStorageConfiguration
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: "swh/replayer"
            operator: In
            values:
            - "true"
  # Make the replayers fail fast if any issue arise (at first)
  # error_reporter:
  #   host: redis-postgresql-replayers.redis  # /!\ this instance does not exist yet
  #   port: 6379
  #   db: 1
  deployments:
    content:
      journalClientOverrides:
        group_id: swh-prod-postgresql-replayer-content
        object_types:
          - content
      requestedCpu: 425m
      requestedMemory: 200Mi
      autoScaling:
        maxReplicaCount: 64
    directory:
      journalClientOverrides:
        group_id: swh-prod-postgresql-replayer-directory
        object_types:
          - directory
        batch_size: 250
      # Full replay
      requestedCpu: 500m
      requestedMemory: 250Mi
      # Follow up consumption
      # requestedMemory: 100Mi
      autoScaling:
        maxReplicaCount: 16
    extid:
      journalClientOverrides:
        group_id: swh-prod-postgresql-replayer-extid
        object_types:
          - extid
        batch_size: 1000
      # Full replay
      # requestedCpu: 400m
      requestedMemory: 200Mi
      # Follow up consumption
      requestedCpu: 50m
      autoScaling:
        maxReplicaCount: 5
    metadata:
      journalClientOverrides:
        group_id: swh-prod-postgresql-replayer-metadata
        object_types:
          - metadata_authority
          - metadata_fetcher
      # follow up consumption
      requestedCpu: 50m
      requestedMemory: 100Mi
      autoScaling:
        maxReplicaCount: 5
    raw-extrinsic-metadata:
      journalClientOverrides:
        group_id: swh-prod-postgresql-replayer-raw-extrinsic-metadata
        object_types:
        - raw_extrinsic_metadata
        batch_size: 250
      # Full replay
      requestedCpu: 400m
      requestedMemory: 200Mi
      # follow up consumption
      # requestedCpu: 50m
      autoScaling:
        maxReplicaCount: 5
    origin:
      journalClientOverrides:
        group_id: swh-prod-postgresql-replayer-origin
        object_types:
          - origin
        batch_size: 1000
      # Full replay
      # requestedCpu: 400m
      requestedMemory: 200Mi
      # Follow up consumption
      requestedCpu: 50m
      autoScaling:
        maxReplicaCount: 5
    origin-visit:
      journalClientOverrides:
        group_id: swh-prod-postgresql-replayer-origin-visit
        object_types:
          - origin_visit
        batch_size: 1000
      # Full replay
      requestedCpu: 400m
      requestedMemory: 400Mi
      # Follow up consumption
      # requestedCpu: 100m
      # requestedMemory: 100Mi
      autoScaling:
        maxReplicaCount: 5
    origin-visit-status:
      journalClientOverrides:
        group_id: swh-prod-postgresql-replayer-origin-visit-status
        object_types:
          - origin_visit_status
        batch_size: 1000
      # Full replay
      requestedCpu: 500m
      requestedMemory: 300Mi
      # Follow up consumption
      # requestedCpu: 55m
      # requestedMemory: 200Mi
      autoScaling:
        maxReplicaCount: 5
    release:
      journalClientOverrides:
        group_id: swh-prod-postgresql-replayer-release
        object_types:
          - release
        batch_size: 1000
      # Full replay
      # requestedCpu: 600m
      requestedMemory: 300Mi
      # follow up consumption
      requestedCpu: 50m
      autoScaling:
        maxReplicaCount: 5
    revision:
      journalClientOverrides:
        group_id: swh-prod-postgresql-replayer-revision
        object_types:
          - revision
        batch_size: 1000
      # Full replay
      # requestedCpu: 750m
      # requestedMemory: 750Mi
      # follow up consumption
      requestedCpu: 50m
      requestedMemory: 400Mi
      autoScaling:
        maxReplicaCount: 5
    skipped-content:
      journalClientOverrides:
        group_id: swh-prod-postgresql-replayer-skipped-content
        object_types:
          - skipped_content
        batch_size: 100
      # Full replay
      # requestedCpu: 300m
      requestedMemory: 400Mi
      # follow up consumption
      requestedCpu: 50m
      autoScaling:
        maxReplicaCount: 5
    snapshot:
      journalClientOverrides:
        group_id: swh-prod-postgresql-replayer-snapshot
        object_types:
          - snapshot
        batch_size: 250
      # Full replay
      # requestedCpu: 400m
      requestedMemory: 250Mi
      # follow up consumption
      requestedCpu: 80m
      autoScaling:
        maxReplicaCount: 5
