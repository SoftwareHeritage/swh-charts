searchJournalClientConfiguration:
  brokersConfigurationRef: kafkaBrokers
  group_id: swh.search.journal_client

remoteReadOnlyIndexerStorageConfiguration:
  cls: remote
  url: http://indexer-storage-read-only-rpc-ingress

saamStorageConfiguration:
  cls: remote
  url: http://saam.internal.softwareheritage.org:5002

remoteSaamStorageConfiguration:
  pipelineStepsRef: storagePipelineSteps
  storageConfigurationRef: saamStorageConfiguration

remoteStorageConfiguration:
  cls: remote
  url: http://storage-azure-read-only-rpc-ingress

readOnlyStoragePipelineSteps:
  - cls: retry

remoteROStorageConfiguration:
  pipelineStepsRef: readOnlyStoragePipelineSteps
  storageConfigurationRef: remoteStorageConfiguration

postgresqlROStorageConfiguration:
  cls: postgresql
  host: db.internal.softwareheritage.org
  port: 5432
  user: guest
  pass: ${POSTGRESQL_PASSWORD}
  db: softwareheritage
  secrets:
    POSTGRESQL_PASSWORD:
      secretKeyRef: swh-storage-postgresql-common-secret
      secretKeyName: postgres-guest-password

postgresqlReadOnlyIndexerStorageConfiguration:
  cls: postgresql
  host: db.internal.softwareheritage.org
  db: softwareheritage-indexer
  port: 5432
  user: guest
  pass: ${POSTGRESQL_PASSWORD}
  secrets:
    POSTGRESQL_PASSWORD:
      secretKeyRef: swh-indexer-storage-postgresql-secret
      secretKeyName: postgres-guest-password

readOnlyStorageConfiguration:
  pipelineStepsRef: readOnlyStoragePipelineSteps
  storageConfigurationRef: postgresqlROStorageConfiguration
  objstorageConfigurationRef: roObjstorageConfiguration

azureCacheConfiguration:
  cls: azure
  connection_string: "DefaultEndpointsProtocol=https;AccountName=swhvaultstorage;AccountKey=${ACCOUNT_KEY};EndpointSuffix=core.windows.net"
  api_secret_key: ${API_SECRET_KEY}
  container_name: contents-uncompressed
  secrets:
    API_SECRET_KEY:
      secretKeyRef: swh-vault-azure-secret
      secretKeyName: azure-swh-vault

postgresqlStorageConfiguration:
  cls: postgresql
  host: db.internal.softwareheritage.org
  port: 5432
  user: swhstorage
  pass: ${POSTGRESQL_PASSWORD}
  db: softwareheritage
  secrets:
    POSTGRESQL_PASSWORD:
      secretKeyRef: swh-storage-postgresql-common-secret
      secretKeyName: postgres-swh-storage-password

postgresqlSyncmailmapsConfiguration:
  cls: postgresql
  host: db.internal.softwareheritage.org
  port: 5432
  db: swh
  user: swhmailmap
  pass: ${PGPASSWORD}
  secrets:
    PGPASSWORD:
      secretKeyRef: swh-postgresql-syncmailmap-secret
      secretKeyName: postgres-syncmailmap-password

postgresqlWebConfiguration:
  host: db.internal.softwareheritage.org
  port: 5432
  db: swh-web
  user: swh-web
  pass: ${POSTGRESQL_PASSWORD}
  secrets:
    POSTGRESQL_PASSWORD:
      secretKeyRef: swh-postgresql-web-secrets
      secretKeyName: postgres-swh-web-password

postgresqlSchedulerConfiguration:
  cls: postgresql
  host: db.internal.softwareheritage.org
  port: 5432
  user: swhscheduler
  pass: ${POSTGRESQL_PASSWORD}
  db: softwareheritage-scheduler
  secrets:
    POSTGRESQL_PASSWORD:
      secretKeyRef: swh-scheduler-postgresql-common-secret
      secretKeyName: postgres-swh-scheduler-password

scrubberJournalClientConfiguration:
  cls: kafka
  brokersConfigurationRef: internalSecuredKafkaBrokers
  group_id: swh-archive-prod-journalchecker
  on_eof: restart
  sasl.mechanism: SCRAM-SHA-512
  security.protocol: SASL_SSL
  sasl.username: swh-archive-prod
  sasl.password: ${BROKER_USER_PASSWORD}
  prefix: swh.journal.objects
  secrets:
    BROKER_USER_PASSWORD:
      secretKeyRef: swh-archive-broker-secret
      secretKeyName: BROKER_USER_PASSWORD

primaryPostgresqlROStorageConfiguration:
  cls: postgresql
  host: db.internal.softwareheritage.org
  port: 5432
  user: guest
  pass: ${POSTGRESQL_PASSWORD}
  db: softwareheritage
  secrets:
    POSTGRESQL_PASSWORD:
      secretKeyRef: swh-storage-postgresql-common-secret
      secretKeyName: postgres-guest-password

secondaryPostgresqlRWStorageConfiguration:
  cls: postgresql
  host: massmoca.internal.softwareheritage.org
  port: 5432
  user: swhstorage
  pass: ${POSTGRESQL_PASSWORD}
  db: softwareheritage
  secrets:
    POSTGRESQL_PASSWORD:
      secretKeyRef: swh-storage-postgresql-common-secret
      secretKeyName: postgres-swh-storage-password

secondaryPostgresqlROStorageConfiguration:
  cls: postgresql
  host: massmoca.internal.softwareheritage.org
  port: 5432
  user: guest
  pass: ${POSTGRESQL_PASSWORD}
  db: softwareheritage
  secrets:
    POSTGRESQL_PASSWORD:
      secretKeyRef: swh-storage-postgresql-common-secret
      secretKeyName: postgres-guest-password

## Direct postgresql connection without any filter or objstorage
scrubberROStoragePrimaryConfiguration:
  storageConfigurationRef: primaryPostgresqlROStorageConfiguration

## Direct postgresql connection without any filter or objstorage
scrubberROStorageSecondaryConfiguration:
  storageConfigurationRef: secondaryPostgresqlROStorageConfiguration

graphql:
  enabled: true
  replicas: 2
  storageConfigurationRef: remoteROStorageConfiguration
  searchConfigurationRef: remoteSearchConfiguration
  introspection: yes
  hosts:
    - graphql.internal.softwareheritage.org
  ingress:
    enabled: true
    whitelistSourceRangeRef: internalNetworkRanges
    endpoints:
      default:
        paths:
          - path: /
        extraWhitelistSourceRange:
          # vpn network
          - 192.168.101.0/24
  gunicorn:
    threads: 4
    workers: 2
    timeout: 3600
  auth:
    enabled: true
    server: https://auth.softwareheritage.org/auth/
    realm: SoftwareHeritage
    client: swh-web
    cacheUrl: memcached://memcached:11211
  maxRawContentSize: 10000

listers:
  enabled: true
  storageConfigurationRef: remoteROStorageConfiguration
  schedulerConfigurationRef: remoteSchedulerConfiguration
  celeryConfigurationRef: consumerCeleryConfiguration
  deployments:
    bower:
      queues:
      - swh.lister.bower.tasks.BowerListerTask
      autoScaling:
        maxReplicaCount: 1
    bitbucket:
      queues:
      - swh.lister.bitbucket.tasks.IncrementalBitBucketLister
      - swh.lister.bitbucket.tasks.FullBitBucketRelister
      autoScaling:
        maxReplicaCount: 1
      requestedMemory: 600Mi
      requestedCpu: 200m
    cgit:
      queues:
        - swh.lister.cgit.tasks.CGitListerTask
      autoScaling:
        maxReplicaCount: 1
    cran:
      queues:
      - swh.lister.cran.tasks.CRANListerTask
      autoScaling:
        maxReplicaCount: 1
    debian:
      queues:
        - swh.lister.debian.tasks.DebianListerTask
      autoScaling:
        maxReplicaCount: 1
    gitea:
      queues:
      - swh.lister.gitea.tasks.IncrementalGiteaLister
      - swh.lister.gitea.tasks.RangeGiteaLister
      - swh.lister.gitea.tasks.FullGiteaRelister
      autoScaling:
        maxReplicaCount: 1
    github-full:
      queues:
      - swh.lister.github.tasks.FullGitHubRelister
      - swh.lister.github.tasks.RangeGitHubLister
      autoScaling:
        maxReplicaCount: 12
    github-incremental:
      queues:
      - swh.lister.github.tasks.IncrementalGitHubLister
      autoScaling:
        maxReplicaCount: 1
    gitiles:
      queues:
      - swh.lister.gitiles.tasks.GitilesListerTask
      autoScaling:
        maxReplicaCount: 1
    gitlab:
      queues:
      - swh.lister.gitlab.tasks.IncrementalGitLabLister
      - swh.lister.gitlab.tasks.FullGitLabRelister
      autoScaling:
        maxReplicaCount: 4
    gitweb:
      queues:
      - swh.lister.gitweb.tasks.GitwebListerTask
      autoScaling:
        maxReplicaCount: 1
    gnu-full:
      queues:
        - swh.lister.gnu.tasks.GNUListerTask
      autoScaling:
        maxReplicaCount: 1
    gogs-full:
      queues:
        - swh.lister.gogs.tasks.FullGogsRelister
      autoScaling:
        maxReplicaCount: 1
    golang:
      queues:
      - swh.lister.golang.tasks.FullGolangLister
      - swh.lister.golang.tasks.IncrementalGolangLister
      autoScaling:
        maxReplicaCount: 1
    launchpad:
      queues:
      - swh.lister.launchpad.tasks.FullLaunchpadLister
      - swh.lister.launchpad.tasks.IncrementalLaunchpadLister
      autoScaling:
        maxReplicaCount: 1
    maven:
      queues:
      - swh.lister.maven.tasks.FullMavenLister
      - swh.lister.maven.tasks.IncrementalMavenLister
      autoScaling:
        maxReplicaCount: 1
      requestedCpu: 1000m
      requestedMemory: 6144Mi
    npm:
      queues:
      - swh.lister.npm.tasks.NpmListerTask
      autoScaling:
        maxReplicaCount: 1
    opam:
      queues:
      - swh.lister.opam.tasks.OpamListerTask
      autoScaling:
        maxReplicaCount: 1
    packagist:
      queues:
        - swh.lister.packagist.tasks.PackagistListerTask
      autoScaling:
        maxReplicaCount: 1
    pagure:
      queues:
        - swh.lister.pagure.tasks.PagureListerTask
      autoScaling:
        maxReplicaCount: 1
    phabricator:
      queues:
      - swh.lister.phabricator.tasks.FullPhabricatorLister
      autoScaling:
        maxReplicaCount: 1
    pubdev:
      queues:
        - swh.lister.pubdev.tasks.PubDevListerTask
      autoScaling:
        maxReplicaCount: 1
    pypi:
      queues:
      - swh.lister.pypi.tasks.PyPIListerTask
      autoScaling:
        maxReplicaCount: 1
    rpm:
      queues:
        - swh.lister.rpm.tasks.FullRPMLister
        - swh.lister.rpm.tasks.IncrementalRPMLister
      autoScaling:
        maxReplicaCount: 1
    sourceforge:
      queues:
      - swh.lister.sourceforge.tasks.FullSourceForgeLister
      - swh.lister.sourceforge.tasks.IncrementalSourceForgeLister
      autoScaling:
        maxReplicaCount: 1
    stagit:
      queues:
      - swh.lister.stagit.tasks.StagitListerTask
      autoScaling:
        maxReplicaCount: 1

checker_deposit:
  enabled: true
  storageConfigurationRef: remoteROStorageConfiguration
  celeryConfigurationRef: consumerCeleryConfiguration
  depositConfigurationRef: depositConfiguration
  autoScaling:
    queueThreshold: 1
    stopWhenNoActivity: false
    minReplicaCount: 1
    maxReplicaCount: 2
  requestedMemory: 100Mi
  requestedCpu: 100m
  limitedMemory: 1024Mi
  limitedCpu: 1000m

loaders:
  enabled: true
  storageConfigurationRef: remoteSaamStorageConfiguration
  celeryConfigurationRef: consumerCeleryConfiguration
  depositConfigurationRef: depositConfiguration
  deployments:
    add-forge-now:
      image: swh_loader_git_image
      requestedMemory: 1024Mi
      requestedCpu: 500m
      limitedMemory: 25600Mi
      queues:
        - add_forge_now:swh.loader.git.tasks.UpdateGitRepository
      ackLate: true
      autoScaling:
        queueThreshold: 1
        maxReplicaCount: 8
      extraConfig:
        overrides:
          swh.loader.git.loader.GitLoader:
            # 10Gib
            temp_file_cutoff: 10737418240
            # 32Gib
            pack_size_bytes: 34359738368
    add-forge-now-slow:
      image: swh_loader_git_image
      requestedMemory: 1024Mi
      requestedCpu: 500m
      limitedMemory: 25600Mi
      queues:
        - add_forge_now_slow:swh.loader.git.tasks.UpdateGitRepository
      ackLate: true
      autoScaling:
        queueThreshold: 1
        maxReplicaCount: 4
      extraConfig:
        overrides:
          swh.loader.git.loader.GitLoader:
            # 10Gib
            temp_file_cutoff: 10737418240
            # 32Gib
            pack_size_bytes: 34359738368
    archive:
      requestedMemory: 256Mi
      requestedCpu: 200m
      image: swh_loader_package_image
      queues:
        - swh.loader.package.archive.tasks.LoadTarball
      autoScaling:
        maxReplicaCount: 4
    bzr:
      requestedMemory: 1024Mi
      requestedCpu: 1000m
      queues:
        - swh.loader.bzr.tasks.LoadBazaar
      autoScaling:
        maxReplicaCount: 4
    cran:
      requestedMemory: 256Mi
      requestedCpu: 200m
      image: swh_loader_package_image
      queues:
        - swh.loader.package.cran.tasks.LoadCRAN
      autoScaling:
        maxReplicaCount: 1
    cvs:
      requestedMemory: 256Mi
      requestedCpu: 200m
      queues:
        - swh.loader.cvs.tasks.LoadCvsRepository
      autoScaling:
        maxReplicaCount: 2
    debian:
      requestedMemory: 256Mi
      requestedCpu: 200m
      image: swh_loader_package_image
      queues:
        - swh.loader.package.debian.tasks.LoadDebian
      autoScaling:
        maxReplicaCount: 1
    deposit:
      priorityClassName: frontend-rpc-workload
      requestedMemory: 256Mi
      requestedCpu: 200m
      image: swh_loader_package_image
      queues:
        - swh.loader.package.deposit.tasks.LoadDeposit
      autoScaling:
        queueThreshold: 1
        stopWhenNoActivity: false
        minReplicaCount: 1
        maxReplicaCount: 2
      extraConfig:
        deposit:
          url: "https://deposit.softwareheritage.org/1/private"
          auth:
            username: "${DEPOSIT_USERNAME}"
            password: "${DEPOSIT_PASSWORD}"
        default_filename: archive.tar
    git:
      priorityClassName: low-workload
      queues:
        - swh.loader.git.tasks.UpdateGitRepository
        - swh.loader.git.tasks.LoadDiskGitRepository
        - swh.loader.git.tasks.UncompressAndLoadDiskGitRepository
      autoScaling:
        maxReplicaCount: 64
        minReplicaCount: 1
        stopWhenNoActivity: false
        queueThreshold: 200
      requestedMemory: 768Mi
      requestedCpu: 100m
      sysctls:
        net.ipv4.tcp_dsack: 0
    git-large-repository:
      image: swh_loader_git_image
      requestedMemory: 1024Mi
      requestedCpu: 800m
      queues:
        - large_repository:swh.loader.git.tasks.UpdateGitRepository
      autoScaling:
        queueThreshold: 1
        maxReplicaCount: 12
      extraConfig:
        overrides:
          swh.loader.git.loader.GitLoader:
            # 10Gib
            temp_file_cutoff: 10737418240
            # 32Gib
            pack_size_bytes: 34359738368
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "swh/loader"
                operator: In
                values:
                - "true"
              - key: "swh/large-scratch-fs"
                operator: In
                values:
                - "true"
    golang:
      image: swh_loader_package_image
      requestedMemory: 256Mi
      requestedCpu: 200m
      queues:
        - swh.loader.package.golang.tasks.LoadGolang
      autoScaling:
        maxReplicaCount: 4
    maven:
      image: swh_loader_package_image
      queues:
        - swh.loader.package.maven.tasks.LoadMaven
      autoScaling:
        maxReplicaCount: 4
      requestedMemory: 600Mi
      requestedCpu: 500m
    mercurial:
      queues:
        - swh.loader.mercurial.tasks.LoadArchiveMercurial
        - swh.loader.mercurial.tasks.LoadMercurial
      autoScaling:
        maxReplicaCount: 1
      requestedMemory: 128Mi
      requestedCpu: 500m
    nixguix:
      image: swh_loader_package_image
      queues:
        - swh.loader.package.nixguix.tasks.LoadNixguix
      extraConfig:
        unsupported_file_extensions:
          - patch
          - iso
          - whl
          - gem
          - pom
          - msi
          - pod
          - png
          - rock
          - ttf
          - jar
          - c
          - el
          - rpm
          - diff
      autoScaling:
        maxReplicaCount: 2
    npm:
      requestedMemory: 256Mi
      requestedCpu: 200m
      image: swh_loader_package_image
      queues:
        - swh.loader.package.npm.tasks.LoadNpm
      autoScaling:
        maxReplicaCount: 4
    opam:
      image: swh_loader_package_image
      queues:
        - swh.loader.package.opam.tasks.LoadOpam
      autoScaling:
        maxReplicaCount: 4
      requestedMemory: 1024Mi
      requestedCpu: 1000m
    pypi:
      requestedMemory: 256Mi
      requestedCpu: 200m
      image: swh_loader_package_image
      queues:
        - swh.loader.package.pypi.tasks.LoadPyPI
      autoScaling:
        maxReplicaCount: 1
    pubdev:
      requestedMemory: 256Mi
      requestedCpu: 200m
      image: swh_loader_package_image
      queues:
        - swh.loader.package.pubdev.tasks.LoadPubDev
      autoScaling:
        maxReplicaCount: 1
    save-code-now:
      requestedMemory: 2048Mi
      requestedCpu: 200m
      limitedMemory: 25600Mi
      queues:
        - save_code_now:swh.loader.bzr.tasks.LoadBazaar
        - save_code_now:swh.loader.cvs.tasks.LoadCvsRepository
        - save_code_now:swh.loader.git.tasks.UpdateGitRepository
        - save_code_now:swh.loader.git.tasks.LoadDiskGitRepository
        - save_code_now:swh.loader.git.tasks.UncompressAndLoadDiskGitRepository
        - save_code_now:swh.loader.mercurial.tasks.LoadArchiveMercurial
        - save_code_now:swh.loader.mercurial.tasks.LoadMercurial
        - save_code_now:swh.loader.svn.tasks.LoadSvnRepository
        - save_code_now:swh.loader.svn.tasks.MountAndLoadSvnRepository
        - save_code_now:swh.loader.svn.tasks.DumpMountAndLoadSvnRepository
        - save_code_now:swh.loader.package.archive.tasks.LoadTarball
      ackLate: true
      autoScaling:
        stopWhenNoActivity: false
        queueThreshold: 1
        minReplicaCount: 16
        maxReplicaCount: 16
    svn:
      queues:
        - swh.loader.svn.tasks.LoadSvnRepository
        - swh.loader.svn.tasks.MountAndLoadSvnRepository
        - swh.loader.svn.tasks.DumpMountAndLoadSvnRepository
      autoScaling:
        maxReplicaCount: 4
      requestedMemory: 6144Mi
      requestedCpu: 100m
      limitedMemory: 25600Mi

loader_metadata:
  enabled: true
  storageConfigurationRef: remoteSaamStorageConfiguration
  schedulerConfigurationRef: remoteSchedulerConfiguration
  consumerGroup: loader_metadata.journal_client
  prefix: swh.journal.objects
  journalBrokers:
    secretName: swh-archive-broker-secret
    hosts:
      - kafka1.internal.softwareheritage.org:9094
      - kafka2.internal.softwareheritage.org:9094
      - kafka3.internal.softwareheritage.org:9094
      - kafka4.internal.softwareheritage.org:9094
    user: swh-archive-prod
  autoScaling:
    maxReplicaCount: 6

scheduler:
  enabled: true
  sentry:
    enabled: true
  schedulerConfigurationRef: remoteSchedulerConfiguration
  celeryConfigurationRef: producerCeleryConfiguration
  alerts:
    enabled: false
  recurrent:
    enabled: true
  rpc:
    enabled: true
    # The scheduler instance to use for rpc must be a postgresql instance
    schedulerConfigurationRef: postgresqlSchedulerConfiguration
    replicas: 2
    gunicorn:
      threads: 4
      workers: 8
      timeout: 3600
    hosts:
      - scheduler.internal.softwareheritage.org
    ingress:
      enabled: true
      # TODO: Improve the authorization internal cluster ip range.
      # Current internal range retrieved out of the `kubectl cluster-info dump`
      # Default allowed ip ranges that can be extended per ingress definitions paths
      whitelistSourceRangeRef: internalNetworkRanges
      endpoints:
        default:
          paths:
            - path: /
          extraWhitelistSourceRange:
          # staging-runner0 add-forge-now
            - 192.168.130.221
        read-only:
          paths:
            - path: /scheduler_metrics/get
          extraWhitelistSourceRange:
            # vpn network
            - 192.168.101.0/24
  updateMetrics:
    enabled: true
    concurrencyPolicy: Forbid
    # At minute 27 past every 4th hour from 3 through 23
    cron: "27 3-23/4 * * *"
  journalClient:
    enabled: true
    journalConfigurationRef: journalClientConfiguration
  extraServices:
    runner:
      enabled: true
      logLevel: INFO
      period: 10
    runner-priority:
      enabled: true
      logLevel: INFO
      period: 10
      extraConfig:
        - load-bzr
        - load-cvs
        - load-git
        - load-svn
        - load-archive-files
        - load-hg
    listener:
      enabled: true
      logLevel: INFO

toolbox:
  enabled: true
  configs:
    storage:
      storageDbConfigurationRef: postgresqlStorageConfiguration
    storage-secondary:
      storageDbConfigurationRef: secondaryPostgresqlRWStorageConfiguration
    scheduler:
      schedulerDbConfigurationRef: postgresqlSchedulerConfiguration
      celeryConfigurationRef: producerCeleryConfiguration
    scrubber-journal:
      scrubberDbConfigurationRef: postgresqlScrubberConfiguration
      journalClientConfigurationRef: scrubberJournalClientConfiguration
    scrubber-storage-primary:
      scrubberDbConfigurationRef: postgresqlScrubberConfiguration
      storageConfigurationRef: scrubberROStoragePrimaryConfiguration
    scrubber-storage-secondary:
      scrubberDbConfigurationRef: postgresqlScrubberConfiguration
      storageConfigurationRef: scrubberROStorageSecondaryConfiguration
    indexer-storage:
      indexerDbConfigurationRef: postgresqlIndexerStorageConfiguration

indexerStorage:
  enabled: true
  logLevel: INFO
  deployments:
    read-only:
      checkDbVersion: true
      autoScaling:
        minReplicaCount: 2
        maxReplicaCount: 4
        cpuPercentageUsage: 90
      requestedCpu: 500m
      requestedMemory: 512Mi
      indexerStorageConfigurationRef: postgresqlReadOnlyIndexerStorageConfiguration
      hosts:
        - indexer-storage-read-only-rpc-ingress
      ingress:
        enabled: true
        extraAnnotations:
          nginx.ingress.kubernetes.io/proxy-connect-timeout: "90"
          nginx.ingress.kubernetes.io/proxy-send-timeout: "90"
          nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
          nginx.ingress.kubernetes.io/proxy-request-buffering: "on"
          nginx.ingress.kubernetes.io/proxy-body-size: "4G"
        # Default allowed ip ranges that can be extended per ingress definitions paths
        whitelistSourceRangeRef: clusterNetworkRanges
        endpoints:
          default:
            paths:
              - path: /
      gunicorn:
        threads: 2
        workers: 4

search:
  enabled: true
  priorityClassName: frontend-rpc
  logLevel: INFO
  elasticsearchConfigurationRef: elasticsearchConfiguration
  # replicas: 2
  gunicorn:
    threads: 5
    workers: 4
    timeout: 3600
  # RPC services may have different profiles than the rest so they need their specific
  # setup
  # requestedMemory: 512Mi
  # requestedCpu: 500m
  autoScaling:
    minReplicaCount: 2
    maxReplicaCount: 4
    cpuPercentageUsage: 100
  hosts:
    - search-rpc-ingress
  ingress:
    enabled: true
    # Optional: the ingress classname to use
    # className: nginx
    extraAnnotations:
      nginx.ingress.kubernetes.io/proxy-connect-timeout: "90"
      nginx.ingress.kubernetes.io/proxy-send-timeout: "90"
      nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
      nginx.ingress.kubernetes.io/proxy-request-buffering: "on"
      nginx.ingress.kubernetes.io/proxy-body-size: "4G"
    # Default allowed ip ranges that can be extended per ingress definitions paths
    whitelistSourceRangeRef: clusterNetworkRanges
    endpoints:
      default:
        paths:
          - path: /
  journalClients:
    enabled: true
    priorityClassName: normal-workload
    searchConfigurationRef: remoteSearchConfiguration
    storageConfigurationRef: remoteStorageConfiguration
    journalConfigurationRef: searchJournalClientConfiguration
    deployments:
      objects:
        # requestedCpu: 10m
        # requestedMemory: 50Mi
        journalClientOverrides:
          group_id: swh.search.journal_client-v0.11
          prefix: swh.journal.objects
          object_types:
          - origin
          - origin_visit_status
      indexed:
        # requestedCpu: 10m
        # requestedMemory: 50Mi
        journalClientOverrides:
          group_id: swh.search.journal_client.indexed-v0.11
          prefix: swh.journal.indexed
          object_types:
          - origin_intrinsic_metadata
          - origin_extrinsic_metadata

scrubber:
  enabled: true
  scrubberDatabaseConfigurationRef: postgresqlScrubberConfiguration
  storageConfigurationRef: remoteSaamStorageConfiguration
  priorityClassName: background-workload
  journalChecker:
    enabled: true
    journalClientConfigurationRef: scrubberJournalClientConfiguration
    deployments:
      directory:
        # Disabled until a fix or workaroud for swh/devel/swh-scrubber#4698
        # is available
        enabled: false
        configName: journal-checker-directory
        journalClientOverrides:
          batch_size: 100
        object: directory
        replicas: 2
        requestedCpu: 1
        requestedMemory: 200Mi
      release:
        configName: journal-checker-release
        journalClientOverrides:
          batch_size: 200
          privileged: true
        object: release
        replicas: 1
        requestedCpu: 1
        requestedMemory: 200Mi
      revision:
        configName: journal-checker-revision
        journalClientOverrides:
          privileged: true
        object: revision
        replicas: 2
        requestedCpu: 1
        requestedMemory: 250Mi
      snapshot:
        configName: journal-checker-snapshot
        object: snapshot
        replicas: 2
        requestedCpu: 1
        requestedMemory: 250Mi
  storageChecker:
    enabled: true
    deployments:
      primary-directory-references:
        storageConfigurationRef: scrubberROStoragePrimaryConfiguration
        configName: storage-primary-references-directory
        object: directory
        replicas: 2
        requestedCpu: 100m
        requestedMemory: 100Mi
      primary-directory-hashes:
        storageConfigurationRef: scrubberROStoragePrimaryConfiguration
        configName: storage-primary-hashes-directory
        object: directory
        replicas: 2
        requestedCpu: 100m
        requestedMemory: 100Mi
      primary-release-references:
        # until https://gitlab.softwareheritage.org/swh/devel/swh-scrubber/-/issues/4699 fix
        enabled: false
        storageConfigurationRef: scrubberROStoragePrimaryConfiguration
        configName: storage-primary-references-release
        object: release
        replicas: 2
      primary-release-hashes:
        # until https://gitlab.softwareheritage.org/swh/devel/swh-scrubber/-/issues/4699 fix
        enabled: false
        storageConfigurationRef: scrubberROStoragePrimaryConfiguration
        configName: storage-primary-hashes-release
        object: release
        replicas: 2
      primary-revision-references:
        storageConfigurationRef: scrubberROStoragePrimaryConfiguration
        configName: storage-primary-references-revision
        replicas: 2
        object: revision
      primary-revision-hashes:
        storageConfigurationRef: scrubberROStoragePrimaryConfiguration
        configName: storage-primary-hashes-revision
        replicas: 2
        object: revision
      primary-snapshot-references:
        storageConfigurationRef: scrubberROStoragePrimaryConfiguration
        configName: storage-primary-references-snapshot
        replicas: 2
        object: snapshot
        requestedCpu: 150m
        requestedMemory: 128Mi
      primary-snapshot-hashes:
        storageConfigurationRef: scrubberROStoragePrimaryConfiguration
        configName: storage-primary-hashes-snapshot
        replicas: 2
        object: snapshot
        requestedCpu: 150m
        requestedMemory: 128Mi
      secondary-directory-references:
        storageConfigurationRef: scrubberROStorageSecondaryConfiguration
        configName: storage-secondary-references-directory
        object: directory
        replicas: 2
        requestedCpu: 100m
        requestedMemory: 100Mi
      secondary-directory-hashes:
        storageConfigurationRef: scrubberROStorageSecondaryConfiguration
        configName: storage-secondary-hashes-directory
        object: directory
        replicas: 2
        requestedCpu: 100m
        requestedMemory: 100Mi
      secondary-release-references:
        # until https://gitlab.softwareheritage.org/swh/devel/swh-scrubber/-/issues/4699 fix
        enabled: false
        storageConfigurationRef: scrubberROStorageSecondaryConfiguration
        configName: storage-secondary-references-release
        object: release
        replicas: 2
      secondary-release-hashes:
        # until https://gitlab.softwareheritage.org/swh/devel/swh-scrubber/-/issues/4699 fix
        enabled: false
        storageConfigurationRef: scrubberROStorageSecondaryConfiguration
        configName: storage-secondary-hashes-release
        object: release
        replicas: 2
      secondary-revision-references:
        storageConfigurationRef: scrubberROStorageSecondaryConfiguration
        configName: storage-secondary-references-revision
        replicas: 2
        object: revision
      secondary-revision-hashes:
        # until https://gitlab.softwareheritage.org/swh/devel/swh-scrubber/-/issues/4699 fix
        enabled: false
        storageConfigurationRef: scrubberROStorageSecondaryConfiguration
        configName: storage-secondary-hashes-revision
        replicas: 2
        object: revision
      secondary-snapshot-references:
        storageConfigurationRef: scrubberROStorageSecondaryConfiguration
        configName: storage-secondary-references-snapshot
        replicas: 2
        object: snapshot
        requestedCpu: 150m
        requestedMemory: 128Mi
      secondary-snapshot-hashes:
        storageConfigurationRef: scrubberROStorageSecondaryConfiguration
        configName: storage-secondary-hashes-snapshot
        replicas: 2
        object: snapshot
        requestedCpu: 150m
        requestedMemory: 128Mi

storage:
  enabled: true
  deployments:
    postgresql-azure-readonly:
      autoScaling:
        minReplicaCount: 2
        maxReplicaCount: 10
        cpuPercentageUsage: 150
      requestedCpu: 500m
      requestedMemory: 1500Mi
      storageConfigurationRef: readOnlyStorageConfiguration
      hosts:
        - storage-azure-read-only-rpc-ingress
      ingress:
        enabled: true
        whitelistSourceRangeRef: internalNetworkRanges
        extraAnnotations:
          nginx.ingress.kubernetes.io/proxy-body-size: 4G
          nginx.ingress.kubernetes.io/proxy-buffering: "on"
        endpoints:
          default:
            paths:
              - path: /
      gunicorn:
        threads: 4
        workers: 8

web:
  enabled: true
  logLevel: INFO
  requestedCpu: 500m
  requestedMemory: 500Mi
  refreshSavecodenowStatus:
    enabled: true
    concurrencyPolicy: Forbid
  syncMailmaps:
    enabled: true
    concurrencyPolicy: Forbid
    configurationRef: postgresqlSyncmailmapsConfiguration
  autoScaling:
    minReplicaCount: 2
    maxReplicaCount: 4
    cpuPercentageUsage: 100
  hosts:
    - webapp1.internal.softwareheritage.org
    - archive.softwareheritage.org
    - base.softwareheritage.org
    - archive.internal.softwareheritage.org
  ingress:
    enabled: true
    secretName: swh-web-crt
    extraAnnotations:
      cert-manager.io/cluster-issuer: letsencrypt-production-gandi
      kubernetes.io/ingress.class: nginx
      kubernetes.io/tls-acme: "true"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    tlsEnabled: true
    endpoints:
      default:
        paths:
          - path: /
          - path: /static
            port: 80
      authenticated:
        paths:
          - path: /api/1/provenance/
          - path: /api/1/entity/
          - path: /api/1/content/[^/]+/symbol/
        # auth-file with authentication
        authentication: swh/web-auth-secrets
  databaseConfigurationRef: postgresqlWebConfiguration
  searchConfigurationRef: remoteSearchConfiguration
  schedulerConfigurationRef: remoteSchedulerConfiguration
  storageConfigurationRef: remoteStorageConfiguration
  vaultConfigurationRef: remoteVaultConfiguration
  indexerStorageConfigurationRef: remoteReadOnlyIndexerStorageConfiguration
  countersConfigurationRef: remoteCountersConfiguration
  djangoConfigurationRef: djangoWebConfiguration
  giveConfigurationRef: giveConfiguration
  throttlingConfigurationRef: webThrottling
  addForgeNowConfigurationRef: addForgeNowConfiguration
  extraConfig:
    keycloak:
      server_url: https://auth.softwareheritage.org/auth/
      realm_name: SoftwareHeritage
    search_config:
      metadata_backend: swh-search
    content_display_max_size: 5242880
    history_counters_url: http://counters1.internal.softwareheritage.org:5011/counters_history/history.json#
    es_workers_index_url: http://esnode1.internal.softwareheritage.org:9200/swh_workers-*
    swh_extra_django_apps:
      - swh.web.add_forge_now
      - swh.web.archive_coverage
      - swh.web.badges
      - swh.web.banners
      - swh.web.deposit
      - swh.web.inbound_email
      - swh.web.jslicenses
      - swh.web.mailmap
      - swh.web.metrics
      - swh.web.save_code_now
      - swh.web.save_origin_webhooks
      - swh.web.vault
    give:
      public_key: ${GIVE_PUBLIC_KEY}
      token: ${GIVE_PRIVATE_TOKEN}
    matomo:
      url: https://piwik.inria.fr/
      site_id: 59
