rpcRWStorageConfiguration:
  cls: remote
  url: http://storage-rw-postgresql-ingress

remoteStorageConfiguration:
  cls: remote
  url: http://storage-azure-read-only-rpc-ingress

remoteRpcRWStorageConfiguration:
  pipelineStepsRef: storagePipelineSteps
  storageConfigurationRef: rpcRWStorageConfiguration

directPostgresqlReplayerStorageConfiguration:
  pipelineStepsRef: storagePipelineStepsWithRecordReferences
  storageConfigurationRef: postgresqlRWStorageConfiguration
  objstorageConfigurationRef: noopObjstorageConfiguration

s3RWObjectstorageConfiguration: &s3-rw-configuration
  cls: s3
  compression: gzip
  path_prefix: content
  container_name: softwareheritage
  key: ${S3_BUCKET_KEY}
  secret: ${S3_BUCKET_SECRET}
  timeout: 120
  secrets:
    S3_BUCKET_KEY:
      secretKeyRef: swh-objstorage-s3
      secretKeyName: bucket-key
    S3_BUCKET_SECRET:
      secretKeyRef: swh-objstorage-s3
      secretKeyName: bucket-secret

s3DeleteObjectstorageConfiguration:
  <<: *s3-rw-configuration
  allow_delete: true

postgresqlRWStorageConfiguration:
  cls: postgresql
  host: postgresql-storage-rw.internal.softwareheritage.org
  port: 5432
  user: swhstorage
  pass: ${POSTGRESQL_PASSWORD}
  db: softwareheritage
  secrets:
    POSTGRESQL_PASSWORD:
      secretKeyRef: swh-storage-postgresql-common-secret
      secretKeyName: postgres-swh-storage-password

emptyStoragePipelineSteps: []

rwStoragePostgresqlConfiguration:
  storageConfigurationRef: postgresqlRWStorageConfiguration
  pipelineStepsRef: emptyStoragePipelineSteps

postgresqlRWNoObjstorageStorageConfiguration:
  storageConfigurationRef: postgresqlRWStorageConfiguration
  pipelineStepsRef: emptyStoragePipelineSteps
  objstorageConfigurationRef: noopObjstorageConfiguration

readOnlyPostgresqlStorageConfiguration:
  pipelineStepsRef: maskingStoragePipelineSteps
  storageConfigurationRef: primaryPostgresqlROStorageConfiguration
  objstorageConfigurationRef: roObjstorageBestEffortConfiguration

postgresqlSyncmailmapsConfiguration:
  cls: postgresql
  host: postgresql-storage-rw.internal.softwareheritage.org
  port: 5432
  db: softwareheritage
  user: swhmailmap
  pass: ${PGPASSWORD}
  secrets:
    PGPASSWORD:
      secretKeyRef: swh-postgresql-syncmailmap-secret
      secretKeyName: postgres-syncmailmap-password

postgresqlWebConfiguration:
  host: postgresql-web-rw.internal.softwareheritage.org
  port: 5432
  db: swh-web
  user: swh-web
  pass: ${POSTGRESQL_PASSWORD}
  secrets:
    POSTGRESQL_PASSWORD:
      secretKeyRef: swh-postgresql-web-secrets
      secretKeyName: postgres-swh-web-password

primaryPostgresqlROStorageConfiguration:
  cls: postgresql
  host: postgresql-storage-rw.internal.softwareheritage.org
  port: 5432
  user: guest
  pass: ${POSTGRESQL_PASSWORD}
  db: softwareheritage
  secrets:
    POSTGRESQL_PASSWORD:
      secretKeyRef: swh-storage-postgresql-common-secret
      secretKeyName: postgres-guest-password

secondaryPostgresqlRWStorageConfiguration:
  cls: postgresql
  host: postgresql-storage-replica.internal.softwareheritage.org
  port: 5432
  user: swhstorage
  pass: ${POSTGRESQL_PASSWORD}
  db: softwareheritage
  secrets:
    POSTGRESQL_PASSWORD:
      secretKeyRef: swh-storage-postgresql-common-secret
      secretKeyName: postgres-swh-storage-password

secondaryPostgresqlROStorageConfiguration:
  cls: postgresql
  host: postgresql-storage-replica.internal.softwareheritage.org
  port: 5432
  user: guest
  pass: ${POSTGRESQL_PASSWORD}
  db: softwareheritage
  secrets:
    POSTGRESQL_PASSWORD:
      secretKeyRef: swh-storage-postgresql-common-secret
      secretKeyName: postgres-guest-password

## Direct postgresql connection without any filter or objstorage
scrubberROStoragePrimaryConfiguration:
  storageConfigurationRef: primaryPostgresqlROStorageConfiguration

## Direct postgresql connection without any filter or objstorage
scrubberROStorageSecondaryConfiguration:
  storageConfigurationRef: secondaryPostgresqlROStorageConfiguration

graphql:
  enabled: true
  deployments:
    # Instance to serve https://webapp-postgresql.internal.softwaheritage.org/graphql/
    postgresql:
      replicas: 2
      storageConfigurationRef: remoteROStorageConfiguration
      searchConfigurationRef: remoteSearchConfiguration
      introspection: yes
      hosts:
        - webapp-postgresql.internal.softwareheritage.org
      ingress:
        enabled: true
        extraAnnotations:
          nginx.ingress.kubernetes.io/rewrite-target: /
        endpoints:
          default:
            paths:
              - path: /graphql/
      gunicorn:
        threads: 4
        workers: 2
        timeout: 3600
      auth:
        enabled: true
        server: https://auth.softwareheritage.org/auth/
        realm: SoftwareHeritage
        client: swh-web
        cacheUrl: memcached://memcached:11211
      maxRawContentSize: 10000
    # Instance to serve https://webapp1.internal.softwaheritage.org/graphql/
    webapp1:
      replicas: 1
      priorityClassName: low-workload
      storageConfigurationRef: remoteROStorageConfiguration
      searchConfigurationRef: remoteSearchConfiguration
      introspection: yes
      hosts:
        - webapp1.internal.softwareheritage.org
      ingress:
        enabled: true
        extraAnnotations:
          nginx.ingress.kubernetes.io/rewrite-target: /
        whitelistSourceRangeRef: internalNetworkRanges
        endpoints:
          default:
            paths:
              - path: /graphql/
            extraWhitelistSourceRange:
              # vpn network
              - 192.168.101.0/24
              - 192.168.50.0/24
      gunicorn:
        threads: 4
        workers: 2
        timeout: 3600
      auth:
        enabled: true
        server: https://auth.softwareheritage.org/auth/
        realm: SoftwareHeritage
        client: swh-web
        cacheUrl: memcached://memcached:11211
      maxRawContentSize: 10000

toolbox:
  enabled: true
  configs:
    storage:
      storageDbConfigurationRef: postgresqlRWStorageConfiguration
    storage-secondary:
      moduleName: storage
      storageDbConfigurationRef: secondaryPostgresqlRWStorageConfiguration
    scheduler:
      schedulerDbConfigurationRef: postgresqlSchedulerConfiguration
      celeryConfigurationRef: producerCeleryConfiguration
    scrubber-journal:
      scrubberDbConfigurationRef: postgresqlScrubberConfiguration
      journalClientConfigurationRef: authenticatedJournalClientConfiguration
    scrubber-storage-primary:
      moduleName: scrubber
      scrubberDbConfigurationRef: postgresqlScrubberConfiguration
      storageConfigurationRef: scrubberROStoragePrimaryConfiguration
    scrubber-storage-secondary:
      moduleName: scrubber
      scrubberDbConfigurationRef: postgresqlScrubberConfiguration
      storageConfigurationRef: scrubberROStorageSecondaryConfiguration
    indexer-storage:
      moduleName: indexer
      moduleConfigKey: indexer_storage
      indexerDbConfigurationRef: postgresqlIndexerStorageConfiguration
    masking:
      moduleName: storage.proxies.masking
      moduleConfigKey: masking_admin
      maskingAdminConfigurationRef: maskingAdminPostgresqlConfiguration
      # needed for the `swh storage` cli to work...
      storageConfigurationRef: memoryNoopStorageConfiguration
    blocking:
      moduleName: storage.proxies.blocking
      moduleConfigKey: blocking_admin
      blockingAdminConfigurationRef: blockingAdminPostgresqlConfiguration
      # needed for the `swh storage` cli to work...
      storageConfigurationRef: memoryNoopStorageConfiguration
    webhooks:
      webhooksConfigurationRef: svixConfiguration
    vault:
      vaultDbConfigurationRef: postgresqlVaultConfiguration

scrubber:
  enabled: true
  scrubberDatabaseConfigurationRef: postgresqlScrubberConfiguration
  priorityClassName: background-workload
  objstorageChecker:
    enabled: false
  journalChecker:
    enabled: false
    journalClientConfigurationRef: authenticatedJournalClientConfiguration
    deployments:
      directory:
        # Disabled until a fix or workaroud for swh/devel/swh-scrubber#4698
        # is available
        enabled: false
        configName: journal-checker-directory
        journalClientOverrides:
          batch_size: 100
          on_eof: restart
        object: directory
        replicas: 2
        requestedCpu: 1
        requestedMemory: 200Mi
      release:
        configName: journal-checker-release
        journalClientOverrides:
          batch_size: 200
          privileged: true
          on_eof: restart
        object: release
        replicas: 1
        requestedCpu: 1
        requestedMemory: 200Mi
      revision:
        configName: journal-checker-revision
        journalClientOverrides:
          privileged: true
          on_eof: restart
        object: revision
        replicas: 2
        requestedCpu: 1
        requestedMemory: 250Mi
      snapshot:
        configName: journal-checker-snapshot
        object: snapshot
        journalClientOverrides:
          on_eof: restart
        replicas: 2
        requestedCpu: 1
        requestedMemory: 250Mi
  storageChecker:
    enabled: true
    deployments:
      primary-directory-references:
        storageConfigurationRef: scrubberROStoragePrimaryConfiguration
        configName: storage-primary-references-directory
        object: directory
        replicas: 2
        requestedCpu: 100m
        requestedMemory: 100Mi
      primary-directory-hashes:
        storageConfigurationRef: scrubberROStoragePrimaryConfiguration
        configName: storage-primary-hashes-directory
        object: directory
        replicas: 2
        requestedCpu: 100m
        requestedMemory: 100Mi
      primary-release-references:
        # until https://gitlab.softwareheritage.org/swh/devel/swh-scrubber/-/issues/4699 fix
        enabled: false
        storageConfigurationRef: scrubberROStoragePrimaryConfiguration
        configName: storage-primary-references-release
        object: release
        replicas: 2
      primary-release-hashes:
        # until https://gitlab.softwareheritage.org/swh/devel/swh-scrubber/-/issues/4699 fix
        enabled: false
        storageConfigurationRef: scrubberROStoragePrimaryConfiguration
        configName: storage-primary-hashes-release
        object: release
        replicas: 2
      primary-revision-references:
        # until https://gitlab.softwareheritage.org/swh/devel/swh-scrubber/-/issues/4699 fix
        enabled: false
        storageConfigurationRef: scrubberROStoragePrimaryConfiguration
        configName: storage-primary-references-revision
        replicas: 2
        object: revision
      primary-revision-hashes:
        # until https://gitlab.softwareheritage.org/swh/devel/swh-scrubber/-/issues/4699 fix
        enabled: false
        storageConfigurationRef: scrubberROStoragePrimaryConfiguration
        configName: storage-primary-hashes-revision
        replicas: 2
        object: revision
      primary-snapshot-references:
        # until https://gitlab.softwareheritage.org/swh/devel/swh-scrubber/-/issues/4699 fix
        enabled: false
        storageConfigurationRef: scrubberROStoragePrimaryConfiguration
        configName: storage-primary-references-snapshot
        replicas: 2
        object: snapshot
        requestedCpu: 150m
        requestedMemory: 128Mi
      primary-snapshot-hashes:
        # until https://gitlab.softwareheritage.org/swh/devel/swh-scrubber/-/issues/4699 fix
        enabled: false
        storageConfigurationRef: scrubberROStoragePrimaryConfiguration
        configName: storage-primary-hashes-snapshot
        replicas: 2
        object: snapshot
        requestedCpu: 150m
        requestedMemory: 128Mi
      secondary-directory-references:
        enabled: false
        storageConfigurationRef: scrubberROStorageSecondaryConfiguration
        configName: storage-secondary-references-directory
        object: directory
        replicas: 2
        requestedCpu: 100m
        requestedMemory: 100Mi
      secondary-directory-hashes:
        enabled: false
        storageConfigurationRef: scrubberROStorageSecondaryConfiguration
        configName: storage-secondary-hashes-directory
        object: directory
        replicas: 2
        requestedCpu: 100m
        requestedMemory: 100Mi
      secondary-release-references:
        # until https://gitlab.softwareheritage.org/swh/devel/swh-scrubber/-/issues/4699 fix
        enabled: false
        storageConfigurationRef: scrubberROStorageSecondaryConfiguration
        configName: storage-secondary-references-release
        object: release
        replicas: 2
      secondary-release-hashes:
        # until https://gitlab.softwareheritage.org/swh/devel/swh-scrubber/-/issues/4699 fix
        enabled: false
        storageConfigurationRef: scrubberROStorageSecondaryConfiguration
        configName: storage-secondary-hashes-release
        object: release
        replicas: 2
      secondary-revision-references:
        # until https://gitlab.softwareheritage.org/swh/devel/swh-scrubber/-/issues/4699 fix
        enabled: false
        storageConfigurationRef: scrubberROStorageSecondaryConfiguration
        configName: storage-secondary-references-revision
        replicas: 2
        object: revision
      secondary-revision-hashes:
        # until https://gitlab.softwareheritage.org/swh/devel/swh-scrubber/-/issues/4699 fix
        enabled: false
        storageConfigurationRef: scrubberROStorageSecondaryConfiguration
        configName: storage-secondary-hashes-revision
        replicas: 2
        object: revision
      secondary-snapshot-references:
        enabled: false
        storageConfigurationRef: scrubberROStorageSecondaryConfiguration
        configName: storage-secondary-references-snapshot
        replicas: 2
        object: snapshot
        requestedCpu: 150m
        requestedMemory: 128Mi
      secondary-snapshot-hashes:
        enabled: false
        storageConfigurationRef: scrubberROStorageSecondaryConfiguration
        configName: storage-secondary-hashes-snapshot
        replicas: 2
        object: snapshot
        requestedCpu: 150m
        requestedMemory: 128Mi

storage:
  enabled: true
  logLevel: WARN
  deployments:
    postgresql-azure-readonly:
      autoScaling:
        minReplicaCount: 2
        maxReplicaCount: 10
        cpuPercentageUsage: 30
      requestedCpu: 500m
      requestedMemory: 1.5Gi
      storageConfigurationRef: readOnlyPostgresqlStorageConfiguration
      hosts:
        - storage-azure-read-only-rpc-ingress
        - storage-postgresql-ro.internal.softwareheritage.org
      ingress:
        enabled: true
        whitelistSourceRangeRef: internalNetworkRanges
        extraAnnotations:
          nginx.ingress.kubernetes.io/proxy-body-size: 4G
          nginx.ingress.kubernetes.io/proxy-buffering: "on"
        endpoints:
          default:
            paths:
              - path: /
            extraWhitelistSourceRange:
              # vpn network
              - 192.168.101.0/24
      gunicorn:
        threads: 4
        workers: 8
    # Main instance used by loaders to write
    postgresql-winery:
      enabled: false
      requestedCpu: 1000m
      requestedMemory: 2Gi
      autoScaling:
        minReplicaCount: 4
        maxReplicaCount: 10
        cpuPercentageUsage: 50
      gunicorn:
        workers: 16
        threads: 1
        timeout: 3600
      storageConfigurationRef: rwStoragePostgresqlWithWineryObjstorageConfiguration
      dnsConfigurationRef: dnsConfiguration
      hosts:
        - storage-rw-postgresql-ingress
        - storage-rw-postgresql-saam-ingress
      ingress:
        enabled: true
        whitelistSourceRangeRef: internalNetworkRanges
        extraAnnotations:
          nginx.ingress.kubernetes.io/proxy-body-size: 4G
          nginx.ingress.kubernetes.io/proxy-buffering: "on"
          nginx.ingress.kubernetes.io/client-body-buffer-size: 128K
          nginx.ingress.kubernetes.io/proxy-connect-timeout: "90"
          nginx.ingress.kubernetes.io/proxy-send-timeout: "90"
          nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
        endpoints:
          default:
            paths:
              - path: /
      cronjobs:
        create-object-reference-partitions:
          enabled: true
          storageConfigurationRef: rwStoragePostgresqlConfiguration
          logLevel: INFO
          cron: 5 0 * * mon
          concurrencyPolicy: Forbid

djangoWebConfiguration:
  secrets:
    DJANGO_SECRET_KEY_FALLBACK_1:
      secretKeyRef: swh-webapp-django-secret
      secretKeyName: webapp-django-secret-key-fallback-1
    DJANGO_SECRET_KEY_FALLBACK_2:
      secretKeyRef: swh-webapp-django-secret
      secretKeyName: webapp-django-secret-key-fallback-2

historyCountersUrl: http://counters-rpc-ingress/counters_history/history.json#

web:
  enabled: true
  logLevel: WARN
  deployments:
    # Instance to serve https://webapp-postgresql.internal.softwareheritage.org
    postgresql:
      gunicorn:
        workers: 8
        threads: 1
        timeout: 3600
      autoScaling:
        type: keda
        minReplicaCount: 10
        maxReplicaCount: 10
        threshold: 10
      metricsScrapingEnabled: false
      requestedCpu: 500m
      requestedMemory: 6Gi
      cronJobs:
        refreshSCNStatus:
          enabled: false
          cron: "*/2 * * * *"
          command:
            - "refresh_savecodenow_statuses"
          concurrencyPolicy: Forbid
          priorityClassName: frontend-rpc-workload
        syncMaskingMailmaps:
          enabled: false
          command:
            - "sync_masking_mailmaps"
            - "--perform"
            - "service=syncmaskingmailmaps"
          cron: "15 *  * * *"
          concurrencyPolicy: Forbid
          configurationRef: postgresqlSyncMaskingProxyMailmapsConfiguration
          priorityClassName: frontend-rpc-workload
          pgService: true
      hosts:
        - webapp-postgresql.internal.softwareheritage.org
      ingress:
        enabled: true
        secretName: swh-web-archive-crt
        extraAnnotations:
          kubernetes.io/ingress.class: nginx
        tlsExtraAnnotations:
          cert-manager.io/cluster-issuer: letsencrypt-production-gandi
          kubernetes.io/tls-acme: "true"
          nginx.ingress.kubernetes.io/ssl-redirect: "true"
        endpoints:
          default:
            paths:
              - path: /
          static:
            extraAnnotations:
              nginx.ingress.kubernetes.io/use-regex: "true"
              nginx.ingress.kubernetes.io/rewrite-target: /static/$2
            paths:
              - path: /()(robots.txt)$
                pathType: ImplementationSpecific
                port: 80
              - path: /static(/|$)(.*)
                pathType: ImplementationSpecific
                port: 80
          authenticated:
            paths:
              - path: /api/1/entity/
              - path: /api/1/content/[^/]+/symbol/
            # auth-file with authentication
            authentication: swh/web-auth-secrets
      databaseConfigurationRef: postgresqlWebConfiguration
      searchConfigurationRef: remoteSearchConfiguration
      schedulerConfigurationRef: remoteSchedulerConfiguration
      storageConfigurationRef: remoteStorageConfiguration
      vaultConfigurationRef: remoteVaultConfiguration
      indexerStorageConfigurationRef: remoteReadOnlyIndexerStorageConfiguration
      countersConfigurationRef: remoteCountersConfiguration
      historyCountersUrlRef: historyCountersUrl
      esWorkersIndexUrlRef: esWorkersIndexUrl
      djangoConfigurationRef: djangoWebConfiguration
      giveConfigurationRef: giveConfiguration
      throttlingConfigurationRef: webThrottling
      addForgeNowConfigurationRef: addForgeNowConfiguration
      webhooksConfigurationRef: webhooksConfiguration
      depositConfigurationRef: depositConfiguration
      keycloakConfigurationRef: keycloakConfiguration
      inboundEmailConfigurationRef: inboundEmailConfiguration
      provenanceConfigurationRef: provenanceConfiguration
      djangoAppsRef: webDjangoApps
      graphConfigurationRef: webGraphConfiguration
      extraConfig:
        save_code_now_webhook_secret: ${WEBHOOKS_SECRET}
        search_config:
          metadata_backend: swh-search
        inbound_email:
          shared_key: ${INBOUND_EMAIL_SHARED_KEY}
        content_display_max_size: 5242880
        give:
          public_key: ${GIVE_PUBLIC_KEY}
          token: ${GIVE_PRIVATE_TOKEN}
        matomo:
          url: https://piwik.inria.fr/
          site_id: 59
    # Test instance
    app1:
      metricsScrapingEnabled: false
      requestedCpu: 500m
      requestedMemory: 1Gi
      replicas: 2
      # autoScaling:
      #   minReplicaCount: 2
      #   maxReplicaCount: 4
      #   cpuPercentageUsage: 100
      gunicorn:
        timeout: 3600
      hosts:
        - webapp1.internal.softwareheritage.org
      ingress:
        enabled: true
        secretName: swh-web-crt
        extraAnnotations:
          cert-manager.io/cluster-issuer: letsencrypt-production-gandi
          kubernetes.io/ingress.class: nginx
          kubernetes.io/tls-acme: "true"
          nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        tlsEnabled: true
        endpoints:
          default:
            paths:
              - path: /
              - path: /static
                port: 80
          authenticated:
            paths:
              - path: /api/1/entity/
              - path: /api/1/content/[^/]+/symbol/
            # auth-file with authentication
            authentication: swh/web-auth-secrets
      databaseConfigurationRef: postgresqlWebConfiguration
      searchConfigurationRef: remoteSearchConfiguration
      schedulerConfigurationRef: remoteSchedulerConfiguration
      storageConfigurationRef: remoteStorageConfiguration
      vaultConfigurationRef: remoteVaultConfiguration
      indexerStorageConfigurationRef: remoteReadOnlyIndexerStorageConfiguration
      countersConfigurationRef: remoteCountersConfiguration
      historyCountersUrlRef: historyCountersUrl
      esWorkersIndexUrlRef: esWorkersIndexUrl
      djangoConfigurationRef: djangoWebConfiguration
      giveConfigurationRef: giveConfiguration
      throttlingConfigurationRef: webThrottling
      addForgeNowConfigurationRef: addForgeNowConfiguration
      depositConfigurationRef: depositConfiguration
      keycloakConfigurationRef: keycloakConfiguration
      djangoAppsRef: webDjangoApps
      graphConfigurationRef: webGraphConfiguration
      extraConfig:
        search_config:
          metadata_backend: swh-search
        content_display_max_size: 5242880
        give:
          public_key: ${GIVE_PUBLIC_KEY}
          token: ${GIVE_PRIVATE_TOKEN}
        matomo:
          url: https://piwik.inria.fr/
          site_id: 59
    # webhooks instance to serve svix requests
    webhooks:
      # The ingress accepts only 10 concurrent requests so the number of workers
      # can be configured accordingly with a margin for monitoring probes
      gunicorn:
        workers: 4
        threads: 3
        timeout: 60
      replicas: 2
      requestedCpu: 200m
      requestedMemory: 7Gi
      hosts:
        - webapp-postgresql.internal.softwareheritage.org
      ingress:
        enabled: true
        secretName: swh-web-archive-crt
        extraAnnotations:
          kubernetes.io/ingress.class: nginx
        tlsExtraAnnotations:
          cert-manager.io/cluster-issuer: letsencrypt-production-gandi
          kubernetes.io/tls-acme: "true"
          nginx.ingress.kubernetes.io/ssl-redirect: "true"
        endpoints:
          webhooks:
            extraAnnotations:
              # The number of connections to allow is estimated to ~1.5x the number
              # of webhook journal client for the scn endpoint
              # Another estimated could be around 1 connection per ~15 origin_visits_status/s
              # Adapt the replicas and workers if this values is changed
              nginx.ingress.kubernetes.io/limit-connections: "10"
            tlsEnabled: true
            paths:
              - path: /save/origin/visit/webhook
            extraWhitelistSourceRange:
              - 192.168.100.0/24
              # moma access due to the absence of TLS termination on internal ingresses
              # svix-server endpoints requires TLS connections
              - 128.93.166.2/32
      databaseConfigurationRef: postgresqlWebConfiguration
      searchConfigurationRef: remoteSearchConfiguration
      schedulerConfigurationRef: remoteSchedulerConfiguration
      storageConfigurationRef: remoteStorageConfiguration
      vaultConfigurationRef: remoteVaultConfiguration
      indexerStorageConfigurationRef: remoteReadOnlyIndexerStorageConfiguration
      countersConfigurationRef: remoteCountersConfiguration
      historyCountersUrlRef: historyCountersUrl
      esWorkersIndexUrlRef: esWorkersIndexUrl
      djangoConfigurationRef: djangoWebConfiguration
      giveConfigurationRef: giveConfiguration
      throttlingConfigurationRef: webThrottling
      addForgeNowConfigurationRef: addForgeNowConfiguration
      webhooksConfigurationRef: webhooksConfiguration
      depositConfigurationRef: depositConfiguration
      keycloakConfigurationRef: keycloakConfiguration
      inboundEmailConfigurationRef: inboundEmailConfiguration
      djangoAppsRef: webDjangoApps

      extraConfig:
        save_code_now_webhook_secret: ${WEBHOOKS_SECRET}
        search_config:
          metadata_backend: swh-search
        inbound_email:
          shared_key: ${INBOUND_EMAIL_SHARED_KEY}
        content_display_max_size: 5242880
        give:
          public_key: ${GIVE_PUBLIC_KEY}
          token: ${GIVE_PRIVATE_TOKEN}
        matomo:
          url: https://piwik.inria.fr/
          site_id: 59

objstorageReplayer:
  enabled: true
  journalClientConfigurationRef: authenticatedJournalClientConfiguration
  extraCliLogLevel: "--log-level azure.core.pipeline.policies.http_logging_policy:WARNING"
  deployments:
    winery:
      enabled: true
      destinationObjstorageConfigurationRef: wineryObjstorageRWConfiguration
      sourceObjstorageConfigurationRef: roObjstorageForWineryReplayerConfiguration
      replicas: 16
      fetchConcurrency: 20
      checkDestination: "true"
      journalClientOverrides:
        group_id: swh-archive-prod-winery-content-replayer-check
        auto_offset_reset: earliest
        batch_size: 1000
      error_reporter:
        host: redis-winery-replay.redis
        port: 6379
        db: 1
    s3:
      enabled: true
      destinationObjstorageConfigurationRef: s3RWObjectstorageConfiguration
      sourceObjstorageConfigurationRef: roObjstorageForS3ReplayerConfiguration
      replicas: null  # handled by keda autoscaling
      fetchConcurrency: 20
      journalClientOverrides:
        group_id: swh-archive-prod-s3-content-replayer
        auto_offset_reset: earliest
        batch_size: 1000
      autoScaling:
        minReplicaCount: 4
        stopWhenNoActivity: false
        maxReplicaCount: 32
        advancedKedaConfig:
          horizontalPodAutoscalerConfig:
            behavior:
              scaleDown:
                # Only scale down every 300 seconds
                stabilizationWindowSeconds: 300
                # Remove at most 25% or 4 pods over a 300 second period
                selectPolicy: Min
                policies:
                - periodSeconds: 300
                  type: Percent
                  value: 25
                - periodSeconds: 300
                  type: Pods
                  value: 4
              scaleUp:
                # Only scale up every 300 seconds
                stabilizationWindowSeconds: 300
                # Add at most 25% of total, or 4 pods, over a 300 second period
                policies:
                - periodSeconds: 300
                  type: Percent
                  value: 25
                - periodSeconds: 300
                  type: Pods
                  value: 4
                selectPolicy: Min

cookers:
  enabled: false
  storageConfigurationRef: remoteROStorageConfiguration
  celeryConfigurationRef: consumerCeleryConfiguration
  vaultConfigurationRef: remoteVaultConfiguration
  graphConfigurationRef: vaultGraphConfiguration
  objstorageConfigurationRef: roObjstorageHighParallelismConfiguration
  deployments:
    simple:
      ackLate: true
      queues:
        - swh.vault.cooking_tasks.SWHCookingTask
      autoScaling:
        minReplicaCount: 1
        maxReplicaCount: 8
    # According to current data, only the previous cooking task are running, hence the
    # lower number of pods
    batch:
      queues:
        - swh.vault.cooking_tasks.SWHBatchCookingTask
      autoScaling:
        minReplicaCount: 1
        maxReplicaCount: 2

counters:
  enabled: false
  journalClient:
    enabled: false
    countersConfigurationRef: remoteCountersConfiguration
    journalConfigurationRef: journalClientCountersConfiguration
  refreshCountersCache:
    enabled: false
    cron: "0 */1 * * *"
    concurrencyPolicy: Forbid
    countersConfigurationRef: remoteCountersConfiguration
    historyFiles:
      # cache file
      - history.json
      # static counter history (from swh's inception)
      - static_history.json
  rpc:
    enabled: true
    fetchStaticHistory: true
    scrapeMetrics: true
    cacheBaseDirectory: /srv/softwareheritage/counters
    countersConfigurationRef: countersRedis
    historyConfigurationRef: countersHistoryConfiguration
    replicas: 2
    gunicorn:
      workers: 2
      threads: 1
      timeout: 30
    # autoScaling:
    #   minReplicaCount: 2
    #   maxReplicaCount: 4
    #   cpuPercentageUsage: 100
    hosts:
      - counters-rpc-ingress
      # - counters.internal.softwareheritage.org
    ingress:
      enabled: true
      # Default allowed ip ranges that can be extended per ingress definitions paths
      whitelistSourceRangeRef: internalNetworkRanges
      endpoints:
        default:
          paths:
            - path: /
          extraWhitelistSourceRange:
            # vpn network
            - 192.168.101.0/24

webhooks:
  enabled: false
  svixConfigurationRef: svixConfiguration
  journalClientConfigurationRef: journalClientConfiguration
  priorityClassName: frontend-rpc-workload
  autoScaling:
    minReplicaCount: 2
    maxReplicaCount: 5
    lagThreshold: 2000
  deployments:
    origin-visit-status:
      replicas: 0
      dnsConfigurationRef: dnsConfiguration
      requestedCpu: 100m
      requestedMemory: 100Mi
      logLevel: INFO httpx:WARNING
      journalClientOverrides:
        auto_offset_reset: latest
        group_id: swh-archive-prod-webhooks
        object_types:
          - origin_visit_status

storage_backfiller:
  enabled: false
  # pin version to avoid stopping jobs during new deployment
  imageVersion: '20240603.1'
  swhUtilsImageVersion: '20231211.1'
  priorityClassName: background-workload
  deployments:
    content:
      enabled: false
      checkDbVersion: true
      storageConfigurationRef: ROStorageConfiguration
      journalConfigurationRef: storageJournalWriterConfiguration
      object_type: raw_extrinsic_metadata
      ranges: 1
      prefix: swh:1:cnt
      requestedCpu: 450m
      requestedMemory: 1200Mi
    release:
      enabled: false
      checkDbVersion: true
      storageConfigurationRef: ROStorageConfiguration
      journalConfigurationRef: storageJournalWriterConfiguration
      object_type: raw_extrinsic_metadata
      ranges: 1
      prefix: swh:1:rel
      requestedCpu: 450m
      requestedMemory: 1200Mi
    snapshot:
      enabled: false
      checkDbVersion: true
      storageConfigurationRef: ROStorageConfiguration
      journalConfigurationRef: storageJournalWriterConfiguration
      object_type: raw_extrinsic_metadata
      ranges: 1
      prefix: swh:1:snp
      requestedCpu: 450m
      requestedMemory: 1200Mi
    directory:
      enabled: false
      checkDbVersion: true
      storageConfigurationRef: ROStorageConfiguration
      journalConfigurationRef: storageJournalWriterConfiguration
      object_type: raw_extrinsic_metadata
      ranges: 16
      prefix: swh:1:dir
      requestedCpu: 450m
      requestedMemory: 1200Mi
    revision:
      enabled: false
      checkDbVersion: true
      storageConfigurationRef: ROStorageConfiguration
      journalConfigurationRef: storageJournalWriterConfiguration
      object_type: raw_extrinsic_metadata
      ranges: 16
      prefix: swh:1:rev
      requestedCpu: 450m
      requestedMemory: 1200Mi
    origin:
      enabled: false
      checkDbVersion: true
      storageConfigurationRef: ROStorageConfiguration
      journalConfigurationRef: storageJournalWriterConfiguration
      object_type: raw_extrinsic_metadata
      ranges: 16
      prefix: swh:1:ori
      requestedCpu: 450m
      requestedMemory: 1200Mi

alterGraphConfiguration:
  url: http://graph.internal.softwareheritage.org:5009/graph
  timeout: null

saamZfsDeleteObjstorageConfiguration:
  cls: remote
  url: http://objstorage-delete-saam-zfs-rpc-ingress

bancoXfsDeleteObjstorageConfiguration:
  cls: remote
  url: http://objstorage-delete-banco-xfs-rpc-ingress

alter:
  enabled: true
  directoryOutput: /srv/recovery-bundles
  deployment:
    volume:
      name: alter-recovery-bundle-volumes
      mountPath: /srv/recovery-bundles
      volumeDefinition:
        persistentVolumeClaim:
          claimName: alter-recovery-bundles-pvc
    volumeClaim:
      storageClassName: cephfs
      accessModes:
        - ReadWriteMany
      volumeMode: Filesystem
      name: alter-recovery-bundles-pvc
      size: 30Gi

  inventoryStorageConfigurationRef: remoteROStorageConfiguration
  graphConfigurationRef: alterGraphConfiguration
  restorationStorageConfigurationRef: remoteRpcRWStorageConfiguration
  removalSearches:
    search:
      searchConfigurationRef: remoteSearchConfiguration
  removalStorages:
    cassandra:
      storageConfigurationRef: cassandraRWNoObjstorageStorageConfiguration
    postgresql:
      storageConfigurationRef: postgresqlRWNoObjstorageStorageConfiguration
  removalObjstorages:
    saam-zfs:
      objstorageConfigurationRef: saamZfsDeleteObjstorageConfiguration
    banco-xfs:
      objstorageConfigurationRef: bancoXfsDeleteObjstorageConfiguration
    azure:
      objstorageConfigurationRef: azureDeleteObjstorageConfiguration
    s3:
      objstorageConfigurationRef: s3DeleteObjectstorageConfiguration
    winery:
      objstorageConfigurationRef: wineryObjstorageRWConfiguration
  removalJournals:
    journal:
      journalWriterConfigurationRef: storageJournalWriterConfiguration

  recoveryBundlesConfiguration:
    # XXX: these come from the swh.alter tests
    #
    # ALI_SECRET_KEY = (
    #     "AGE-SECRET-KEY-1VREXCYE5WNMUD0WSCF7F6CH3FGQ9P6PGD25QHY7QX8PGDN87P37QQD3L2G"
    # )
    # BOB_SECRET_KEY = (
    #     "AGE-SECRET-KEY-1UPJU3AF4M0NPLSLGVDWJU38F3MDE3JJM48E8NST8V3YKU077HEVSQVPZC2"
    # )
    # CAMILLE_SECRET_KEY = (
    #     "AGE-SECRET-KEY-1NPLST9VXL6E9DEHCVVPUTGH60ZRJFLPZ5HDM93MJW993CGFQ49PQU90RVL"
    # )
    # DLIQUE_SECRET_KEY = (
    #     "AGE-SECRET-KEY-1NPT3PFA7N03DFQY9GN764T4TJCZSLP36YV4S98FLYN0YGX2539GSSFUT4F"
    # )

    secret_sharing:
      minimum_required_groups: 2
      groups:
        legal:
          minimum_required_shares: 1
          recipient_keys:
            Ali: age123hpq9m25xsmx7caqvyv8k3fxaqastc3evyq9q7myur7l9ukj4dsnp7a5v
            Bob: age1mrhte5tlpzpz57gg85nzcefqc5pm5usmakqpuurxux7ry2rmhdgs7r9u68
        sysadmins:
          minimum_required_shares: 1
          recipient_keys:
            Camille: age1ahuqxgjmvfm65shmwqa7xa703vvcla528swga3zempnxslj3pczqtx6wr8
            Dlique: age1qwu50kncctmpky7gg5s0v4mt4fzc4wjwj6mfjzhtk3wn6pspkyksmsmhze

provenance:
  enabled: false
  deployments:
    graph-granet:
      graphConfigurationRef: provenanceGraphGrpcConfiguration
      replicas: 2
      gunicorn:
        workers: 8
        threads: 1
      hosts:
        - webapp-provenance-ingress
      ingress:
        enabled: true
        whitelistSourceRangeRef: clusterNetworkRanges
        extraAnnotations:
          nginx.ingress.kubernetes.io/proxy-body-size: 4G
          nginx.ingress.kubernetes.io/proxy-buffering: "on"
          nginx.ingress.kubernetes.io/client-body-buffer-size: 128K
        endpoints:
          default:
            paths:
              - path: /
      # extraIngresses:
      #   - hosts:
      #     - provenance.internal.softwareheritage.org
      #     whitelistSourceRangeRef: internalNetworkRanges
      #     endpoints:
      #       default:
      #         paths:
      #           - path: /
      #         extraWhitelistSourceRange:
      #           - 192.168.50.0/24 # for blackbox monitoring
      #           - 192.168.101.0/24 # vpn network

# Replayer kafka -> postgresql to keep in sync with the main cassandra backend
storageReplayer:
  enabled: true
  journalClientConfigurationRef: storageReplayerJournalClientConfiguration
  storageConfigurationRef: directPostgresqlReplayerStorageConfiguration
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: "swh/replayer"
            operator: In
            values:
            - "true"
  # Make the replayers fail fast if any issue arise (at first)
  # error_reporter:
  #   host: redis-postgresql-replayers.redis  # /!\ this instance does not exist yet
  #   port: 6379
  #   db: 1
  deployments:
    content:
      journalClientOverrides:
        group_id: swh-prod-postgresql-replayer-content
        object_types:
          - content
      requestedCpu: 425m
      requestedMemory: 200Mi
      autoScaling:
        maxReplicaCount: 64
    directory:
      journalClientOverrides:
        group_id: swh-prod-postgresql-replayer-directory
        object_types:
          - directory
        batch_size: 250
      # Full replay
      requestedCpu: 500m
      requestedMemory: 250Mi
      # Follow up consumption
      # requestedMemory: 100Mi
      autoScaling:
        maxReplicaCount: 10
    extid:
      journalClientOverrides:
        group_id: swh-prod-postgresql-replayer-extid
        object_types:
          - extid
        batch_size: 1000
      # Full replay
      # requestedCpu: 400m
      requestedMemory: 200Mi
      # Follow up consumption
      requestedCpu: 50m
      autoScaling:
        maxReplicaCount: 5
    metadata:
      journalClientOverrides:
        group_id: swh-prod-postgresql-replayer-metadata
        object_types:
          - metadata_authority
          - metadata_fetcher
      # follow up consumption
      requestedCpu: 50m
      requestedMemory: 100Mi
      autoScaling:
        maxReplicaCount: 5
    raw-extrinsic-metadata:
      journalClientOverrides:
        group_id: swh-prod-postgresql-replayer-raw-extrinsic-metadata
        object_types:
        - raw_extrinsic_metadata
        batch_size: 250
      # Full replay
      requestedCpu: 400m
      requestedMemory: 200Mi
      # follow up consumption
      # requestedCpu: 50m
      autoScaling:
        maxReplicaCount: 5
    origin:
      journalClientOverrides:
        group_id: swh-prod-postgresql-replayer-origin
        object_types:
          - origin
        batch_size: 1000
      # Full replay
      # requestedCpu: 400m
      requestedMemory: 200Mi
      # Follow up consumption
      requestedCpu: 50m
      autoScaling:
        maxReplicaCount: 5
    origin-visit:
      journalClientOverrides:
        group_id: swh-prod-postgresql-replayer-origin-visit
        object_types:
          - origin_visit
        batch_size: 1000
      # Full replay
      requestedCpu: 400m
      requestedMemory: 400Mi
      # Follow up consumption
      # requestedCpu: 100m
      # requestedMemory: 100Mi
      autoScaling:
        maxReplicaCount: 5
    origin-visit-status:
      journalClientOverrides:
        group_id: swh-prod-postgresql-replayer-origin-visit-status
        object_types:
          - origin_visit_status
        batch_size: 1000
      # Full replay
      requestedCpu: 500m
      requestedMemory: 300Mi
      # Follow up consumption
      # requestedCpu: 55m
      # requestedMemory: 200Mi
      autoScaling:
        maxReplicaCount: 5
    release:
      journalClientOverrides:
        group_id: swh-prod-postgresql-replayer-release
        object_types:
          - release
        batch_size: 1000
      # Full replay
      # requestedCpu: 600m
      requestedMemory: 300Mi
      # follow up consumption
      requestedCpu: 50m
      autoScaling:
        maxReplicaCount: 5
    revision:
      journalClientOverrides:
        group_id: swh-prod-postgresql-replayer-revision
        object_types:
          - revision
        batch_size: 1000
      # Full replay
      # requestedCpu: 750m
      # requestedMemory: 750Mi
      # follow up consumption
      requestedCpu: 50m
      requestedMemory: 400Mi
      autoScaling:
        maxReplicaCount: 5
    skipped-content:
      journalClientOverrides:
        group_id: swh-prod-postgresql-replayer-skipped-content
        object_types:
          - skipped_content
        batch_size: 100
      # Full replay
      # requestedCpu: 300m
      requestedMemory: 400Mi
      # follow up consumption
      requestedCpu: 50m
      autoScaling:
        maxReplicaCount: 5
    snapshot:
      journalClientOverrides:
        group_id: swh-prod-postgresql-replayer-snapshot
        object_types:
          - snapshot
        batch_size: 250
      # Full replay
      # requestedCpu: 400m
      requestedMemory: 250Mi
      # follow up consumption
      requestedCpu: 80m
      autoScaling:
        maxReplicaCount: 5
