sentry:
  environment: staging

loaders:
  enabled: true
  storage:
    host: storage1.internal.staging.swh.network
    port: 5002
  amqp:
    host: scheduler0.internal.staging.swh.network
    port: 5672
  deployments:
    addforgenow:
      image: swh_loader_git_image
      requestedMemory: 256Mi
      requestedCpu: 200m
      queues:
        - add_forge_now:swh.loader.git.tasks.UpdateGitRepository
      ackLate: true
      autoScaling:
        queueThreshold: 1
        maxReplicaCount: 2
      sentrySwhPackage: swh.loader.git
    archive:
      requestedMemory: 256Mi
      requestedCpu: 200m
      image: swh_loader_package_image
      queues:
        - swh.loader.package.archive.tasks.LoadArchive
      autoScaling:
        maxReplicaCount: 1
      sentrySwhPackage: swh.loader.core
    bzr:
      requestedMemory: 256Mi
      requestedCpu: 200m
      queues:
        - swh.loader.bzr.tasks.LoadBazaar
      autoScaling:
        maxReplicaCount: 1
      sentrySwhPackage: swh.loader.bzr
    cran:
      requestedMemory: 256Mi
      requestedCpu: 200m
      image: swh_loader_package_image
      queues:
        - swh.loader.package.cran.tasks.LoadCRAN
      autoScaling:
        maxReplicaCount: 1
      sentrySwhPackage: swh.loader.core
    cvs:
      requestedMemory: 256Mi
      requestedCpu: 200m
      queues:
        - swh.loader.cvs.tasks.LoadCvsRepository
      autoScaling:
        maxReplicaCount: 1
      sentrySwhPackage: swh.loader.cvs
    content:
      requestedMemory: 256Mi
      requestedCpu: 200m
      queues:
        - swh.loader.core.tasks.LoadContent
      autoScaling:
        maxReplicaCount: 1
      image: swh_loader_package_image
      sentrySwhPackage: swh.loader.core
    directory:
      requestedMemory: 256Mi
      requestedCpu: 200m
      queues:
        - swh.loader.core.tasks.LoadDirectory
      autoScaling:
        maxReplicaCount: 1
      image: swh_loader_package_image
      sentrySwhPackage: swh.loader.core
    debian:
      requestedMemory: 256Mi
      requestedCpu: 200m
      image: swh_loader_package_image
      queues:
        - swh.loader.package.debian.tasks.LoadDebian
      autoScaling:
        maxReplicaCount: 1
      sentrySwhPackage: swh.loader.core
    deposit:
      requestedMemory: 256Mi
      requestedCpu: 200m
      image: swh_loader_package_image
      queues:
        - swh.loader.package.deposit.tasks.LoadDeposit
      autoScaling:
        queueThreshold: 1
        maxReplicaCount: 2
      sentrySwhPackage: swh.loader.core
      extraConfig:
        deposit:
          url: "https://deposit-rp.internal.staging.swh.network/1/private"
          auth:
            username: "${DEPOSIT_USERNAME}"
            password: "${DEPOSIT_PASSWORD}"
        default_filename: archive.tar

    git:
      requestedMemory: 256Mi
      requestedCpu: 200m
      queues:
        - swh.loader.git.tasks.UpdateGitRepository
        - swh.loader.git.tasks.LoadDiskGitRepository
        - swh.loader.git.tasks.UncompressAndLoadDiskGitRepository
      autoScaling:
        maxReplicaCount: 1
      sentrySwhPackage: swh.loader.git
    golang:
      image: swh_loader_package_image
      requestedMemory: 256Mi
      requestedCpu: 200m
      queues:
        - swh.loader.package.golang.tasks.LoadGolang
      autoScaling:
        maxReplicaCount: 1
      sentrySwhPackage: swh.loader.core
    highpriority:
      requestedMemory: 256Mi
      requestedCpu: 200m
      queues:
        - save_code_now:swh.loader.bzr.tasks.LoadBazaar
        - save_code_now:swh.loader.cvs.tasks.LoadCvsRepository
        - save_code_now:swh.loader.git.tasks.UpdateGitRepository
        - save_code_now:swh.loader.git.tasks.LoadDiskGitRepository
        - save_code_now:swh.loader.git.tasks.UncompressAndLoadDiskGitRepository
        - save_code_now:swh.loader.mercurial.tasks.LoadArchiveMercurial
        - save_code_now:swh.loader.mercurial.tasks.LoadMercurial
        - save_code_now:swh.loader.svn.tasks.LoadSvnRepository
        - save_code_now:swh.loader.svn.tasks.MountAndLoadSvnRepository
        - save_code_now:swh.loader.svn.tasks.DumpMountAndLoadSvnRepository
        - save_code_now:swh.loader.package.archive.tasks.LoadArchive
      ackLate: true
      autoScaling:
        queueThreshold: 1
        maxReplicaCount: 3
      sentrySwhPackage: swh.loader.highpriority
    maven:
      requestedMemory: 256Mi
      requestedCpu: 200m
      image: swh_loader_package_image
      queues:
        - swh.loader.package.maven.tasks.LoadMaven
      autoScaling:
        maxReplicaCount: 1
      sentrySwhPackage: swh.loader.core
    mercurial:
      requestedMemory: 256Mi
      requestedCpu: 200m
      queues:
        - swh.loader.mercurial.tasks.LoadArchiveMercurial
        - swh.loader.mercurial.tasks.LoadMercurial
      autoScaling:
        maxReplicaCount: 1
      sentrySwhPackage: swh.loader.mercurial
    npm:
      requestedMemory: 256Mi
      requestedCpu: 200m
      image: swh_loader_package_image
      queues:
        - swh.loader.package.npm.tasks.LoadNpm
      autoScaling:
        maxReplicaCount: 1
      sentrySwhPackage: swh.loader.core
    opam:
      requestedMemory: 256Mi
      requestedCpu: 200m
      image: swh_loader_package_image
      queues:
        - swh.loader.package.opam.tasks.LoadOpam
      autoScaling:
        maxReplicaCount: 1
      sentrySwhPackage: swh.loader.core
      extraConfig:
        # FIXME: Find a way to avoid this initialization step in loader task
        initialize_opam_root: true
    pypi:
      requestedMemory: 256Mi
      requestedCpu: 200m
      image: swh_loader_package_image
      queues:
        - swh.loader.package.pypi.tasks.LoadPyPI
      autoScaling:
        maxReplicaCount: 1
      sentrySwhPackage: swh.loader.core
    pubdev:
      requestedMemory: 256Mi
      requestedCpu: 200m
      image: swh_loader_package_image
      queues:
        - swh.loader.package.pubdev.tasks.LoadPubDev
      autoScaling:
        maxReplicaCount: 1
      sentrySwhPackage: swh.loader.core
    svn:
      requestedMemory: 256Mi
      requestedCpu: 200m
      queues:
        - swh.loader.svn.tasks.LoadSvnRepository
        - swh.loader.svn.tasks.MountAndLoadSvnRepository
        - swh.loader.svn.tasks.DumpMountAndLoadSvnRepository
      autoScaling:
        maxReplicaCount: 1
      sentrySwhPackage: swh.loader.svn

listers:
  enabled: true
  sentrySwhPackage: swh.lister
  storage:
    host: storage1.internal.staging.swh.network
    port: 5002
  scheduler:
    host: scheduler0.internal.staging.swh.network
    port: 5008
  amqp:
     host: scheduler0.internal.staging.swh.network
  deployments:
    all:
      maxTasksperchild: 3
      queues:
      - swh.lister.cgit.tasks.CGitListerTask
      - swh.lister.cran.tasks.CRANListerTask
      - swh.lister.debian.tasks.DebianListerTask
      - swh.lister.gitea.tasks.IncrementalGiteaLister
      - swh.lister.gitea.tasks.RangeGiteaLister
      - swh.lister.gitea.tasks.FullGiteaRelister
      - swh.lister.gitlab.tasks.IncrementalGitLabLister
      - swh.lister.gitlab.tasks.RangeGitLabLister
      - swh.lister.gitlab.tasks.FullGitLabRelister
      - swh.lister.npm.tasks.NpmListerTask
      - swh.lister.phabricator.tasks.FullPhabricatorLister
      - swh.lister.pypi.tasks.PyPIListerTask
      autoScaling:
        maxReplicaCount: 2
      requestedCpu: 500m
      requestedMemory: 512Mi
    bower:
      queues:
      - swh.lister.bower.tasks.BowerListerTask
      autoScaling:
        maxReplicaCount: 1
    bitbucket:
      queues:
      - swh.lister.bitbucket.tasks.IncrementalBitBucketLister
      - swh.lister.bitbucket.tasks.FullBitBucketRelister
      autoScaling:
        maxReplicaCount: 1
    gnu-full:
      queues:
        - swh.lister.gnu.tasks.GNUListerTask
      autoScaling:
        maxReplicaCount: 1
    gogs-full:
      queues:
        - swh.lister.gogs.tasks.FullGogsRelister
      autoScaling:
        maxReplicaCount: 1
    golang:
      queues:
      - swh.lister.golang.tasks.FullGolangLister
      - swh.lister.golang.tasks.IncrementalGolangLister
      autoScaling:
        maxReplicaCount: 1
    launchpad:
      queues:
      - swh.lister.launchpad.tasks.FullLaunchpadLister
      - swh.lister.launchpad.tasks.IncrementalLaunchpadLister
      autoScaling:
        maxReplicaCount: 1
    maven:
      queues:
      - swh.lister.maven.tasks.FullMavenLister
      - swh.lister.maven.tasks.IncrementalMavenLister
      autoScaling:
        maxReplicaCount: 1
      requestedCpu: 1000m
      requestedMemory: 1024Mi
    nixguix:
      queues:
      - swh.lister.nixguix.tasks.NixGuixListerTask
      autoScaling:
        maxReplicaCount: 1
      extraConfig:
        # extra extensions to ignore
        extensions_to_ignore:
          - rock
    opam:
      queues:
      - swh.lister.opam.tasks.OpamListerTask
      autoScaling:
        maxReplicaCount: 1
    pubdev:
      queues:
        - swh.lister.pubdev.tasks.PubDevListerTask
      autoScaling:
        maxReplicaCount: 1
    sourceforge:
      queues:
      - swh.lister.sourceforge.tasks.FullSourceForgeLister
      - swh.lister.sourceforge.tasks.IncrementalSourceForgeLister
      autoScaling:
        maxReplicaCount: 1

cookers:
  enabled: true
  storage:
    host: storage1.internal.staging.swh.network
    port: 5002
  vault:
    host: vault.internal.staging.swh.network
    port: 5005
  amqp:
     host: scheduler0.internal.staging.swh.network
  deployments:
    simple:
      queues:
        - swh.vault.cooking_tasks.SWHCookingTask
      autoScaling:
        maxReplicaCount: 2
    batch:
      queues:
        - swh.vault.cooking_tasks.SWHBatchCookingTask
      autoScaling:
        maxReplicaCount: 2

checker_deposit:
  enabled: true
  storage:
    host: storage1.internal.staging.swh.network
    port: 5002
  deposit:
    host: deposit-rp.internal.staging.swh.network
  amqp:
    host: scheduler0.internal.staging.swh.network
  autoScaling:
    maxReplicaCount: 2

loader_metadata:
  enabled: true
  storage:
    host: storage1.internal.staging.swh.network
    port: 5002
  scheduler:
    host: scheduler0.internal.staging.swh.network
    port: 5008
  consumerGroup: swh.loader_metadata.journal_client
  prefix: swh.journal.objects
  journalBrokers:
    secretName: swh-archive-broker-secret
    hosts:
      - journal1.internal.staging.swh.network:9092
    user: swh-archive-stg
  autoScaling:
    maxReplicaCount: 2

indexers:
  enabled: true
  storage:
    host: storage1.internal.staging.swh.network
    port: 5002
  scheduler:
    host: scheduler0.internal.staging.swh.network
    port: 5008
  indexer_storage:
    host: storage1.internal.staging.swh.network
    port: 5007
  objstorage:
    host: storage1.internal.staging.swh.network
    port: 5003
  journalBrokers:
    secretName: swh-archive-broker-secret
    hosts:
      - journal1.internal.staging.swh.network:9092
    user: swh-archive-stg
  deployments:
    # content-mimetype:
    #   indexer_type: content_mimetype
    #   consumerGroup: swh.indexer.journal_client.content_mimetype
    #   prefix: swh.journal.objects
    #   extraConfig:
    #     tools:
    #       name: file
    #       # FIXME: Push this version to be autodetected by indexer
    #       version: 2:0.4.15-2
    #       configuration:
    #         type: library
    #         debian-package: python3-magic
    #     write_batch_size: 1000
    #   autoScaling:
    #     maxReplicaCount: 2
    # content-fossology-license:
    #   indexer_type: content_fossology_license
    #   consumerGroup: swh.indexer.journal_client.content_fossology_license
    #   prefix: swh.journal.objects
    #   extraConfig:
    #     workdir: /tmp/swh/indexer.fossology.license/
    #     tools:
    #       name: 'nomos'
    #       version: '3.1-1~bpo9~swh+1'
    #       configuration:
    #         command_line: "nomossa <filepath>"
    #     write_batch_size: 1000
    #   autoScaling:
    #     maxReplicaCount: 2
    # origin-extrinsic:
    #   indexer_type: extrinsic_metadata
    #   consumerGroup: swh.indexer.journal_client.extrinsic_metadata
    #   prefix: swh.journal.objects
    #   extraConfig:
    #     tools:
    #       name: swh-metadata-detector
    #       version: 0.0.2
    #       configuration: {}
    #   autoScaling:
    #     maxReplicaCount: 2
    origin-intrinsic:
      indexer_type: origin_intrinsic_metadata
      consumerGroup: swh.indexer.journal_client.origin_intrinsic_metadata
      prefix: swh.journal.objects
      batch_size: 200
      extraConfig:
        tools:
          name: swh-metadata-detector
          version: 0.0.2
          configuration: {}
      autoScaling:
        maxReplicaCount: 6

graphql:
  enabled: true
  sentry:
    enabled: true
  backends:
    storage:
      host: webapp.internal.staging.swh.network
      port: 5002
    search:
      host: search0.internal.staging.swh.network
      port: 5010
  debug: yes
  introspection: yes
  replicas: 2
  gunicorn:
    threads: 4
    workers: 2
    timeout: 3600
  ingress:
    enabled: true
    httpPath: /
    host: graphql.internal.staging.swh.network
  logLevel: DEBUG
  auth:
    server: https://auth.softwareheritage.org/auth/
    realm: SoftwareHeritageStaging
    client: swh-web
    cacheUrl: memcached://memcached:11211

memcached:
  enabled: true
