primaryPostgresqlRWStorageConfiguration:
  cls: postgresql
  host: db1.internal.staging.swh.network
  port: '5432'
  user: swh
  pass: ${POSTGRESQL_PASSWORD}
  db: swh
  secrets:
    POSTGRESQL_PASSWORD:
      secretKeyRef: swh-postgresql-common-secret
      secretKeyName: postgres-swh-password

primaryPostgresqlROStorageConfiguration:
  cls: postgresql
  host: db1.internal.staging.swh.network
  port: '5432'
  user: guest
  pass: ${POSTGRESQL_PASSWORD}
  db: swh
  secrets:
    POSTGRESQL_PASSWORD:
      secretKeyRef: swh-postgresql-common-secret
      secretKeyName: postgres-guest-password

directPostgresqlReplayerStorageConfiguration:
  pipelineStepsRef: storagePipelineStepsWithRecordReferences
  storageConfigurationRef: primaryPostgresqlRWStorageConfiguration
  objstorageConfigurationRef: noopObjectStorage

## Direct postgresql connection without any filter or objstorage
scrubberROStorageConfiguration:
  storageConfigurationRef: primaryPostgresqlROStorageConfiguration

storageJournalWriterConfiguration:
  brokersConfigurationRef: kafkaBrokers
  producerConfig:
    message.max.bytes: 1000000000
  prefix: swh.journal.objects
  clientId: swh.storage.journal_writer.${HOSTNAME}
  anonymize: true

postgresqlSchedulerConfiguration:
  cls: postgresql
  host: db1.internal.staging.swh.network
  port: '5432'
  user: swh-scheduler
  pass: ${POSTGRESQL_PASSWORD}
  db: swh-scheduler
  secrets:
    POSTGRESQL_PASSWORD:
      secretKeyRef: swh-scheduler-postgresql-common-secret
      secretKeyName: postgres-swh-scheduler-password

scrubberJournalClientConfiguration:
  cls: kafka
  brokersConfigurationRef: internalSecuredKafkaBrokers
  group_id: swh-archive-stg-journalchecker
  on_eof: restart
  sasl.mechanism: SCRAM-SHA-512
  security.protocol: SASL_SSL
  sasl.username: swh-archive-stg
  sasl.password: ${BROKER_USER_PASSWORD}
  prefix: swh.journal.objects
  secrets:
    BROKER_USER_PASSWORD:
      secretKeyRef: swh-archive-broker-secret
      secretKeyName: BROKER_USER_PASSWORD

rwStoragePipelineSteps:
  - cls: record_references

readWriteStorageConfiguration:
  pipelineStepsRef: rwStoragePipelineSteps
  storageConfigurationRef: primaryPostgresqlRWStorageConfiguration
  objstorageConfigurationRef: remoteReadWriteObjstorageConfiguration
  journalWriterConfigurationRef: storageJournalWriterConfiguration

readOnlyStorageConfiguration:
  pipelineStepsRef: readOnlyStoragePipelineSteps
  storageConfigurationRef: primaryPostgresqlROStorageConfiguration
  objstorageConfigurationRef: remoteReadOnlyObjstorageConfiguration

graphql:
  enabled: true
  deployments:
    postgresql:
      debug: yes
      logLevel: DEBUG
      introspection: yes
      storageConfigurationRef: remoteROStorageConfiguration
      searchConfigurationRef: remoteSearchConfiguration
      replicas: 1
      gunicorn:
        threads: 4
        workers: 2
        timeout: 3600
      hosts:
        - webapp.staging.swh.network
        - graphql.internal.staging.swh.network
      ingress:
        enabled: true
        extraAnnotations:
          nginx.ingress.kubernetes.io/rewrite-target: /
          nginx.ingress.kubernetes.io/preserve-trailing-slash: "true"
          nginx.ingress.kubernetes.io/ssl-redirect: "false"
        endpoints:
          default:
            paths:
              - path: /graphql/
      auth:
        enabled: true
        server: https://auth.softwareheritage.org/auth/
        realm: SoftwareHeritageStaging
        client: swh-web
        cacheUrl: memcached://memcached:11211
      maxRawContentSize: 10000
      requestedCpu: 25m
      requestedMemory: 150Mi

storage_replayer:
  enabled: true
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: "swh/replayer"
            operator: In
            values:
            - "true"
  journalBrokers:
    hosts:
      - journal2.internal.staging.swh.network:9094
    user: swh-postgresql-stg
    groupIdName: postgresql
    secretName: swh-postgresql-broker-secret
  storageConfigurationRef: directPostgresqlReplayerStorageConfiguration
  checkDbVersion: true
  error_reporter:
    host: redis-postgresql.redis
    port: 6379
    db: 1
  deployments:
    content:
      objects:
        - content
      privileged: true
      requestedCpu: 10m
      requestedMemory: 100Mi
      autoScaling:
        maxReplicaCount: 5
    directory:
      objects:
        - directory
      batchSize: 250
      privileged: true
      requestedCpu: 50m
      requestedMemory: 100Mi
      autoScaling:
        maxReplicaCount: 5
    extid:
      objects:
        - extid
      batchSize: 1000
      privileged: true
      # Full replay
      #requestedCpu: 400m
      # equestedMemory: 200Mi
      #Follow up consumption
      requestedCpu: 10m
      requestedMemory: 50Mi
      autoScaling:
        maxReplicaCount: 5
    metadata:
      objects:
        - metadata_authority
        - metadata_fetcher
      privileged: true
      # follow up consumption
      requestedCpu: 30m
      requestedMemory: 50Mi
      autoScaling:
        maxReplicaCount: 5
    raw-extrinsic-metadata:
      objects:
        - raw_extrinsic_metadata
      batchSize: 250
      privileged: true
      # Full replay
      #requestedCpu: 400m
      #requestedMemory: 200Mi
      # follow up consumption
      requestedCpu: 20m
      requestedMemory: 50Mi
      autoScaling:
        maxReplicaCount: 5
    origin:
      objects:
        - origin
      batchSize: 1000
      privileged: true
      # Full replay
      #requestedCpu: 400m
      #requestedMemory: 200Mi
      #Follow up consumption
      requestedCpu: 10m
      requestedMemory: 50Mi
      autoScaling:
        maxReplicaCount: 5
    origin-visit:
      objects:
        - origin_visit
      batchSize: 1000
      privileged: true
      # Full replay
      #requestedCpu: 400m
      #requestedMemory: 400Mi
      #Follow up consumption
      requestedCpu: 10m
      requestedMemory: 50Mi
      autoScaling:
        maxReplicaCount: 5
    origin-visit-status:
      objects:
        - origin_visit_status
      batchSize: 1000
      privileged: true
      # Full replay
      #requestedCpu: 500m
      #requestedMemory: 300Mi
      #Follow up consumption
      requestedCpu: 10m
      requestedMemory: 50Mi
      autoScaling:
        maxReplicaCount: 5
    release:
      objects:
        - release
      batchSize: 1000
      privileged: true
      # Full replay
      #requestedCpu: 600m
      # requestedMemory: 300Mi
      # follow up consumption
      requestedCpu: 10m
      requestedMemory: 50Mi
      autoScaling:
        maxReplicaCount: 5
    revision:
      objects:
        - revision
      batchSize: 1000
      privileged: true
      # Full replay
      #requestedCpu: 750m
      #requestedMemory: 750Mi
      # follow up consumption
      requestedCpu: 10m
      requestedMemory: 50Mi
      autoScaling:
        maxReplicaCount: 5
    skipped-content:
      objects:
        - skipped_content
      batchSize: 100
      privileged: true
      # Full replay
      #requestedCpu: 300m
      #requestedMemory: 400Mi
      # follow up consumption
      requestedCpu: 10m
      requestedMemory: 50Mi
      autoScaling:
        maxReplicaCount: 5
    snapshot:
      objects:
        - snapshot
      batchSize: 250
      privileged: true
      # Full replay
      #requestedCpu: 400m
      #requestedMemory: 250Mi
      # follow up consumption
      requestedCpu: 10m
      requestedMemory: 50Mi
      autoScaling:
        maxReplicaCount: 5

toolbox:
  enabled: true
  configs:
    scheduler:
      schedulerDbConfigurationRef: postgresqlSchedulerConfiguration
      celeryConfigurationRef: producerCeleryConfiguration
    storage:
      storageDbConfigurationRef: primaryPostgresqlRWStorageConfiguration
    scrubber-journal:
      scrubberDbConfigurationRef: postgresqlScrubberConfiguration
      journalClientConfigurationRef: scrubberJournalClientConfiguration
    scrubber-storage:
      scrubberDbConfigurationRef: postgresqlScrubberConfiguration
      storageConfigurationRef: scrubberROStorageConfiguration

scheduler:
  enabled: true
  sentry:
    enabled: true
  schedulerConfigurationRef: remoteSchedulerConfiguration
  celeryConfigurationRef: producerCeleryConfiguration
  alerts:
    enabled: true
    period: 15m
    severity: warning
    tooManyMessagesInQueue:
      instances:  # We may have more than one rabbitmq per environment
        scheduler0:
          threshold: 10000

  recurrent:
    enabled: true
    requestedMemory: 400Mi
    requestedCpu: 10m
  rpc:
    enabled: true
    # The scheduler instance to use for rpc must be a postgresql instance
    schedulerConfigurationRef: postgresqlSchedulerConfiguration
    replicas: 2
    gunicorn:
      threads: 5
      workers: 4
      timeout: 60
    hosts:
      - scheduler.internal.staging.swh.network
    ingress:
      enabled: true
      # TODO: Improve the authorization internal cluster ip range.
      # Default allowed ip ranges that can be extended per ingress definitions paths
      whitelistSourceRangeRef: stagingNetworkRanges
      endpoints:
        default:
          paths:
            - path: /
        read-only:
          paths:
            - path: /scheduler_metrics/get
              pathType: Exact
            - path: /listers/get
              pathType: Exact
            - path: /lister/get
              pathType: Exact
            - path: /task_type/get
              pathType: Exact
            - path: /task_type/get_all
              pathType: Exact
            - path: /visit_stats/get
              pathType: Exact
            - path: /origins/get
              pathType: Exact
          extraWhitelistSourceRange:
            # vpn network
            - 192.168.101.0/24
    requestedMemory: 700Mi
    requestedCpu: 50m
  updateMetrics:
    enabled: true
    concurrencyPolicy: Forbid
    cron: "0/10 * * * *"  # at every 10th minute from 0 to 59
  journalClient:
    enabled: true
    journalConfigurationRef: journalClientConfiguration
    requestedMemory: 100Mi
    requestedCpu: 10m
  extraServices:
    runner:
      enabled: true
      logLevel: INFO
      period: 10
      requestedMemory: 100Mi
      limitedMemory: 200Mi
      requestedCpu: 10m
      limitedCpu: 20m
    runner-priority:
      enabled: true
      logLevel: INFO
      period: 10
      requestedMemory: 50Mi
      limitedMemory: 100Mi
      requestedCpu: 5m
      limitedCpu: 10m
      extraConfig:
        - load-bzr
        - load-cvs
        - load-git
        - load-svn
        - load-archive-files
        - load-hg
    listener:
      enabled: true
      logLevel: INFO
      requestedMemory: 100Mi
      requestedCpu: 10m

web:
  enabled: true
  logLevel: INFO
  deployments:
    postgresql:
      metricsScrapingEnabled: false
      # small footprint because this webapp is almost not used, only for tests
      replicas: 1
      requestedCpu: 50m
      requestedMemory: 250Mi
      hosts:
        - webapp-postgresql.internal.staging.swh.network
      ingress:
        enabled: true
        secretName: swh-web-crt
        extraAnnotations:
          cert-manager.io/cluster-issuer: letsencrypt-production-gandi
          kubernetes.io/ingress.class: nginx
          kubernetes.io/tls-acme: "true"
          nginx.ingress.kubernetes.io/ssl-redirect: "true"
        tlsEnabled: true
        endpoints:
          default:
            paths:
              - path: /
              - path: /static
                port: 80
          authenticated:
            paths:
              - path: /api/1/provenance/
              - path: /api/1/entity/
              - path: /api/1/content/[^/]+/symbol/
            # auth-file with authentication
            authentication: swh-cassandra/web-auth-secrets
          webhooks:
            paths:
              - path: /save/origin/visit/webhook
            extraWhitelistSourceRange:
              - 192.168.130.1
              - 192.168.130.2
      databaseConfigurationRef: postgresqlWebConfiguration
      searchConfigurationRef: remoteSearchConfiguration
      schedulerConfigurationRef: remoteSchedulerConfiguration
      storageConfigurationRef: remoteReadOnlyStorageConfiguration
      vaultConfigurationRef: remoteVaultConfiguration
      indexerStorageConfigurationRef: remoteIndexerStorageConfiguration
      countersConfigurationRef: remoteCountersConfiguration
      djangoConfigurationRef: djangoWebConfiguration
      depositConfigurationRef: depositConfiguration
      giveConfigurationRef: giveConfiguration
      throttlingConfigurationRef: webThrottling
      addForgeNowConfigurationRef: addForgeNowConfiguration
      keycloakConfigurationRef: keycloakConfiguration
      extraConfig:
        keycloak:
          server_url: https://auth.softwareheritage.org/auth/
          realm_name: SoftwareHeritageStaging
        search_config:
          metadata_backend: swh-search
        content_display_max_size: 5242880
        history_counters_url: http://counters-rpc-ingress/counters_history/history.json
        swh_extra_django_apps:
        - swh.web.add_forge_now
        - swh.web.archive_coverage
        - swh.web.badges
        - swh.web.banners
        - swh.web.deposit
        - swh.web.inbound_email
        - swh.web.jslicenses
        - swh.web.mailmap
        - swh.web.metrics
        - swh.web.save_code_now
        - swh.web.save_origin_webhooks
        - swh.web.vault
        matomo: {}
        give:
          public_key: ${GIVE_PUBLIC_KEY}
          token: ${GIVE_PRIVATE_TOKEN}

scrubber:
  enabled: true
  scrubberDatabaseConfigurationRef: postgresqlScrubberConfiguration
  priorityClassName: background-workload
  storageChecker:
    enabled: true
    storageConfigurationRef: scrubberROStorageConfiguration
    deployments:
      directory-references:
        configName: storage-references-directory
        object: directory
        replicas: 1
        requestedCpu: 100m
        requestedMemory: 100Mi
      directory-hashes:
        configName: storage-hashes-directory
        object: directory
        replicas: 1
        requestedCpu: 100m
        requestedMemory: 100Mi
      release-references:
        # until https://gitlab.softwareheritage.org/swh/devel/swh-scrubber/-/issues/4699 fix
        enabled: false
        configName: storage-references-release
        object: release
        replicas: 1
      release-hashes:
        # until https://gitlab.softwareheritage.org/swh/devel/swh-scrubber/-/issues/4699 fix
        enabled: false
        configName: storage-hashes-release
        object: release
        replicas: 1
      revision-references:
        # until https://gitlab.softwareheritage.org/swh/devel/swh-scrubber/-/issues/4699 fix
        enabled: false
        configName: storage-references-revision
        replicas: 1
        object: revision
      revision-hashes:
        # until https://gitlab.softwareheritage.org/swh/devel/swh-scrubber/-/issues/4699 fix
        enabled: false
        configName: storage-hashes-revision
        replicas: 1
        object: revision
      snapshot-references:
        # until https://gitlab.softwareheritage.org/swh/devel/swh-scrubber/-/issues/4699 fix
        enabled: false
        configName: storage-references-snapshot
        replicas: 1
        object: snapshot
        requestedCpu: 150m
        requestedMemory: 128Mi
      snapshot-hashes:
        # until https://gitlab.softwareheritage.org/swh/devel/swh-scrubber/-/issues/4699 fix
        enabled: false
        configName: storage-hashes-snapshot
        replicas: 1
        object: snapshot
        requestedCpu: 150m
        requestedMemory: 128Mi
  journalChecker:
    enabled: true
    journalClientConfigurationRef: scrubberJournalClientConfiguration
    deployments:
      directory:
        configName: journal-checker-directory
        journalClientOverrides:
          batch_size: 100
        object: directory
        replicas: 1
        requestedMemory: 200Mi
        requestedCpu: 200m
      release:
        configName: journal-checker-release
        journalClientOverrides:
          batch_size: 200
          privileged: true
        object: release
        replicas: 1
        requestedMemory: 200Mi
        requestedCpu: 500m
      revision:
        configName: journal-checker-revision
        journalClientOverrides:
          privileged: true
        object: revision
        replicas: 1
        requestedMemory: 250Mi
        requestedCpu: 600m
      snapshot:
        configName: journal-checker-snapshot
        object: snapshot
        replicas: 1
        requestedCpu: 1
        requestedMemory: 250Mi

storage:
  enabled: true
  deployments:
    postgresql-read-write:
      autoScaling:
        minReplicaCount: 2
        maxReplicaCount: 10
        cpuPercentageUsage: 150
      requestedCpu: 500m
      requestedMemory: 1.5Gi
      storageConfigurationRef: readWriteStorageConfiguration
      hosts:
        - storage-postgresql-read-write-rpc-ingress
      ingress:
        enabled: true
        whitelistSourceRangeRef: stagingNetworkRanges
        extraAnnotations:
          nginx.ingress.kubernetes.io/proxy-body-size: 4G
          nginx.ingress.kubernetes.io/proxy-buffering: "on"
          nginx.ingress.kubernetes.io/client-body-buffer-size: 128K
        endpoints:
          default:
            paths:
              - path: /
      gunicorn:
        threads: 4
        workers: 8
      cronjobs:
        create-object-reference-partitions:
          enabled: true
          logLevel: INFO
          cron: 5 0 * * mon
          concurrencyPolicy: Forbid

    postgresql-read-only:
      autoScaling:
        minReplicaCount: 2
        maxReplicaCount: 10
        cpuPercentageUsage: 150
      requestedCpu: 500m
      requestedMemory: 1.5Gi
      storageConfigurationRef: readOnlyStorageConfiguration
      hosts:
        - storage-postgresql-read-only-rpc-ingress
        - storage-ro.internal.staging.swh.network
      ingress:
        enabled: true
        whitelistSourceRangeRef: stagingNetworkRanges
        extraAnnotations:
          nginx.ingress.kubernetes.io/proxy-body-size: 4G
          nginx.ingress.kubernetes.io/proxy-buffering: "on"
          nginx.ingress.kubernetes.io/client-body-buffer-size: 128K
        endpoints:
          default:
            paths:
              - path: /
            extraWhitelistSourceRange:
              # vpn network
              - 192.168.101.0/24
      gunicorn:
        threads: 4
        workers: 8

