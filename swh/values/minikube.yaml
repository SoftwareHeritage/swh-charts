environment: minikube
sentry:
  enabled: false
  environment: minikube

statsd_exporter:
  enabled: true

fakeRemoteSchedulerConfiguration:
  cls: remote
  url: http://fake-scheduler.i.s.s.n:5008

fakeRemoteSearchConfiguration:
  cls: remote
  url: http://fake-search.i.s.s.n:5005

fakeRemoteVaultConfiguration:
  cls: remote
  url: http://fake-vault.i.s.s.n:5006

fakeRemoteCountersConfiguration:
  cls: remote
  url: http://fake-counters.i.s.s.n:5006

fakePostgresqlStorageConfiguration:
  cls: postgresql
  host: db1.i.s.s.n
  port: 5432
  db: swh-storage
  user: swh
  pass: ${POSTGRESQL_PASSWORD}
  secrets:
    POSTGRESQL_PASSWORD:
      secretKeyRef: swh-storage-postgresql-common-secret
      secretKeyName: postgres-swh-storage-password

fakePostgresqlSchedulerConfiguration:
  cls: postgresql
  host: db1.i.s.s.n
  port: 5432
  db: swh-scheduler
  user: swh
  pass: ${POSTGRESQL_PASSWORD}
  secrets:
    POSTGRESQL_PASSWORD:
      secretKeyRef: swh-scheduler-postgresql-common-secret
      secretKeyName: postgres-swh-scheduler-password

fakePostgresqlScrubberConfiguration:
  cls: postgresql
  host: db1.i.s.s.n
  port: 5432
  db: swh-scrubber
  user: swh-scrubber
  pass: ${POSTGRESQL_PASSWORD}
  secrets:
    POSTGRESQL_PASSWORD:
      secretKeyRef: swh-scrubber-postgresql-common-secret
      secretKeyName: postgres-swh-scrubber-password

fakePostgresqlWebConfiguration:
  host: db1.i.s.s.n
  port: 5432
  db: swh-web
  user: swh-web
  pass: ${POSTGRESQL_PASSWORD}
  secrets:
    POSTGRESQL_PASSWORD:
      secretKeyRef: swh-postgresql-web-secret
      secretKeyName: postgres-swh-web-password

fakeRemoteStorageConfiguration:
  cls: remote
  host: http://fake-storage.i.s.s.n:8002

djangoWebConfiguration:
  secrets:
    DJANGO_SECRET_KEY:
      secretKeyRef: webapp-django-secrets
      secretKeyName: webapp-django-secret-key

fakeRemoteStorageConfigurationRef:
  storageConfigurationRef: fakeRemoteStorageConfiguration

fakePostgresqlStorageConfigurationRef:
  storageConfigurationRef: fakePostgresqlStorageConfiguration

kafkaBrokers:
  - fakeBroker1
  - fakeBroker2

journalClientConfiguration:
  kafkaBrokersRef: kafkaBrokers
  groupId: swh.scheduler.journal_client

fakeDepositConfiguration:
  host: deposit.i.i.s.n
  user: ${DEPOSIT_USERNAME}
  pass: ${DEPOSIT_PASSWORD}
  secrets:
    DEPOSIT_USERNAME:
      secretKeyRef: deposit-secrets
      secretKeyName: username
    DEPOSIT_PASSWORD:
      secretKeyRef: deposit-secrets
      secretKeyName: password

storage:
  enabled: false
  storageConfigurationRef: fakePostgresqlStorageConfigurationRef

storage_replayer:
  enabled: false
  sentry:
    enabled: false
  journalBrokers:
    hosts:
      - journal1.i.s.s.n:4909
    user: swh-postgresql-stg
    groupIdName: postgresql
  storageConfigurationRef: fakeRemoteStorageConfigurationRef
  checkDbVersion: false
  deployments:
    content:
      objects:
        - content
  requestedMemory: 50Mi
  requestedCpu: 50m

web:
  enabled: false
  requestedMemory: 50Mi
  requestedCpu: 50m
  storageConfigurationRef: fakeRemoteStorageConfigurationRef
  searchConfigurationRef: fakeRemoteSearchConfiguration
  schedulerConfigurationRef: fakeRemoteSchedulerConfiguration
  vaultConfigurationRef: fakeRemoteVaultConfiguration
  countersConfigurationRef: fakeRemoteCountersConfiguration
  webConfigurationRef: fakePostgresqlWebConfiguration
  djangoConfigurationRef: djangoWebConfiguration
  depositConfigurationRef: fakeDepositConfiguration
  giveConfigurationRef: giveConfiguration
  sentry:
    enabled: false
    secretKeyRef: sentry-secrets
    secretKeyName: web-sentry-dsn
  extraConfig:
    debug: false
    instance_name: webapp.internal.minikube
    allowed_hosts:
    - webapp.internal.minikube
    keycloak:
      server_url: https://auth.s.o/auth/
      realm_name: SwhMinikube
    search_config:
      metadata_backend: swh-indexer-storage
    content_display_max_size: 5242880
    history_counters_url: http://counters0.i.s.s.n:5011/counters_history/history.json
    add_forge_now:
      email_address: add-forge-now@webapp.s.s.n
    swh_extra_django_apps:
    - swh.web.add_forge_now
    - swh.web.archive_coverage
    - swh.web.badges
    - swh.web.banners
    - swh.web.deposit
    - swh.web.inbound_email
    - swh.web.jslicenses
    - swh.web.mailmap
    - swh.web.metrics
    - swh.web.save_code_now
    - swh.web.save_origin_webhooks
    - swh.web.vault
    matomo: {}
    deposit:
      private_api_url: "https://deposit-rp.i.s.s.n/1/private/"
      private_api_user: "${DEPOSIT_USERNAME}"
      private_api_password: "${DEPOSIT_PASSWORD}"
    give:
      public_key: ${GIVE_PUBLIC_KEY}
      token: ${GIVE_PRIVATE_TOKEN}
    throttling:
      # The memcached url, mandatory
      cache_uri: fake-memcached:11211
      scopes:
        swh_api:
          limiter_rate:
            default: 120/h
          exempted_networks:
          - 127.0.0.0/8
          - 192.168.101.0/24

toolbox:
  enabled: false
  configs:
    storage:
      storageConfigurationRef: fakePostgresqlStorageConfiguration
    scheduler:
      schedulerConfigurationRef: fakePostgresqlSchedulerConfiguration
      celeryConfigurationRef: fakeCeleryConfiguration
    scrubber:
      scrubberConfigurationRef: fakePostgresqlScrubberConfiguration

fakeCeleryConfiguration:
  host: fake-scheduler.i.s.s.n
  port: 5672
  user: fakeguest
  pass: ${AMQP_PASSWORD}
  secrets:
    AMQP_PASSWORD:
      secretKeyRef: amqp-secrets
      secretKeyName: guest-password

scheduler:
  enabled: false
  schedulerConfigurationRef: fakeRemoteSchedulerConfiguration
  celeryConfigurationRef: fakeCeleryConfiguration
  alerts:
    enabled: false
  recurrent:
    enabled: false
    requestedMemory: 10Mi
    limitedMemory: 20Mi
    requestedCpu: 10m
    limitedCpu: 20m
    schedulerPolicies:
      default:
      - policy: never_visited_oldest_update_first
        weight: 100
      opam:
      - policy: origins_without_last_update
        weight: 100
  rpc:
    enabled: false
    schedulerConfigurationRef: fakePostgresqlSchedulerConfiguration
    requestedMemory: 20Mi
    limitedMemory: 40Mi
    requestedCpu: 10m
    limitedCpu: 20m
    replicas: 1
    gunicorn:
      threads: 1
      workers: 1
      timeout: 10
    # autoScaling:
    #   minReplicaCount: 4
    #   maxReplicaCount: 20
    #   cpuPercentageUsage: 150
    ingress:
      enabled: false
      host: myscheduler.minikube.domain
      # Default allowed ip ranges that can be extended per ingress definitions paths
      whitelistSourceRange:
        - 192.168.100.0/24
      ingressDefinitions:
        default:
          paths:
            - /
        read-only:
          paths:
            - /scheduler_metrics/get
            # - /task_type/get
            # - /task_type/get_all
            # - /task_run/get
            # - /listers/get
            # - /listers/get_by_id
            # - /lister/get
            # - /origins/get
            - /visit_stats/get
            # - /visit_scheduler/get
          extraWhitelistSourceRange:
            - 192.168.101.0/24

  updateMetrics:
    enabled: false
    logLevel: INFO
    # Execute at each minute
    cron: "0/10 * * * *"
  journalClient:
    enabled: false
    journalConfigurationRef: journalClientConfiguration
    requestedMemory: 15Mi
    limitedMemory: 30Mi
    requestedCpu: 50m
    limitedCpu: 100m
  extraServices:
    runner:
      enabled: false
      logLevel: INFO
      period: 100
      requestedMemory: 5Mi
      limitedMemory: 10Mi
      requestedCpu: 10m
      limitedCpu: 20m
    runner-priority:
      enabled: false
      logLevel: INFO
      period: 100
      requestedMemory: 6Mi
      limitedMemory: 12Mi
      requestedCpu: 10m
      limitedCpu: 20m
      extraConfig:
        - load-git
    listener:
      enabled: false
      logLevel: INFO
      requestedMemory: 7Mi
      limitedMemory: 14Mi
      requestedCpu: 10m
      limitedCpu: 20m

loader_metadata:
  enabled: false
  storageConfigurationRef: fakeRemoteStorageConfigurationRef
  schedulerConfigurationRef: fakeRemoteSchedulerConfiguration
  consumerGroup: loader_metadata.test.journal_client
  prefix: swh.test.journal.objects
  journalBrokers:
    hosts:
      - journal1.internal.s.s.n:4909
    secretName: swh-archive-broker-secret
    user: swh-test-archive-stg
  autoScaling:
    enabled: false

checker_deposit:
  enabled: false
  storageConfigurationRef: fakeRemoteStorageConfigurationRef
  celeryConfigurationRef: fakeCeleryConfiguration
  depositConfigurationRef: fakeDepositConfiguration

cookers:
  enabled: false
  sentry:
    enabled: false
  storageConfigurationRef: fakeRemoteStorageConfigurationRef
  celeryConfigurationRef: fakeCeleryConfiguration
  vault:
    host: vault.i.s.s.n
    port: 5005
  deployments:
    simple:
      queues:
        - swh.vault.cooking_tasks.SWHCookingTask

indexers:
  enabled: false
  storageConfigurationRef: fakeRemoteStorageConfigurationRef
  schedulerConfigurationRef: fakeRemoteSchedulerConfiguration
  sentry:
    enabled: false
  indexer_storage:
    host: storage1.i.s.s.n
    port: 7005
  objstorage:
    host: storage1.i.s.s.n
    port: 3005
  journalBrokers:
    hosts:
      - journal1.internal.staging.swh.network:9094
    user: swh-archive-stg
  deployments:
    origin-intrinsic:
      indexer_type: origin_intrinsic_metadata
      consumerGroup: swh.test.indexer.journal_client.origin_intrinsic_metadata
      prefix: swh.test.journal.objects
      batch_size: 10
      extraConfig:
        tools:
          name: swh-metadata-detector
          version: 0.0.2
          configuration: {}
      requestedMemory: 50Mi
      requestedCpu: 50m

graphql:
  enabled: false
  storageConfigurationRef: fakeRemoteStorageConfigurationRef
  searchConfiguration:
    host: search0.i.s.s.n
    port: 5010
  debug: no
  introspection: no
  replicas: 1
  gunicorn:
    threads: 1
    workers: 2
    timeout: 100
  ingress:
    enabled: false
  auth:
    enabled: false
  maxRawContentSize: 10000
  requestedMemory: 50Mi
  requestedCpu: 50m

listers:
  enabled: false
  storageConfigurationRef: fakeRemoteStorageConfigurationRef
  schedulerConfigurationRef: fakeRemoteSchedulerConfiguration
  celeryConfigurationRef: fakeCeleryConfiguration
  deployments:
    cgit:
      queues:
      - swh.lister.cgit.tasks.CGitListerTask
      requestedMemory: 50Mi
      requestedCpu: 50m

loaders:
  enabled: false
  storageConfigurationRef: fakeRemoteStorageConfigurationRef
  celeryConfigurationRef: fakeCeleryConfiguration
  depositConfigurationRef: fakeDepositConfiguration
  deployments:
    git:
      priorityClassName: low-workload
      queues:
        - swh.loader.git.tasks.UpdateGitRepository
      requestedMemory: 50Mi
      requestedCpu: 50m
    deposit:
      image: swh_loader_package_image
      queues:
        - swh.loader.package.deposit.tasks.LoadDeposit
      extraConfig:
        deposit:
          url: "https://deposit-rp.i.s.s.n/1/private"
          auth:
            username: "${DEPOSIT_USERNAME}"
            password: "${DEPOSIT_PASSWORD}"
        default_filename: archive.tar
      requestedMemory: 50Mi
      requestedCpu: 50m

memcached:
  enabled: false

podPriority:
  enabled: true
