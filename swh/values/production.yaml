sentry:
  environment: production

storagePipelineSteps:
  - cls: buffer
    min_batch_size:
      content: 1000
      content_bytes: 52428800
      directory: 1000
      directory_entries: 12000
      revision: 1000
      revision_parents: 2000
      revision_bytes: 52428800
      release: 1000
      release_bytes: 52428800
      extid: 1000
  - cls: filter
  - cls: retry

saamStorageConfiguration:
  cls: remote
  host: http://saam.internal.softwareheritage.org:5002

remoteStorageConfiguration:
  pipelineStepsRef: storagePipelineSteps
  storageConfigurationRef: saamStorageConfiguration

roStoragePipelineSteps:
  - cls: retry

remoteROStorageConfiguration:
  pipelineStepsRef: roStoragePipelineSteps
  # TODO: use a true read-only storage
  storageConfigurationRef: saamStorageConfiguration

readWriteCeleryConfiguration:
  host: rabbitmq.internal.softwareheritage.org
  port: 5672
  user: swhconsumer
  pass: ${AMQP_PASSWORD}
  secrets:
    AMQP_PASSWORD:
      secretKeyRef: amqp-secrets
      secretKeyName: read-write

depositConfiguration:
  host: deposit-rp.internal.staging.swh.network
  user: ${DEPOSIT_USERNAME}
  pass: ${DEPOSIT_PASSWORD}
  secrets:
    DEPOSIT_USER:
      secretKeyRef: deposit-secrets
      secretKeyName: username
    DEPOSIT_PASSWORD:
      secretKeyRef: deposit-secrets
      secretKeyName: password

remoteSchedulerConfiguration:
  cls: remote
  host: scheduler.internal.softwareheritage.org
  port: 80

postgresqlSchedulerConfiguration:
  cls: postgresql
  host: db.internal.softwareheritage.org
  port: '5432'
  user: swhscheduler
  password: ${POSTGRESQL_PASSWORD}
  db: softwareheritage-scheduler
  secrets:
    POSTGRESQL_PASSWORD:
      secretKeyRef: swh-scheduler-postgresql-common-secret
      secretKeyName: postgres-swh-scheduler-password

kafkaBrokers:
  - kafka1.internal.softwareheritage.org
  - kafka2.internal.softwareheritage.org
  - kafka3.internal.softwareheritage.org
  - kafka4.internal.softwareheritage.org

journalClientConfiguration:
  kafkaBrokersRef: kafkaBrokers
  groupId: swh.scheduler.journal_client

graphql:
  enabled: true
  replicas: 2
  storageConfigurationRef: remoteROStorageConfiguration
  searchConfiguration:
    host: moma.internal.softwareheritage.org
    port: 5010
  introspection: yes
  ingress:
    enabled: true
    host: graphql.internal.softwareheritage.org
    httpPath: /
  gunicorn:
    threads: 4
    workers: 2
    timeout: 3600
  auth:
    enabled: true
    server: https://auth.softwareheritage.org/auth/
    realm: SoftwareHeritage
    client: swh-web
    cacheUrl: memcached://memcached:11211
  maxRawContentSize: 10000

listers:
  enabled: true
  storageConfigurationRef: remoteROStorageConfiguration
  schedulerConfigurationRef: remoteSchedulerConfiguration
  celeryConfigurationRef: readWriteCeleryConfiguration
  deployments:
    bower:
      queues:
      - swh.lister.bower.tasks.BowerListerTask
      autoScaling:
        maxReplicaCount: 1
    bitbucket:
      queues:
      - swh.lister.bitbucket.tasks.IncrementalBitBucketLister
      - swh.lister.bitbucket.tasks.FullBitBucketRelister
      autoScaling:
        maxReplicaCount: 1
      requestedMemory: 600Mi
      requestedCpu: 200m
    cgit:
      queues:
        - swh.lister.cgit.tasks.CGitListerTask
      autoScaling:
        maxReplicaCount: 1
    cran:
      queues:
      - swh.lister.cran.tasks.CRANListerTask
      autoScaling:
        maxReplicaCount: 1
    debian:
      queues:
        - swh.lister.debian.tasks.DebianListerTask
      autoScaling:
        maxReplicaCount: 1
    gitea:
      queues:
      - swh.lister.gitea.tasks.IncrementalGiteaLister
      - swh.lister.gitea.tasks.RangeGiteaLister
      - swh.lister.gitea.tasks.FullGiteaRelister
      autoScaling:
        maxReplicaCount: 1
    github-full:
      queues:
      - swh.lister.github.tasks.FullGitHubRelister
      - swh.lister.github.tasks.RangeGitHubLister
      autoScaling:
        maxReplicaCount: 12
    github-incremental:
      queues:
      - swh.lister.github.tasks.IncrementalGitHubLister
      autoScaling:
        maxReplicaCount: 1
    gitiles:
      queues:
      - swh.lister.gitiles.tasks.GitilesListerTask
      autoScaling:
        maxReplicaCount: 1
    gitlab:
      queues:
      - swh.lister.gitlab.tasks.IncrementalGitLabLister
      - swh.lister.gitlab.tasks.FullGitLabRelister
      autoScaling:
        maxReplicaCount: 4
    gitweb:
      queues:
      - swh.lister.gitweb.tasks.GitwebListerTask
      autoScaling:
        maxReplicaCount: 1
    gnu-full:
      queues:
        - swh.lister.gnu.tasks.GNUListerTask
      autoScaling:
        maxReplicaCount: 1
    gogs-full:
      queues:
        - swh.lister.gogs.tasks.FullGogsRelister
      autoScaling:
        maxReplicaCount: 1
    golang:
      queues:
      - swh.lister.golang.tasks.FullGolangLister
      - swh.lister.golang.tasks.IncrementalGolangLister
      autoScaling:
        maxReplicaCount: 1
    launchpad:
      queues:
      - swh.lister.launchpad.tasks.FullLaunchpadLister
      - swh.lister.launchpad.tasks.IncrementalLaunchpadLister
      autoScaling:
        maxReplicaCount: 1
    maven:
      queues:
      - swh.lister.maven.tasks.FullMavenLister
      - swh.lister.maven.tasks.IncrementalMavenLister
      autoScaling:
        maxReplicaCount: 1
      requestedCpu: 1000m
      requestedMemory: 6144Mi
    npm:
      queues:
      - swh.lister.npm.tasks.NpmListerTask
      autoScaling:
        maxReplicaCount: 1
    opam:
      queues:
      - swh.lister.opam.tasks.OpamListerTask
      autoScaling:
        maxReplicaCount: 1
    packagist:
      queues:
        - swh.lister.packagist.tasks.PackagistListerTask
      autoScaling:
        maxReplicaCount: 1
    pagure:
      queues:
        - swh.lister.pagure.tasks.PagureListerTask
      autoScaling:
        maxReplicaCount: 1
    phabricator:
      queues:
      - swh.lister.phabricator.tasks.FullPhabricatorLister
      autoScaling:
        maxReplicaCount: 1
    pubdev:
      queues:
        - swh.lister.pubdev.tasks.PubDevListerTask
      autoScaling:
        maxReplicaCount: 1
    pypi:
      queues:
      - swh.lister.pypi.tasks.PyPIListerTask
      autoScaling:
        maxReplicaCount: 1
    rpm:
      queues:
        - swh.lister.rpm.tasks.FullRPMLister
        - swh.lister.rpm.tasks.IncrementalRPMLister
      autoScaling:
        maxReplicaCount: 1
    sourceforge:
      queues:
      - swh.lister.sourceforge.tasks.FullSourceForgeLister
      - swh.lister.sourceforge.tasks.IncrementalSourceForgeLister
      autoScaling:
        maxReplicaCount: 1
    stagit:
      queues:
      - swh.lister.stagit.tasks.StagitListerTask
      autoScaling:
        maxReplicaCount: 1

loaders:
  enabled: true
  storageConfigurationRef: remoteStorageConfiguration
  celeryConfigurationRef: readWriteCeleryConfiguration
  deployments:
    add-forge-now:
      image: swh_loader_git_image
      requestedMemory: 1024Mi
      requestedCpu: 500m
      limitedMemory: 25600Mi
      queues:
        - add_forge_now:swh.loader.git.tasks.UpdateGitRepository
      ackLate: true
      autoScaling:
        queueThreshold: 1
        maxReplicaCount: 8
      extraConfig:
        overrides:
          swh.loader.git.loader.GitLoader:
            # 10Gib
            temp_file_cutoff: 10737418240
            # 32Gib
            pack_size_bytes: 34359738368
    add-forge-now-slow:
      image: swh_loader_git_image
      requestedMemory: 1024Mi
      requestedCpu: 500m
      limitedMemory: 25600Mi
      queues:
        - add_forge_now_slow:swh.loader.git.tasks.UpdateGitRepository
      ackLate: true
      autoScaling:
        queueThreshold: 1
        maxReplicaCount: 4
      extraConfig:
        overrides:
          swh.loader.git.loader.GitLoader:
            # 10Gib
            temp_file_cutoff: 10737418240
            # 32Gib
            pack_size_bytes: 34359738368
    bzr:
      requestedMemory: 256Mi
      requestedCpu: 200m
      queues:
        - swh.loader.bzr.tasks.LoadBazaar
      autoScaling:
        maxReplicaCount: 4
    cran:
      requestedMemory: 256Mi
      requestedCpu: 200m
      image: swh_loader_package_image
      queues:
        - swh.loader.package.cran.tasks.LoadCRAN
      autoScaling:
        maxReplicaCount: 1
    cvs:
      requestedMemory: 256Mi
      requestedCpu: 200m
      queues:
        - swh.loader.cvs.tasks.LoadCvsRepository
      autoScaling:
        maxReplicaCount: 2
    git-large-repository:
      image: swh_loader_git_image
      requestedMemory: 1024Mi
      requestedCpu: 800m
      queues:
        - large_repository:swh.loader.git.tasks.UpdateGitRepository
      autoScaling:
        queueThreshold: 1
        maxReplicaCount: 12
      extraConfig:
        overrides:
          swh.loader.git.loader.GitLoader:
            # 10Gib
            temp_file_cutoff: 10737418240
            # 32Gib
            pack_size_bytes: 34359738368
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "swh/loader"
                operator: In
                values:
                - "true"
              - key: "swh/large-scratch-fs"
                operator: In
                values:
                - "true"
    golang:
      image: swh_loader_package_image
      requestedMemory: 256Mi
      requestedCpu: 200m
      queues:
        - swh.loader.package.golang.tasks.LoadGolang
      autoScaling:
        maxReplicaCount: 4
    mercurial:
      queues:
        - swh.loader.mercurial.tasks.LoadArchiveMercurial
        - swh.loader.mercurial.tasks.LoadMercurial
      autoScaling:
        maxReplicaCount: 1
      requestedMemory: 128Mi
      requestedCpu: 500m
    pubdev:
      requestedMemory: 256Mi
      requestedCpu: 200m
      image: swh_loader_package_image
      queues:
        - swh.loader.package.pubdev.tasks.LoadPubDev
      autoScaling:
        maxReplicaCount: 1
    save-code-now:
      requestedMemory: 2048Mi
      requestedCpu: 200m
      limitedMemory: 25600Mi
      queues:
        - save_code_now:swh.loader.bzr.tasks.LoadBazaar
        - save_code_now:swh.loader.cvs.tasks.LoadCvsRepository
        - save_code_now:swh.loader.git.tasks.UpdateGitRepository
        - save_code_now:swh.loader.git.tasks.LoadDiskGitRepository
        - save_code_now:swh.loader.git.tasks.UncompressAndLoadDiskGitRepository
        - save_code_now:swh.loader.mercurial.tasks.LoadArchiveMercurial
        - save_code_now:swh.loader.mercurial.tasks.LoadMercurial
        - save_code_now:swh.loader.svn.tasks.LoadSvnRepository
        - save_code_now:swh.loader.svn.tasks.MountAndLoadSvnRepository
        - save_code_now:swh.loader.svn.tasks.DumpMountAndLoadSvnRepository
        - save_code_now:swh.loader.package.archive.tasks.LoadTarball
      ackLate: true
      autoScaling:
        stopWhenNoActivity: false
        queueThreshold: 1
        minReplicaCount: 32
        maxReplicaCount: 32

loader_metadata:
  enabled: true
  storageConfigurationRef: remoteStorageConfiguration
  schedulerConfigurationRef: remoteSchedulerConfiguration
  consumerGroup: loader_metadata.journal_client
  prefix: swh.journal.objects
  journalBrokers:
    secretName: swh-archive-broker-secret
    hosts:
      - kafka1.internal.softwareheritage.org:9094
      - kafka2.internal.softwareheritage.org:9094
      - kafka3.internal.softwareheritage.org:9094
      - kafka4.internal.softwareheritage.org:9094
    user: swh-archive-prod
  autoScaling:
    maxReplicaCount: 6

memcached:
  enabled: true

scheduler:
  enabled: true
  sentry:
    enabled: true
  schedulerConfigurationRef: remoteSchedulerConfiguration
  celeryConfigurationRef: readWriteCeleryConfiguration
  recurrent:
    enabled: true
  rpc:
    enabled: true
    # The scheduler instance to use for rpc must be a postgresql instance
    schedulerConfigurationRef: postgresqlSchedulerConfiguration
    replicas: 2
    gunicorn:
      threads: 4
      workers: 8
      timeout: 3600
    ingress:
      enabled: true
      host: scheduler.internal.softwareheritage.org
      # TODO: Improve the authorization internal cluster ip range.
      # Current internal range retrieved out of the `kubectl cluster-info dump`
      whitelistSourceRange: 192.168.100.0/24,192.168.200.0/22,10.42.0.0/16,10.43.0.0/16
  updateMetrics:
    enabled: true
    # At minute 27 past every 4th hour from 3 through 23
    cron: "27 3-23/4 * * *"
  journalClient:
    enabled: true
    journalConfigurationRef: journalClientConfiguration
  extraServices:
    runner:
      enabled: true
      logLevel: INFO
      period: 10
    runner-priority:
      enabled: true
      logLevel: INFO
      period: 10
      extraConfig:
        - load-bzr
        - load-cvs
        - load-git
        - load-svn
        - load-archive-files
        - load-hg
    listener:
      enabled: true
      logLevel: INFO
