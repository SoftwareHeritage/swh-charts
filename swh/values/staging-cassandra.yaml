namespace: swh-cassandra
sentry:
  environment: staging

noopObjectStorage:
  cls: noop

cassandraSeeds:
  - cassandra1.internal.staging.swh.network
  - cassandra2.internal.staging.swh.network
  - cassandra3.internal.staging.swh.network

cassandraStorage:
  cls: cassandra
  cassandraSeedsRef: cassandraSeeds
  keyspace: swh
  initKeyspace: true
  consistencyLevel: LOCAL_QUORUM
  specificOptions:
    directory_entries_insert_algo: batch
  authProvider:
    cls: cassandra.auth.PlainTextAuthProvider
    username: swh-rw
    password: ${CASSANDRA_PASSWORD}
  secrets:
    CASSANDRA_PASSWORD:
      secretKeyRef: common-secrets
      secretKeyName: cassandra-swh-rw-password

cassandraReplayerStorageConfiguration:
  storageConfigurationRef: cassandraStorage
  objectStorageConfigurationRef: noopObjectStorage

cassandraStorageConfiguration:
  storageConfigurationRef: cassandraStorage
  # TODO: add journal_writer
  # TODO: add objstorage configuration

storagePipelineSteps:
  - cls: buffer
    min_batch_size:
      content: 100
      content_bytes: 52428800
      directory: 100
      directory_entries: 500
      revision: 100
      revision_parents: 200
      revision_bytes: 52428800
      release: 100
      release_bytes: 52428800
      extid: 100
  - cls: filter
  - cls: retry

localRpcRWStorageConfiguration:
  cls: remote
  host: http://storage:5002

rpcRWStorageConfiguration:
  pipelineStepsRef: storagePipelineSteps
  storageConfigurationRef: localRpcRWStorageConfiguration

loaders:
  enabled: true
  storageConfigurationRef: rpcRWStorageConfiguration
  amqp:
    host: scheduler0.internal.staging.swh.network
    port: 5672
  deployments:
    git:
      requestedMemory: 512Mi
      requestedCpu: 200m
      queues:
        - swh.loader.git.tasks.UpdateGitRepository
        - swh.loader.git.tasks.LoadDiskGitRepository
        - swh.loader.git.tasks.UncompressAndLoadDiskGitRepository
      autoScaling:
        maxReplicaCount: 1

storage_replayer:
  enabled: true

  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: "swh/replayer"
            operator: In
            values:
            - "true"
  storageConfigurationRef: cassandraReplayerStorageConfiguration
  journalBrokers:
    hosts:
      - journal1.internal.staging.swh.network:9094
    user: swh-cassandra-stg
    groupIdName: cassandra
    secretName: swh-cassandra-broker-secret
  error_reporter:
    host: redis.redis
    port: 6379
    db: 1
  deployments:
    content:
      objects:
        - content
      privileged: true
      requestedCpu: 350m
      requestedMemory: 300Mi
      autoScaling:
        maxReplicaCount: 10
    directory:
      objects:
        - directory
      batchSize: 250
      privileged: true
      requestedCpu: 350m
      requestedMemory: 250Mi
      autoScaling:
        maxReplicaCount: 10
    extid:
      objects:
        - extid
      batchSize: 1000
      privileged: true
      # Full replay
      requestedCpu: 400m
      requestedMemory: 200Mi
      #Follow up consumption
      #requestedCpu: 50m
      autoScaling:
        maxReplicaCount: 5
    metadata:
      objects:
        - metadata_authority
        - metadata_fetcher
      privileged: true
      # follow up consumption
      requestedCpu: 50m
      requestedMemory: 100Mi
      autoScaling:
        maxReplicaCount: 5
    raw-extrinsic-metadata:
      objects:
        - raw_extrinsic_metadata
      batchSize: 250
      privileged: true
      # Full replay
      requestedCpu: 400m
      requestedMemory: 200Mi
      # follow up consumption
      #requestedCpu: 50m
      autoScaling:
        maxReplicaCount: 5
    origin:
      objects:
        - origin
      batchSize: 1000
      privileged: true
      # Full replay
      requestedCpu: 400m
      requestedMemory: 200Mi
      #Follow up consumption
      #requestedCpu: 50m
      autoScaling:
        maxReplicaCount: 5
    origin-visit:
      objects:
        - origin_visit
      batchSize: 1000
      privileged: true
      # Full replay
      requestedCpu: 400m
      requestedMemory: 400Mi
      #Follow up consumption
      #requestedCpu: 100m
      #requestedMemory: 100Mi
      autoScaling:
        maxReplicaCount: 5
    origin-visit-status:
      objects:
        - origin_visit_status
      batchSize: 1000
      privileged: true
      # Full replay
      requestedCpu: 500m
      requestedMemory: 300Mi
      #Follow up consumption
      #requestedCpu: 55m
      #requestedMemory: 200Mi
      autoScaling:
        maxReplicaCount: 5
    release:
      objects:
        - release
      batchSize: 1000
      privileged: true
      # Full replay
      requestedCpu: 600m
      requestedMemory: 300Mi
      # follow up consumption
      #requestedCpu: 50m
      autoScaling:
        maxReplicaCount: 5
    revision:
      objects:
        - revision
      batchSize: 1000
      privileged: true
      # Full replay
      requestedCpu: 750m
      requestedMemory: 750Mi
      # follow up consumption
      #requestedCpu: 50m
      #requestedMemory: 400Mi
      autoScaling:
        maxReplicaCount: 5
    skipped-content:
      objects:
        - skipped_content
      batchSize: 100
      privileged: true
      # Full replay
      requestedCpu: 300m
      requestedMemory: 400Mi
      # follow up consumption
      #requestedCpu: 50m
      autoScaling:
        maxReplicaCount: 5
    snapshot:
      objects:
        - snapshot
      batchSize: 250
      privileged: true
      # Full replay
      requestedCpu: 400m
      requestedMemory: 250Mi
      # follow up consumption
      #requestedCpu: 80m
      autoScaling:
        maxReplicaCount: 5

storage:
  enabled: true
  replicas: 10
  requestedCpu: 500m
  requestedMemory: 500Mi

  storageConfigurationRef: cassandraStorageConfiguration

  # TODO: migrate this to a proper template
  objstorageClass: remote
  objstorageConfig:
    url: http://objstorage0.internal.staging.swh.network:5003/
  ingress:
    enabled: true
    host: storage-cassandra.internal.staging.swh.network
  gunicorn:
    threads: 4
    workers: 8
  journalWriter:
   brokers:
     - journal1.internal.staging.swh.network
     - journal2.internal.staging.swh.network
   clientId: swh.storage-cassandra.journal_writer.storage
   producerConfig: |-
     message.max.bytes: 1000000000

web:
  enabled: true
  logLevel: INFO
  replicas: 2
  requestedCpu: 500m
  requestedMemory: 500Mi
  #autoScaling:
  #  maxReplicaCount: 5
  configSecretRef: swh-cassandra-webapp-config
  host: webapp-cassandra.internal.staging.swh.network
  ingressAnnotations:
    cert-manager.io/cluster-issuer: letsencrypt-production-gandi
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  tlsEnabled: true

memcached:
  enabled: true
