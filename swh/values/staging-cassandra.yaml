namespace: swh-cassandra
sentry:
  environment: staging

storage_replayer:
  enabled: true

  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: "swh/replayer"
            operator: In
            values:
            - "true"
  journalBrokers:
    hosts:
      - journal1.internal.staging.swh.network:9094
    user: swh-cassandra-stg
    secretName: swh-cassandra-broker-secret
  cassandra:
    initKeyspace: true # only to bootstrap a new cassandra database
    seeds:
      - cassandra1.internal.staging.swh.network
      - cassandra2.internal.staging.swh.network
      - cassandra3.internal.staging.swh.network
  error_reporter:
    host: redis.redis
    port: 6379
    db: 1
  deployments:
    content:
      objects:
        - content
      privileged: true
      requestedCpu: 350m
      requestedMemory: 300Mi
      autoScaling:
        maxReplicaCount: 10
    directory:
      objects:
        - directory
      batchSize: 250
      privileged: true
      requestedCpu: 350m
      requestedMemory: 250Mi
      autoScaling:
        maxReplicaCount: 10
      specific_options:
        directory_entries_insert_algo: batch
    extid:
      objects:
        - extid
      batchSize: 1000
      privileged: true
      # Full replay
      requestedCpu: 400m
      requestedMemory: 200Mi
      #Follow up consumption
      #requestedCpu: 50m
      autoScaling:
        maxReplicaCount: 5
    metadata:
      objects:
        - metadata_authority
        - metadata_fetcher
      privileged: true
      # follow up consumption
      requestedCpu: 50m
      requestedMemory: 100Mi
      autoScaling:
        maxReplicaCount: 5
    raw-extrinsic-metadata:
      objects:
        - raw_extrinsic_metadata
      batchSize: 250
      privileged: true
      # Full replay
      requestedCpu: 400m
      requestedMemory: 200Mi
      # follow up consumption
      #requestedCpu: 50m
      autoScaling:
        maxReplicaCount: 5
    origin:
      objects:
        - origin
      batchSize: 1000
      privileged: true
      # Full replay
      requestedCpu: 400m
      requestedMemory: 200Mi
      #Follow up consumption
      #requestedCpu: 50m
      autoScaling:
        maxReplicaCount: 5
    origin-visit:
      objects:
        - origin_visit
      batchSize: 1000
      privileged: true
      # Full replay
      requestedCpu: 400m
      requestedMemory: 400Mi
      #Follow up consumption
      #requestedCpu: 100m
      #requestedMemory: 100Mi
      autoScaling:
        maxReplicaCount: 5
    origin-visit-status:
      objects:
        - origin_visit_status
      batchSize: 1000
      privileged: true
      # Full replay
      requestedCpu: 500m
      requestedMemory: 300Mi
      #Follow up consumption
      #requestedCpu: 55m
      #requestedMemory: 200Mi
      autoScaling:
        maxReplicaCount: 5
    release:
      objects:
        - release
      batchSize: 1000
      privileged: true
      # Full replay
      requestedCpu: 600m
      requestedMemory: 300Mi
      # follow up consumption
      #requestedCpu: 50m
      autoScaling:
        maxReplicaCount: 5
    revision:
      objects:
        - revision
      batchSize: 1000
      privileged: true
      # Full replay
      requestedCpu: 750m
      requestedMemory: 750Mi
      # follow up consumption
      #requestedCpu: 50m
      #requestedMemory: 400Mi
      autoScaling:
        maxReplicaCount: 5
    skipped-content:
      objects:
        - skipped_content
      batchSize: 100
      privileged: true
      # Full replay
      requestedCpu: 300m
      requestedMemory: 400Mi
      # follow up consumption
      #requestedCpu: 50m
      autoScaling:
        maxReplicaCount: 5
    snapshot:
      objects:
        - snapshot
      batchSize: 250
      privileged: true
      # Full replay
      requestedCpu: 400m
      requestedMemory: 250Mi
      # follow up consumption
      #requestedCpu: 80m
      autoScaling:
        maxReplicaCount: 5

storage:
  enabled: true
  replicas: 2
  requestedCpu: 500m
  requestedMemory: 500Mi

  storageClass: cassandra
  cassandra:
    seeds:
      - cassandra1.internal.staging.swh.network
      - cassandra2.internal.staging.swh.network
      - cassandra3.internal.staging.swh.network
    keySpace: swh
    consistencyLevel: LOCAL_QUORUM
  objstorage:
    cls: filtered
    storage_conf:
      cls: remote
      url: http://objstorage0.internal.staging.swh.network:5003/
    filters_conf:
    - type: readonly
  ingress:
    enabled: true
    host: storage-cassandra.internal.staging.swh.network

web:
  enabled: true
  logLevel: INFO
  replicas: 2
  requestedCpu: 500m
  requestedMemory: 500Mi
  #autoScaling:
  #  maxReplicaCount: 5
  configSecretRef: swh-cassandra-webapp-config
  host: webapp-cassandra.internal.staging.swh.network
  ingressAnnotations:
    cert-manager.io/cluster-issuer: letsencrypt-production-gandi
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  tlsEnabled: true

memcached:
  enabled: true
