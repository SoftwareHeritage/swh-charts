
suite: test web deployment
tests:
  - it: Web is deployed when activated
    templates:
      - web/deployment.yaml
    set:
      defaultStorageConfiguration:
        cls: remote
      defaultStorageConfigurationRef:
        storageConfigurationRef: defaultStorageConfiguration

      swh_web_image: image
      swh_web_image_version: version
      web.enabled: true
      web.replicas: 1
      web.requestedMemory: memory
      web.requestedCpu: cpu
      web.storageConfigurationRef: defaultStorageConfigurationRef
      web.hosts:
        - webapp.localdomain
    asserts:
      - hasDocuments:
          count: 1
      - containsDocument:
          kind: Deployment
          apiVersion: apps/v1
      - equal:
          path: metadata.namespace
          value: swh
      - equal:
          path: spec.replicas
          value: 1
      - equal:
          path: spec.template.spec.containers[0].resources.requests.memory
          value: memory
      - equal:
          path: spec.template.spec.containers[0].resources.requests.cpu
          value: cpu
      - equal:
          path: spec.template.spec.containers[0].image
          value: image:version
      - equal:
          path: spec.template.spec.containers[?(@.name == "web")].env[?(@.name == "SWH_LOG_LEVEL")].value
          value: "INFO"
      - equal:
          path: spec.template.spec.containers[?(@.name == "web")].env[?(@.name == "STATSD_HOST")].value
          value: prometheus-statsd-exporter
      - equal:
          path: spec.template.spec.containers[?(@.name == "web")].env[?(@.name == "STATSD_PORT")].value
          value: "9125"
      - isNull:
          path: spec.template.spec.containers[?(@.name == "web")].env[?(@.name == "THREADS")]
      - isNull:
          path: spec.template.spec.containers[?(@.name == "web")].env[?(@.name == "WORKERS")]
      - isNull:
          path: spec.template.spec.containers[?(@.name == "web")].env[?(@.name == "TIMEOUT")]
      - isNull:
          path: spec.template.spec.containers[?(@.name == "web")].env[?(@.name == "SWH_SENTRY_ENVIRONMENT")]
      - isNull:
          path: spec.template.spec.containers[?(@.name == "web")].env[?(@.name == "SWH_MAIN_PACKAGE")]
      - isNull:
          path: spec.template.spec.containers[?(@.name == "web")].env[?(@.name == "SWH_SENTRY_DSN")]
  - it: Web gunicorn workers configuration
    templates:
      - web/deployment.yaml
    set:
      defaultStorageConfiguration:
        cls: remote
      defaultStorageConfigurationRef:
        storageConfigurationRef: defaultStorageConfiguration
      web.enabled: true
      swh_web_image: image
      swh_web_image_version: version
      web.gunicorn.threads: 101
      web.gunicorn.workers: 102
      web.gunicorn.timeout: 103
      web.storageConfigurationRef: defaultStorageConfigurationRef
      web.hosts:
        - webapp.localdomain
    asserts:
      - equal:
          path: spec.template.spec.containers[?(@.name == "web")].env[?(@.name == "THREADS")].value
          value: "101"
      - equal:
          path: spec.template.spec.containers[?(@.name == "web")].env[?(@.name == "WORKERS")].value
          value: "102"
      - equal:
          path: spec.template.spec.containers[?(@.name == "web")].env[?(@.name == "TIMEOUT")].value
          value: "103"
  - it: Web statsd overridden configuration
    templates:
      - web/deployment.yaml
    set:
      defaultStorageConfiguration:
        cls: remote
      defaultStorageConfigurationRef:
        storageConfigurationRef: defaultStorageConfiguration
      web.enabled: true
      swh_web_image: image
      swh_web_image_version: version
      statsdExternalHost: my-statsd-host
      statsdPort: 9999
      web.storageConfigurationRef: defaultStorageConfigurationRef
      web.hosts:
        - webapp.localdomain
    asserts:
      - equal:
          path: spec.template.spec.containers[?(@.name == "web")].env[?(@.name == "STATSD_HOST")].value
          value: my-statsd-host
      - equal:
          path: spec.template.spec.containers[?(@.name == "web")].env[?(@.name == "STATSD_PORT")].value
          value: "9999"
  - it: Web sentry default configuration
    templates:
      - web/deployment.yaml
    set:
      defaultStorageConfiguration:
        cls: remote
      defaultStorageConfigurationRef:
        storageConfigurationRef: defaultStorageConfiguration
      swh_web_image: image
      swh_web_image_version: version
      web.enabled: true
      web.sentry.enabled: true
      web.storageConfigurationRef: defaultStorageConfigurationRef
      web.hosts:
        - webapp.localdomain
    asserts:
      - equal:
          path: spec.template.spec.containers[?(@.name == "web")].env[?(@.name == "SWH_SENTRY_ENVIRONMENT")].value
          value: production
      - equal:
          path: spec.template.spec.containers[?(@.name == "web")].env[?(@.name == "SWH_MAIN_PACKAGE")].value
          value: swh.web
      - equal:
          path: spec.template.spec.containers[?(@.name == "web")].env[?(@.name == "SWH_SENTRY_DSN")].valueFrom.secretKeyRef.name
          value: common-secrets
      - equal:
          path: spec.template.spec.containers[?(@.name == "web")].env[?(@.name == "SWH_SENTRY_DSN")].valueFrom.secretKeyRef.key
          value: web-sentry-dsn
  - it: Web sentry overridden configuration
    templates:
      - web/deployment.yaml
    set:
      defaultStorageConfiguration:
        cls: remote
      defaultStorageConfigurationRef:
        storageConfigurationRef: defaultStorageConfiguration
      sentry.environment: my-environment
      web.enabled: true
      web.sentry.enabled: true
      web.sentry.secretKeyRef: my-secret
      web.sentry.secretKeyName: my-key
      swh_web_image: image
      swh_web_image_version: version
      web.storageConfigurationRef: defaultStorageConfigurationRef
      web.hosts:
        - webapp.localdomain
    asserts:
      - equal:
          path: spec.template.spec.containers[?(@.name == "web")].env[?(@.name == "SWH_SENTRY_ENVIRONMENT")].value
          value: my-environment
      - equal:
          path: spec.template.spec.containers[?(@.name == "web")].env[?(@.name == "SWH_MAIN_PACKAGE")].value
          value: swh.web
      - equal:
          path: spec.template.spec.containers[?(@.name == "web")].env[?(@.name == "SWH_SENTRY_DSN")].valueFrom.secretKeyRef.name
          value: my-secret
      - equal:
          path: spec.template.spec.containers[?(@.name == "web")].env[?(@.name == "SWH_SENTRY_DSN")].valueFrom.secretKeyRef.key
          value: my-key
