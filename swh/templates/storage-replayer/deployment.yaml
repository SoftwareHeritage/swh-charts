{{ if .Values.storage_replayer.enabled -}}
{{- $secretName := .Values.storage_replayer.journalBrokers.secretName -}}
{{- $configurationChecksum := include (print $.Template.BasePath "/storage-replayer/configmap.yaml") . -}}
{{- $storageUtilsChecksum := include (print $.Template.BasePath "/utils/database-utils.yaml") . -}}
{{- range $deployment, $deployment_config := .Values.storage_replayer.deployments -}}
{{- if or (not (hasKey $deployment_config "enabled")) (get $deployment_config "enabled") -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ $.Values.namespace }}
  name: storage-replayer-{{ $deployment }}
  labels:
    app: storage-replayer-{{ $deployment }}
spec:
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: storage-replayer-{{ $deployment }}
  template:
    metadata:
      labels:
        app: storage-replayer-{{ $deployment }}
      annotations:
        checksum/config: {{ $configurationChecksum | sha256sum }}
        checksum/config_utils: {{ $storageUtilsChecksum | sha256sum }}
    spec:
      {{- if $.Values.storage_replayer.affinity }}
      affinity:
        {{- toYaml $.Values.storage_replayer.affinity | nindent 8 }}
      {{- end }}
      {{- if and $.Values.podPriority.enabled $.Values.storage_replayer.priorityClassName }}
      priorityClassName: {{ $.Values.namespace }}-{{ $.Values.storage_replayer.priorityClassName }}
      {{ end }}
      initContainers:
        - name: prepare-configuration
          image: debian:bullseye
          imagePullPolicy: IfNotPresent
          {{- if $secretName }}
          envFrom:
          - secretRef:
              name: {{ $.Values.storage_replayer.journalBrokers.secretName }}
          {{ end }}
          command:
          - /bin/bash
          args:
          - -c
          - eval echo "\"$(</etc/swh/configuration-template/config.yml.template)\"" > /etc/swh/config.yml
          env:
{{ include "swh.storage.secretsEnvironment" (dict "Values" $.Values
                                                  "configurationRef" $.Values.storage_replayer.storageConfigurationRef) | indent 10 }}
          volumeMounts:
          - name: configuration
            mountPath: /etc/swh
          - name: configuration-template
            mountPath: /etc/swh/configuration-template
          {{ include "swh.storage.cassandra.initKeyspaceContainer" (dict "Values" $.Values
                                                                         "configurationRef" $.Values.storage_replayer.storageConfigurationRef
                                                                         "imagePrefixName" "swh_storage_replayer_image") | nindent 8 }}
          {{- if $.Values.storage_replayer.checkDbVersion }}
          {{ include "swh.checkDatabaseVersionContainer" (dict "Values" $.Values
                                                               "imagePrefixName" "swh_storage_replayer_image"
                                                               "module" "storage") | nindent 8 }}
          {{- end }}
      containers:
        - name: storage-replayer
          resources:
            requests:
              memory: {{ get $deployment_config "requestedMemory" | default "512Mi" }}
              cpu: {{ get $deployment_config "requestedCpu" | default "500m" }}
          {{- if or ( get $deployment_config "limitedCpu" ) ( get $deployment_config "limitedMemory" ) }}
            limits:
            {{- if ( get $deployment_config "limitedMemory" ) }}
              memory: {{ get $deployment_config "limitedMemory" }}
            {{- end }}
            {{- if ( get $deployment_config "limitedCpu" ) }}
              cpu: {{ get $deployment_config "limitedCpu" }}
            {{- end }}
          {{ end }}
          image: {{ $.Values.swh_storage_replayer_image }}:{{ $.Values.swh_storage_replayer_image_version }}
          command:
          - /bin/bash
          args:
          - -c
          - /opt/swh/entrypoint.sh
          env:
            - name: STATSD_HOST
              value: {{ $.Values.statsdExternalHost | default "prometheus-statsd-exporter" }}
            - name: STATSD_PORT
              value: {{ $.Values.statsdPort | default "9125" | quote }}
          {{- if $.Values.storage_replayer.sentry.enabled }}
            - name: SWH_SENTRY_ENVIRONMENT
              value: {{ $.Values.sentry.environment }}
            - name: SWH_MAIN_PACKAGE
              value: swh.storage
            - name: SWH_SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: storage-replayer-sentry-secrets
                  key: sentry-dsn
                  # 'name' secret must exist & include key "host"
                  optional: true
            - name: SWH_SENTRY_DISABLE_LOGGING_EVENTS
              value: "true"
          {{- end }}
          imagePullPolicy: IfNotPresent
          volumeMounts:
          - name: configuration
            mountPath: /etc/swh
          - name: database-utils
            mountPath: /entrypoints
      volumes:
      - name: configuration
        emptyDir: {}
      - name: configuration-template
        configMap:
          name: storage-replayer-configuration-{{ $deployment }}-template
          items:
          - key: "config.yml.template"
            path: "config.yml.template"
      - name: database-utils
        configMap:
          name: database-utils
          defaultMode: 0555
{{ end }}
{{ end }}
{{- end -}}
