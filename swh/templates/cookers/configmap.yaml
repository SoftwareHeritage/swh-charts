{{ if .Values.cookers.enabled -}}
{{- $enable_sentry := and .Values.sentry.enabled .Values.cookers.sentry.enabled }}
{{ range $cooker_type, $deployment_config := .Values.cookers.deployments }}
{{ $cooker_name := ( print "cooker-" $cooker_type ) }}
{{ $use_json_logger := get $deployment_config "useJsonLogger" | default true }}
{{ $log_level := get $deployment_config "logLevel" | default "INFO" | quote }}
{{- $max_bundle_size := or $deployment_config.maxBundleSize $.Values.cookers.maxBundleSize -}}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $cooker_name }}-template
  namespace: {{ $.Values.namespace }}
data:
  config.yml.template: |
    {{- include "swh.storageConfiguration" (dict "configurationRef" $.Values.cookers.storageConfigurationRef
                                                 "Values" $.Values) | nindent 4 }}

    {{- include "swh.service.fromYaml" (dict "service" "vault"
                                             "configurationRef" $.Values.cookers.vaultConfigurationRef
                                             "Values" $.Values) | nindent 4 }}

    {{- if $.Values.cookers.objstorageConfigurationRef }}
    {{- include "swh.objstorageConfiguration" (dict "service" "objstorage"
                                             "configurationRef" $.Values.cookers.objstorageConfigurationRef
                                             "Values" $.Values) | nindent 4 }}
    {{- end }}
    {{- if $.Values.cookers.graphConfigurationRef }}
    {{- include "swh.service.fromYaml" (dict "service" "graph"
                                             "configurationRef" $.Values.cookers.graphConfigurationRef
                                             "Values" $.Values) | nindent 4 }}
    {{- end }}
    {{- if $max_bundle_size }}
    max_bundle_size: {{ $max_bundle_size | int }}
    {{- end }}
    {{- include "celery.configuration" (dict "configurationRef" $.Values.cookers.celeryConfigurationRef
                                             "Values" $.Values) | nindent 4 }}
      task_acks_late: {{ get $deployment_config "ackLate" | default false }}
      task_modules:
        - swh.vault.cooking_tasks
      task_queues:
    {{- range $queue := get $deployment_config "queues" }}
      - {{ $queue }}
    {{- end }}
    {{ if $enable_sentry }}
      sentry_settings_for_celery_tasks:
        __sentry-settings-for-celery-tasks__
    {{- end }}
  init-container-entrypoint.sh: |
    #!/bin/bash

    set -e

    CONFIG_FILE=/etc/swh/config.yml
    CONFIG_FILE_WIP=/tmp/wip-config.yml

    # substitute environment variables when creating the default config.yml
    eval echo \""$(</etc/swh/configuration-template/config.yml.template)"\" \
      > $CONFIG_FILE

    {{- if $enable_sentry }}
    SENTRY_SETTINGS_PATH=/etc/credentials/sentry-settings/sentry_settings_for_celery_tasks
    if [ -f $SENTRY_SETTINGS_PATH ]; then
      awk "/__sentry-settings-for-celery-tasks__/{system(\"sed 's/^/    /g' $SENTRY_SETTINGS_PATH\");next}1" $CONFIG_FILE > $CONFIG_FILE_WIP
      mv $CONFIG_FILE_WIP $CONFIG_FILE
    else
      sed -i 's/__sentry-settings-for-celery-tasks__//g' $CONFIG_FILE
    fi

    {{- end }}

    exit 0
  {{ if $use_json_logger }}
  logging-configuration.yml: |
    version: 1

    handlers:
      console:
        class: logging.StreamHandler
        formatter: json
        stream: ext://sys.stdout

    formatters:
      json:
        class: pythonjsonlogger.jsonlogger.JsonFormatter
        # python-json-logger parses the format argument to get the variables it actually expands into the json
        format: "%(asctime)s:%(threadName)s:%(pathname)s:%(lineno)s:%(funcName)s:%(task_name)s:%(task_id)s:%(name)s:%(levelname)s:%(message)s"

    loggers:
      celery:
        level: {{ $log_level }}
      amqp:
        level: WARNING
      urllib3:
        level: WARNING
      azure.core.pipeline.policies.http_logging_policy:
        level: WARNING
      swh:
        level: {{ $log_level }}
      celery.task:
        level: {{ $log_level }}

    root:
      level: {{ $log_level }}
      handlers:
      - console
  {{ end }}
{{ end }}
{{- end -}}
