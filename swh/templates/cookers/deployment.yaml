{{ if .Values.cookers.enabled -}}
{{- $enable_sentry := and .Values.sentry.enabled .Values.cookers.sentry.enabled }}
{{- $configurationChecksum := include (print $.Template.BasePath "/cookers/configmap.yaml") . -}}
{{- range $cooker_type, $deployment_config := .Values.cookers.deployments -}}
{{- $cooker_name := ( print "cooker-" $cooker_type ) -}}
# Set useJsonLogger to false to let the logs be plain text
{{- $use_json_logger := get $deployment_config "useJsonLogger" | default true }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $cooker_name }}
  namespace: {{ $.Values.namespace }}
  labels:
    app: {{ $cooker_name }}
spec:
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: {{ $cooker_name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
  template:
    metadata:
      labels:
        app: {{ $cooker_name }}
      annotations:
        # Force a rollout upgrade if the configuration changes
        checksum/config: {{ $configurationChecksum | sha256sum }}
    spec:
      {{- if $.Values.cookers.affinity }}
      affinity:
        {{ toYaml $.Values.cookers.affinity | nindent 8 }}
      {{- end }}
      {{- if and $.Values.podPriority.enabled $.Values.cookers.priorityClassName }}
      priorityClassName: {{ $.Values.namespace }}-{{ $.Values.cookers.priorityClassName }}
      {{ end }}
      terminationGracePeriodSeconds: {{ $.Values.cookers.terminationGracePeriodSeconds | default 3600 }}
      initContainers:
        - name: prepare-configuration
          image: {{ $.Values.swh_utils_image }}:{{ $.Values.swh_utils_image_version }}
          imagePullPolicy: IfNotPresent
          env:
            {{- include "swh.secrets.environment" (dict "configurationRef" $.Values.cookers.celeryConfigurationRef
                                                        "Values" $.Values) | indent 10 }}
            {{- if $.Values.cookers.objstorageConfigurationRef }}
            {{- include "swh.secrets.environment" (dict "configurationRef" $.Values.cookers.objstorageConfigurationRef
                                                        "Values" $.Values) | indent 10 }}
            {{- end }}
          command:
            - /entrypoint.sh
          volumeMounts:
          - name: configuration-template
            mountPath: /entrypoint.sh
            subPath: "init-container-entrypoint.sh"
            readOnly: true
          - name: configuration
            mountPath: /etc/swh
          - name: configuration-template
            mountPath: /etc/swh/configuration-template
        {{ if $enable_sentry }}
          - name: sentry-settings-for-celery-tasks
            mountPath: /etc/credentials/sentry-settings
            readOnly: true
        {{- end }}
      containers:
      - name: cookers
        resources:
          requests:
            memory: {{ get $deployment_config "requestedMemory" | default "512Mi" }}
            cpu: {{ get $deployment_config "requestedCpu" | default "500m" }}
          {{- if or ( get $deployment_config "limitedCpu" ) ( get $deployment_config "limitedMemory" ) }}
          limits:
            {{- if ( get $deployment_config "limitedMemory" ) }}
            memory: {{ get $deployment_config "limitedMemory" }}
            {{- end }}
            {{- if ( get $deployment_config "limitedCpu" ) }}
            cpu: {{ get $deployment_config "limitedCpu" }}
            {{- end }}
          {{ end }}
        image: {{ $.Values.swh_vault_cookers_image }}:{{ $.Values.swh_vault_cookers_image_version }}
        imagePullPolicy: IfNotPresent
        command:
        - /bin/bash
        args:
        - -c
        - /opt/swh/entrypoint.sh
        lifecycle:
          preStop:
            exec:
              command: ["/pre-stop.sh"]
        env:
        - name: STATSD_HOST
          value: {{ $.Values.statsdExternalHost | default "prometheus-statsd-exporter" }}
        - name: STATSD_PORT
          value: {{ $.Values.statsdPort | default "9125" | quote }}
        - name: STATSD_TAGS
          value: deployment:{{ $cooker_name }}
        - name: MAX_TASKS_PER_CHILD
          value: {{ get $deployment_config "maxTasksPerChild" | default 1 | quote }}
        - name: LOGLEVEL
          value: {{ get $deployment_config "logLevel" | default "INFO" | quote }}
        - name: SWH_CONFIG_FILENAME
          value: /etc/swh/config.yml
        {{ if $use_json_logger }}
        - name: SWH_LOG_CONFIG
          value: /etc/swh/logging-configuration.yml
        {{ end }}
        {{ if $enable_sentry }}
        - name: SWH_SENTRY_ENVIRONMENT
          value: {{ $.Values.sentry.environment }}
        {{- end }}
        volumeMounts:
          - name: cookers-utils
            mountPath: /pre-stop.sh
            subPath: "pre-stop.sh"
          - name: configuration
            mountPath: /etc/swh
        {{ if $use_json_logger }}
          - name: configuration-template
            mountPath: /etc/swh/logging-configuration.yml
            subPath: "logging-configuration.yml"
            readOnly: true
        {{ end }}
      volumes:
      - name: configuration
        emptyDir: {}
      - name: configuration-template
        configMap:
          name: {{ $cooker_name }}-template
          defaultMode: 0777
          items:
          - key: "config.yml.template"
            path: "config.yml.template"
          - key: "init-container-entrypoint.sh"
            path: "init-container-entrypoint.sh"
        {{ if $use_json_logger }}
          - key: "logging-configuration.yml"
            path: "logging-configuration.yml"
        {{ end }}
      - name: cookers-utils
        configMap:
          name: cookers-utils
          defaultMode: 0777
          items:
          - key: "pre-stop-idempotent.sh"
            path: "pre-stop.sh"
      {{ if $enable_sentry }}
      - name: sentry-settings-for-celery-tasks
        secret:
          secretName: sentry-settings-for-celery-tasks
          optional: true
      {{- end }}
{{ end }}
{{- end -}}
