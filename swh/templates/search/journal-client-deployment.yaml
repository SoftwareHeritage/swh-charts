{{ if and .Values.search.enabled .Values.search.journalClients.enabled -}}
{{- range $journal_client_type, $journal_client_config := .Values.search.journalClients.deployments -}}
{{- if or (not (hasKey $journal_client_config "enabled")) (get $journal_client_config "enabled") -}}
{{- $configurationChecksum := include "swh.journal.client.configmap"
  (dict "journal_client_type" $journal_client_type
        "configuration" $.Values.search.journalClients
        "journal_client_config" $journal_client_config
        "Values" $.Values) -}}

{{- $log_level := $journal_client_config.logLevel | default "INFO" -}}
{{- $journal_client_name := print "search-journal-client-" $journal_client_type -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ $.Values.namespace }}
  name: {{ $journal_client_name }}
  labels:
    app: {{ $journal_client_name }}
spec:
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: {{ $journal_client_name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
  template:
    metadata:
      labels:
        app: {{ $journal_client_name }}
      annotations:
        checksum/config: {{ $configurationChecksum | sha256sum }}
    spec:
      {{- if $.Values.search.journalClients.affinity }}
      affinity:
        {{- toYaml $.Values.search.journalClients.affinity | nindent 8 }}
      {{- end }}
      {{- if and $.Values.podPriority.enabled $.Values.search.journalClients.priorityClassName }}
      priorityClassName: {{ $.Values.namespace }}-{{ $.Values.search.journalClients.priorityClassName }}
      {{ end }}
      initContainers:
        - name: prepare-configuration
          image: debian:bullseye
          imagePullPolicy: IfNotPresent
          command:
          - /bin/bash
          args:
          - -c
          - eval echo "\"$(</etc/swh/configuration-template/config.yml.template)\"" > /etc/swh/config.yml
          volumeMounts:
          - name: configuration
            mountPath: /etc/swh
          - name: configuration-template
            mountPath: /etc/swh/configuration-template
      containers:
        - name: {{ $journal_client_name }}
          resources:
            requests:
              memory: {{ $journal_client_config.requestedMemory | default "512Mi" }}
              cpu: {{ $journal_client_config.requestedCpu | default "500m" }}
          {{- if or $journal_client_config.limitedMemory $journal_client_config.limitedCpu }}
            limits:
            {{- if $journal_client_config.limitedMemory }}
              memory: {{ $journal_client_config.limitedMemory }}
            {{- end }}
            {{- if $journal_client_config.limitedCpu }}
              cpu: {{ $journal_client_config.limitedCpu }}
            {{- end }}
          {{ end }}
          image: {{ $.Values.swh_search_image }}:{{ $.Values.swh_search_image_version }}
          command:
          - /opt/swh/entrypoint.sh
          args:
          - swh
          - --log-level
          - {{ $log_level | default "INFO" }}
          - search
          - --config-file
          - /etc/swh/config.yml
          - journal-client
          - objects
          env:
            - name: STATSD_HOST
              value: {{ $.Values.statsdExternalHost | default "prometheus-statsd-exporter" }}
            - name: STATSD_PORT
              value: {{ $.Values.statsdPort | default "9125" | quote }}
            - name: STATSD_TAGS
              value: deployment:{{ $journal_client_name }}
            - name: SWH_CONFIG_FILENAME
              value: /etc/swh/config.yml
            - name: LOG_LEVEL
              value: {{ $log_level | default "INFO" }}
          {{- if $.Values.search.sentry.enabled }}
            - name: SWH_SENTRY_ENVIRONMENT
              value: {{ $.Values.sentry.environment }}
            - name: SWH_MAIN_PACKAGE
              value: swh.search
            - name: SWH_SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: {{ $.Values.search.sentry.secretKeyRef }}
                  key: {{ $.Values.search.sentry.secretKeyName }}
                  # if the setting doesn't exist, sentry issue pushes will be disabled
                  optional: false
            - name: SWH_SENTRY_DISABLE_LOGGING_EVENTS
              value: "true"
          {{- end }}
          imagePullPolicy: IfNotPresent
          volumeMounts:
          - name: configuration
            mountPath: /etc/swh
      volumes:
      - name: configuration
        emptyDir: {}
      - name: configuration-template
        configMap:
          name: search-journal-client-{{ $journal_client_type }}-configuration-template
          items:
          - key: "config.yml.template"
            path: "config.yml.template"
{{ end }}
{{ end }}
{{- end -}}
