{{ if .Values.toolbox.enabled -}}
{{- $configChecksum := include (print $.Template.BasePath "/toolbox/configmap.yaml") . -}}
{{- $configScriptUtilsChecksum := include (print $.Template.BasePath "/toolbox/script-utils-configmap.yaml") . -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: swh-toolbox
  namespace: {{ .Values.namespace }}
  labels:
    app: swh-toolbox
spec:
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: swh-toolbox
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
  template:
    metadata:
      labels:
        app: swh-toolbox
      annotations:
        # Force a rollout upgrade if the configuration changes
        checksum/config: {{ $configChecksum | sha256sum }}
        checksum/configScript: {{ $configScriptUtilsChecksum | sha256sum }}
    spec:
      {{- if .Values.toolbox.affinity }}
      affinity:
        {{- toYaml .Values.toolbox.affinity | nindent 8 }}
      {{- end }}
      {{- if and $.Values.podPriority.enabled $.Values.toolbox.priorityClassName }}
      priorityClassName: {{ $.Values.namespace }}-{{ $.Values.toolbox.priorityClassName }}
      {{ end }}
      initContainers:
      {{- range $service_type, $deployment_config := .Values.toolbox.configs }}
        - name: prepare-configuration-{{ $service_type }}
          image: debian:bullseye
          imagePullPolicy: IfNotPresent
          command:
          - /bin/bash
          args:
          - -c
          - eval echo "\"$(</etc/swh/configuration-template/config.yml.template)\"" > /etc/swh/config-{{ $service_type }}.yml
          env:
          {{- range $k, $v := $deployment_config }}
            {{ if eq $k "storageConfigurationRef" }}
            {{ include "swh.storage.secretsEnvironment" (dict "configurationRef" $v
                                                              "Values" $.Values) | nindent 10 }}
            {{ else if (hasSuffix "Ref" $k) }}
            {{ include "swh.secrets.environment" (dict "configurationRef" $v
                                                       "Values" $.Values) | nindent 10 }}
            {{ end }}
          {{ end }}
          volumeMounts:
          - name: configuration
            mountPath: /etc/swh
          - name: configuration-{{ $service_type }}-template
            mountPath: /etc/swh/configuration-template
      {{- end }}
      containers:
      - name: swh-toolbox
        image: {{ $.Values.swh_toolbox_image }}:{{ $.Values.swh_toolbox_image_version }}
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            memory: {{ .Values.toolbox.requestedMemory | default "256Mi" }}
            cpu: {{ .Values.toolbox.requestedCpu | default "250m" }}
        command:
        - /bin/bash
        args:
        - -c
        - /opt/swh/entrypoint.sh
        volumeMounts:
          - name: configuration
            mountPath: /etc/swh
          - name: toolbox-script-utils
            mountPath: /opt/swh/bin
            readOnly: true
      volumes:
      - name: configuration
        emptyDir: {}
      {{ range $service_type, $deployment_config := .Values.toolbox.configs }}
      - name: configuration-{{ $service_type }}-template
        configMap:
          name: toolbox-{{ $service_type }}-template
          defaultMode: 0777
          items:
          - key: "config.yml.template"
            path: "config.yml.template"
      {{ end }}
      - name: toolbox-script-utils
        configMap:
          name: toolbox-script-utils
          defaultMode: 0555
{{ end }}
