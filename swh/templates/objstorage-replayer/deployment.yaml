{{ if .Values.objstorageReplayer.enabled -}}
{{- range $deployment, $deployment_config := .Values.objstorageReplayer.deployments -}}
{{- if or (not (hasKey $deployment_config "enabled")) (get $deployment_config "enabled") -}}
{{- $configurationChecksum := include "swh.objstorageReplayer.configmap" (dict "deployment_name" $deployment "deployment_config" $deployment_config "Values" $.Values) -}}
{{- $journalConfigurationRef := or $deployment_config.journalClientConfigurationRef $.Values.objstorageReplayer.journalClientConfigurationRef -}}
{{- $sourceObjstorageConfigurationRef := or $deployment_config.sourceObjstorageConfigurationRef $.Values.objstorageReplayer.sourceObjstorageConfigurationRef -}}
{{- $destinationObjstorageConfigurationRef := or $deployment_config.destinationObjstorageConfigurationRef $.Values.objstorageReplayer.destinationObjstorageConfigurationRef -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: objstorage-replayer-{{ $deployment }}
  namespace: {{ $.Values.namespace }}
  labels:
    app: objstorage-replayer-{{ $deployment }}
spec:
  revisionHistoryLimit: 2
  {{ if $deployment_config.replicas -}}
  replicas: {{ $deployment_config.replicas }}
  {{ end -}}
  selector:
    matchLabels:
      app: objstorage-replayer-{{ $deployment }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
  template:
    metadata:
      labels:
        app: objstorage-replayer-{{ $deployment }}
      annotations:
        # Force a rollout upgrade if the configuration changes
        checksum/config: {{ $configurationChecksum | sha256sum }}
    spec:
      {{- if $.Values.objstorageReplayer.affinity }}
      affinity:
        {{ toYaml $.Values.objstorageReplayer.affinity | nindent 8 }}
      {{- end }}
      {{- if and $.Values.podPriority.enabled $.Values.objstorageReplayer.priorityClassName }}
      priorityClassName: {{ $.Values.namespace }}-{{ $.Values.objstorageReplayer.priorityClassName }}
      {{ end }}
      initContainers:
        - name: prepare-configuration
          image: {{ $.Values.swh_utils_image }}:{{ $.Values.swh_utils_image_version }}
          imagePullPolicy: IfNotPresent
          command:
          - /entrypoints/prepare-configuration.sh
          env:
            {{ include "swh.secrets.environment" (dict "Values" $.Values
                                           "configurationRef" $journalConfigurationRef ) | nindent 10 }}
            {{ include "swh.secrets.environment" (dict "Values" $.Values
                                           "configurationRef" $sourceObjstorageConfigurationRef ) | nindent 10 }}
            {{ include "swh.secrets.environment" (dict "Values" $.Values
                                           "configurationRef" $destinationObjstorageConfigurationRef ) | nindent 10 }}
          volumeMounts:
          - name: configuration
            mountPath: /etc/swh
          - name: configuration-template
            mountPath: /etc/swh/configuration-template
          - name: config-utils
            mountPath: /entrypoints
            readOnly: true
      containers:
      - name: objstorage-replayer
        resources:
          requests:
            memory: {{ get $deployment_config "requestedMemory" | default "512Mi" }}
            cpu: {{ get $deployment_config "requestedCpu" | default "500m" }}
          {{- if or ( get $deployment_config "limitedCpu" ) ( get $deployment_config "limitedMemory" ) }}
          limits:
            {{- if ( get $deployment_config "limitedMemory" ) }}
            memory: {{ get $deployment_config "limitedMemory" }}
            {{- end }}
            {{- if ( get $deployment_config "limitedCpu" ) }}
            cpu: {{ get $deployment_config "limitedCpu" }}
            {{- end }}
          {{ end }}
        image: {{ $.Values.swh_objstorage_replayer_image }}:{{ $.Values.swh_objstorage_replayer_image_version }}
        imagePullPolicy: IfNotPresent
        env:
        - name: STATSD_HOST
          value: {{ $.Values.statsdExternalHost | default "prometheus-statsd-exporter" }}
        - name: STATSD_PORT
          value: {{ $.Values.statsdPort | default "9125" | quote }}
        - name: FETCH_CONCURRENCY
          value: {{ get $deployment_config "fetchConcurrency" | default 1 | quote }}
        - name: CHECK_DST
          value: {{ get $deployment_config "checkDestination" | default "true" | quote}}
        - name: LOGLEVEL
          value: {{ get $deployment_config "logLevel" | default "INFO" | quote }}
        - name: SWH_CONFIG_FILENAME
          value: /etc/swh/config.yml
        {{- if and $.Values.sentry.enabled $.Values.objstorageReplayer.sentry.enabled }}
        - name: SWH_SENTRY_ENVIRONMENT
          value: {{ $.Values.sentry.environment }}
        - name: SWH_MAIN_PACKAGE
          value: swh.objstorage.replayer
        - name: SWH_SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: common-secrets
              key: objstorage-replayer-sentry-dsn
              # 'name' secret must exist & include key "host"
              optional: false
        {{ end }}
        volumeMounts:
          - name: configuration
            mountPath: /etc/swh
      volumes:
      - name: configuration
        emptyDir: {}
      - name: configuration-template
        configMap:
          name: objstorage-replayer-{{ $deployment }}-template
          defaultMode: 0777
          items:
          - key: "config.yml.template"
            path: "config.yml.template"
      - name: config-utils
        configMap:
          name: config-utils
          defaultMode: 0555
{{ end }}
{{ end }}
{{ end }}
