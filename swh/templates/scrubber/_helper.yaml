{{/* Merge a deployment_config with defaults pulled from .Values.scrubber.<scrubberType>Checker then .Values.scrubber,
     according to which scrubberType this is */}}
{{- define "swh.scrubber.deploymentConfig" -}}
{{- $defaultKeys := list "scrubberDatabaseConfigurationRef" -}}
{{- if (eq .scrubberType "storage") -}}
  {{- $defaultKeys = mustAppend $defaultKeys "storageConfigurationRef" -}}
{{- else if (eq .scrubberType "objstorage") -}}
  {{- $defaultKeys = concat $defaultKeys (list "objstorageConfigurationRef" "storageConfigurationRef" "journalClientConfigurationRef") -}}
{{- else if (eq .scrubberType "journal") -}}
  {{- $defaultKeys = concat $defaultKeys (list "journalClientConfigurationRef" "journalClientOverrides") -}}
{{- end -}}

{{- $scrubberTypeValues := get .Values.scrubber (print $.scrubberType "Checker") | default (dict) -}}
{{- $merged := .deployment_config -}}

{{- range $defaultKey := $defaultKeys -}}
  {{- $merged = mustMerge $merged
                          (pick $scrubberTypeValues $defaultKey)
                          (pick $.Values.scrubber $defaultKey) -}}
{{- end -}}

{{- $merged | toYaml -}}
{{- end -}}

{{ define "swh.scrubber.journalChecker.configmap" }}
{{- $enable_sentry := and .Values.sentry.enabled .Values.scrubber.sentry.enabled -}}
{{- $journalClientConfigurationRef := .deployment_config.journalClientConfigurationRef -}}
{{- $journalClientConfiguration := required (print "journalClientConfigurationRef " $journalClientConfigurationRef " not found in scrubber.journalChecker configuration") (get .Values $journalClientConfigurationRef) -}}
{{- $journalClientOverrides := get .deployment_config "journalClientOverrides" | default (dict) -}}
{{- $storageConfigurationRef := .deployment_config.storageConfigurationRef | default .Values.scrubber.journalChecker.storageConfigurationRef -}}
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: {{ $.Values.namespace }}
  name: scrubber-journalchecker-{{ .client_name }}-template
data:
  config.yml.template: |
    {{- include "swh.postgresql" (dict "serviceType" "scrubber"
                                      "Values" .Values
                                      "configurationRef" .deployment_config.scrubberDatabaseConfigurationRef ) | nindent 4 }}

    {{- include "swh.journalClientConfiguration" (dict "configurationRef" $journalClientConfigurationRef
                                      "overrides" $journalClientOverrides
                                      "Values" .Values) | nindent 4 }}
    {{- if $storageConfigurationRef }}
    {{- include "swh.storageConfiguration" (dict "configurationRef" $storageConfigurationRef
                                                 "Values" .Values) | nindent 4 }}
    {{- end }}
{{ end }}

{{ define "swh.scrubber.storageChecker.configmap" }}
{{- $enable_sentry := and .Values.sentry.enabled .Values.scrubber.sentry.enabled -}}
{{- $storageConfigurationRef := .deployment_config.storageConfigurationRef -}}
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: {{ $.Values.namespace }}
  name: scrubber-storagechecker-{{ .client_name }}-template
data:
  config.yml.template: |
    {{- include "swh.postgresql" (dict "serviceType" "scrubber"
                                      "Values" .Values
                                      "configurationRef" .deployment_config.scrubberDatabaseConfigurationRef ) | nindent 4 }}
    {{- include "swh.storageConfiguration" (dict "configurationRef" $storageConfigurationRef
                                      "Values" .Values) | nindent 4 }}
{{ end }}

{{ define "swh.scrubber.objstorageChecker.configmap" }}
{{- $enable_sentry := and .Values.sentry.enabled .Values.scrubber.sentry.enabled -}}
{{- $storageConfigurationRef := .deployment_config.storageConfigurationRef -}}
{{- $objstorageConfigurationRef := .deployment_config.objstorageConfigurationRef -}}
{{- $journalClientConfigurationRef := .deployment_config.journalClientConfigurationRef -}}
{{- $journalClientConfiguration := required (print "journalClientConfigurationRef " $journalClientConfigurationRef " not found in scrubber.journalChecker configuration") (get .Values $journalClientConfigurationRef) -}}
{{- $journalClientOverrides := get .deployment_config "journalClientOverrides" | default (dict) -}}
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: {{ $.Values.namespace }}
  name: scrubber-objstoragechecker-{{ .client_name }}-template
data:
  config.yml.template: |
    {{- include "swh.postgresql" (dict "serviceType" "scrubber"
                                      "Values" .Values
                                      "configurationRef" .deployment_config.scrubberDatabaseConfigurationRef ) | nindent 4 }}
    {{- include "swh.storageConfiguration" (dict "configurationRef" $storageConfigurationRef
                                      "Values" .Values) | nindent 4 }}
    {{- include "swh.journalClientConfiguration" (dict "configurationRef" $journalClientConfigurationRef
                                      "overrides" $journalClientOverrides
                                      "Values" .Values) | nindent 4 }}
    {{- include "swh.objstorageConfiguration" (dict "configurationRef" $objstorageConfigurationRef
                                      "Values" .Values) | nindent 4 }}
{{ end }}


{{/* Create the scrubber configuration in the backend if needed */}}
{{- define "swh.initializeScrubberConfig" -}}
{{- $image_version := get . "imageVersion" | default ( get .Values (print .imagePrefixName "_version") ) |
        required (print .imagePrefixName "_version is mandatory in values.yaml ") -}}
{{- $name := required (print "<.config.name> of the configuration") .config.name -}}
{{- $object_type := required (print "<.config.objectType> of the configuration") .config.objectType -}}
{{- $backend := required (print "<.config.backend> of the configuration") .config.backend -}}
- name: {{ .containerName | default "initiliaze-scrubber-configuration" }}
  image: {{ get .Values .imagePrefixName }}:{{ $image_version }}
  command:
  - /entrypoints/register-scrubber-configuration.sh
  env:
  - name: NAME
    value: {{ $name }}
  - name: OBJECT_TYPE
    value: {{ $object_type }}
  - name: BACKEND
    value: {{ $backend }}
  - name: NB_PARTITIONS
    value: {{ .config.nbPartitions | default "" | quote }}
  - name: CHECK_HASHES
    value: {{ .config.checkHashes | default "false" | quote }}
  - name: CHECK_REFERENCES
    value: {{ .config.checkReferences | default "false" | quote }}
  - name: SWH_CONFIG_FILENAME
    value: /etc/swh/config.yml
  volumeMounts:
  - name: configuration
    mountPath: /etc/swh
  - name: backend-utils
    mountPath: /entrypoints
{{- end -}}
