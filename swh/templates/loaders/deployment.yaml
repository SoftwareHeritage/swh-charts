{{ if .Values.loaders.enabled -}}
{{- $enable_sentry := and .Values.sentry.enabled .Values.loaders.sentry.enabled }}
{{- $default_priority_class_name := .Values.loaders.priorityClassName -}}
{{- range $loader_type, $deployment_config := .Values.loaders.deployments -}}
{{- if or (not (hasKey $deployment_config "enabled")) (get $deployment_config "enabled") -}}
{{/* Populate default values for these entries for the deployment from the top level loaders values */}}
{{- $deploymentConfig := mustMerge $deployment_config (pick $.Values.loaders "celeryConfigurationRef" "storageConfigurationRef") -}}
{{- $configurationChecksum := include "swh.loader.configmap" (dict "loader_type" $loader_type "deployment_config" $deployment_config "Values" $.Values) -}}
{{- $loader_name := ( print "loader-" $loader_type ) -}}
# if defined at the "typed" loader level
{{- $local_container_image_key := get $deployment_config "image" }}
{{- $local_container_image := get $.Values $local_container_image_key }}
{{- $local_container_image_version_key := ( print $local_container_image_key "_version" ) }}
{{- $local_container_image_version := get $.Values $local_container_image_version_key }}
# otherwise use the global image is defined First this needs to replace - in
# $loader_type with "" to find the proper image name.
{{- $loader_type_image_name := regexReplaceAll "[-]+" $loader_type "" -}}
{{- $image_name_key := ( print "swh_loader_" $loader_type_image_name "_image" ) -}}
{{- $image_version_key := ( print $image_name_key "_version" ) -}}
{{- $container_image := get $.Values $image_name_key }}
{{- $container_image_version := get $.Values $image_version_key }}
{{- $loader_affinity := get $deployment_config "affinity" | default $.Values.loaders.affinity }}
{{- $loader_priority_class_name := get $deployment_config "priorityClassName" -}}
{{- $loader_sysctls := get $deployment_config "sysctls" | default $.Values.loaders.sysctls | default (dict) }}
{{- $use_json_logger := get $deployment_config "useJsonLogger" | default true }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $loader_name }}
  namespace: {{ $.Values.namespace }}
  labels:
    app: {{ $loader_name }}
spec:
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: {{ $loader_name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
  template:
    metadata:
      labels:
        app: {{ $loader_name }}
      annotations:
        # Force a rollout upgrade if the configuration changes
        checksum/config: {{ $configurationChecksum | sha256sum }}
    spec:
      {{- if $loader_affinity }}
      affinity:
        {{- toYaml $loader_affinity | nindent 8 }}
      {{- end }}
      {{- if and $.Values.podPriority.enabled $loader_priority_class_name }}
      priorityClassName: {{ $.Values.namespace }}-{{ $loader_priority_class_name }}
      {{- else if and $.Values.podPriority.enabled $default_priority_class_name }}
      priorityClassName: {{ $.Values.namespace }}-{{ $default_priority_class_name }}
      {{ end }}
      terminationGracePeriodSeconds: {{ $.Values.loaders.terminationGracePeriodSeconds | default 3600 }}
      initContainers:
        - name: prepare-configuration
          image: debian:bullseye
          imagePullPolicy: IfNotPresent
          env:
{{ include "swh.secrets.environment" (dict "Values" $.Values
                                           "configurationRef" $deployment_config.celeryConfigurationRef) | indent 10 }}
          {{ if $deployment_config.depositConfigurationRef -}}
{{ include "swh.secrets.environment" (dict "Values" $.Values
                                           "configurationRef" $deployment_config.depositConfigurationRef) | indent 10 }}
          {{ end }}
          command:
            - /entrypoint.sh
          volumeMounts:
          - name: configuration-template
            mountPath: /entrypoint.sh
            subPath: "init-container-entrypoint.sh"
            readOnly: true
          - name: configuration
            mountPath: /etc/swh
          - name: configuration-template
            mountPath: /etc/swh/configuration-template
          - name: metadata-fetcher-credentials
            mountPath: /etc/credentials/metadata-fetcher
            readOnly: true
        {{ if $enable_sentry }}
          - name: sentry-settings-for-celery-tasks
            mountPath: /etc/credentials/sentry-settings
            readOnly: true
        {{- end }}
      containers:
      - name: loaders
        {{ if $local_container_image -}}
        image: {{ $local_container_image }}:{{ $local_container_image_version }}
        {{ else if $container_image -}}
        image: {{ $container_image }}:{{ $container_image_version }}
        {{ end }}
        imagePullPolicy: IfNotPresent
        command:
          - /opt/swh/entrypoint.sh
        resources:
          requests:
            memory: {{ get $deployment_config "requestedMemory" | default "512Mi" }}
            cpu: {{ get $deployment_config "requestedCpu" | default "500m" }}
        {{- if or $deployment_config.limitedMemory $deployment_config.limitedCpu }}
          limits:
          {{- if $deployment_config.limitedMemory }}
            memory: {{ $deployment_config.limitedMemory }}
          {{- end }}
          {{- if $deployment_config.limitedCpu }}
            cpu: {{ $deployment_config.limitedCpu }}
          {{- end }}
        {{- end }}
        lifecycle:
          preStop:
            exec:
              command: ["/pre-stop.sh"]
        env:
        - name: STATSD_HOST
          value: {{ $.Values.statsdExternalHost | default "prometheus-statsd-exporter" }}
        - name: STATSD_PORT
          value: {{ $.Values.statsdPort | default "9125" | quote }}
        - name: STATSD_TAGS
          value: deployment:{{ $loader_name }}
        - name: MAX_TASKS_PER_CHILD
          value: {{ get $deployment_config "maxTasksPerChild" | default 10 | quote }}
        - name: LOGLEVEL
          value: {{ get $deployment_config "logLevel" | default "INFO" | quote }}
        - name: SWH_CONFIG_FILENAME
          value: /etc/swh/config.yml
        {{ if $use_json_logger -}}
        - name: SWH_LOG_CONFIG
          value: /etc/swh/logging-configuration.yml
        {{ end }}
        {{ if $enable_sentry }}
        - name: SWH_SENTRY_ENVIRONMENT
          value: {{ $.Values.sentry.environment }}
        - name: SWH_SENTRY_DISABLE_LOGGING_EVENTS
          value: {{ get $deployment_config "sentryDisableLoggingEvents" | default "yes" | quote }}
        {{- end }}
        volumeMounts:
          - name: loader-utils
            mountPath: /pre-stop.sh
            subPath: "pre-stop.sh"
          - name: configuration
            mountPath: /etc/swh
          - name: localstorage
            mountPath: /tmp
        {{ if $use_json_logger }}
          - name: configuration-template
            mountPath: /etc/swh/logging-configuration.yml
            subPath: "logging-configuration.yml"
            readOnly: true
        {{ end }}
      volumes:
      - name: localstorage
{{ toYaml ($.Values.tmpEphemeralStorage.claimTemplate | default $.Values.tmpEphemeralStorage.default) | indent 8 }}
      - name: configuration
        emptyDir: {}
      - name: configuration-template
        configMap:
          name: {{ $loader_name }}-template
          defaultMode: 0777
          items:
          - key: "config.yml.template"
            path: "config.yml.template"
          - key: "init-container-entrypoint.sh"
            path: "init-container-entrypoint.sh"
        {{ if $use_json_logger }}
          - key: "logging-configuration.yml"
            path: "logging-configuration.yml"
        {{ end }}
      - name: loader-utils
        configMap:
          name: loader-utils
          defaultMode: 0777
          items:
          - key: "pre-stop-idempotent.sh"
            path: "pre-stop.sh"
      - name: metadata-fetcher-credentials
        secret:
          secretName: metadata-fetcher-credentials
          optional: true
      {{ if $enable_sentry }}
      - name: sentry-settings-for-celery-tasks
        secret:
          secretName: sentry-settings-for-celery-tasks
          optional: true
      {{- end }}
      {{- if $loader_sysctls }}
      securityContext:
        sysctls:
          {{ range $name, $value := $loader_sysctls -}}
          - name: {{ $name | quote }}
            value: {{ $value | quote }}
          {{ end }}
      {{- end }}
{{ end -}}
{{ end }}
{{- end -}}
