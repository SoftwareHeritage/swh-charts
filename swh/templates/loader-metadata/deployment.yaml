{{ if .Values.loaderMetadata.enabled -}}
{{- $configurationChecksum := include (print .Template.BasePath "/loader-metadata/configmap.yaml") . -}}
{{- $journalUser := .Values.loaderMetadata.journalBrokers.user -}}
{{- $secretName := .Values.loaderMetadata.journalBrokers.secretName -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loader-metadata
  namespace: {{ .Values.namespace }}
  labels:
    app: loader-metadata
spec:
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: loader-metadata
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
  template:
    metadata:
      labels:
        app: loader-metadata
      annotations:
        # Force a rollout upgrade if the configuration changes
        checksum/config: {{ $configurationChecksum | sha256sum }}
    spec:
      {{- if .Values.loaderMetadata.affinity }}
      affinity:
        {{ toYaml .Values.loaderMetadata.affinity | nindent 8 }}
      {{- end }}
      {{- if and $.Values.podPriority.enabled $.Values.loaderMetadata.priorityClassName }}
      priorityClassName: {{ $.Values.namespace }}-{{ $.Values.loaderMetadata.priorityClassName }}
      {{ end }}
      terminationGracePeriodSeconds: 3600
      {{- if .Values.loaderMetadata.dnsConfigurationRef }}
      {{- include "swh.dns.configuration"  (dict "Values" $.Values
                                            "configurationRef" .Values.loaderMetadata.dnsConfigurationRef) | indent 6 }}
      {{- end }}
      initContainers:
        - name: prepare-configuration
          image: debian:bullseye
          imagePullPolicy: IfNotPresent
          env:
          {{- if and $journalUser $secretName }}
          - name: BROKER_USER_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ $secretName }}
                key: BROKER_USER_PASSWORD
                optional: true
          {{- end }}
          command:
            - /entrypoint.sh
          volumeMounts:
          - name: configuration-template
            mountPath: /entrypoint.sh
            subPath: "init-container-entrypoint.sh"
            readOnly: true
          - name: configuration
            mountPath: /etc/swh
          - name: configuration-template
            mountPath: /etc/swh/configuration-template
          - name: metadata-fetcher-credentials
            mountPath: /etc/credentials/metadata-fetcher
            readOnly: true
      containers:
      - name: loader-metadata
        image: {{ .Values.swh_loader_metadata_image }}:{{ .Values.swh_loader_metadata_image_version }}
        imagePullPolicy: IfNotPresent
        command:
          - /opt/swh/entrypoint.sh
        resources:
          requests:
            memory: {{ .Values.loaderMetadata.requestedMemory | default "512Mi" }}
            cpu: {{ .Values.loaderMetadata.requestedCpu | default "500m" }}
          {{- if or .Values.loaderMetadata.limitedMemory .Values.loaderMetadata.limitedCpu }}
          limits:
            {{- if .Values.loaderMetadata.limitedMemory }}
            memory: {{ .Values.loaderMetadata.limitedMemory }}
            {{- end }}
            {{- if .Values.loaderMetadata.limitedCpu }}
            cpu: {{ .Values.loaderMetadata.limitedCpu }}
            {{- end }}
          {{ end }}
        lifecycle:
          preStop:
            exec:
              command: ["/pre-stop.sh"]
        env:
        - name: STATSD_HOST
          value: {{ .Values.statsdExternalHost | default "prometheus-statsd-exporter" }}
        - name: STATSD_PORT
          value: {{ .Values.statsdPort | default "9125" | quote }}
        - name: STATSD_TAGS
          value: deployment:loader-metadata
        - name: SWH_LOG_LEVEL
          value: {{ .Values.loaderMetadata.logLevel | default "INFO" | quote }}
        - name: SWH_CONFIG_FILENAME
          value: /etc/swh/config.yml
        - name: SWH_SENTRY_ENVIRONMENT
          value: {{ .Values.sentry.environment }}
        - name: SWH_MAIN_PACKAGE
          value: {{ .Values.loaderMetadata.sentrySwhPackage }}
        - name: SWH_SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: common-secrets
              key: loader-metadata-sentry-dsn
              # 'name' secret must exist & include key "host"
              optional: true
        volumeMounts:
          - name: loader-metadata-utils
            mountPath: /pre-stop.sh
            subPath: "pre-stop.sh"
          - name: configuration
            mountPath: /etc/swh
      volumes:
      - name: configuration
        emptyDir: {}
      - name: configuration-template
        configMap:
          name: loader-metadata-template
          defaultMode: 0777
          items:
          - key: "config.yml.template"
            path: "config.yml.template"
          - key: "init-container-entrypoint.sh"
            path: "init-container-entrypoint.sh"
      - name: loader-metadata-utils
        configMap:
          name: loader-metadata-utils
          defaultMode: 0777
          items:
          - key: "pre-stop-idempotent.sh"
            path: "pre-stop.sh"
      - name: metadata-fetcher-credentials
        secret:
          secretName: metadata-fetcher-credentials
          optional: true
{{ end }}
