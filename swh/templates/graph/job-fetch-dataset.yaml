{{ if .Values.graph.enabled -}}
{{ range $graphType, $graphConfig := .Values.graph.deployments }}
{{- if or (not (hasKey $graphConfig "enabled")) (get $graphConfig "enabled") -}}
{{- $serviceType := print "graph-" $graphType -}}
{{- $configArgsDict := dict "serviceType" $serviceType
                            "configuration" $graphConfig
                            "Values" $.Values -}}
{{- $datasetName := dig "dataset" "name" "graph" $graphConfig -}}
{{- $fetchGraphDataset := dig "dataset" "fetch" false $graphConfig -}}
{{- if $fetchGraphDataset }}
{{- $graphPath := print "/srv/graph/" $datasetName "/compressed" -}}
{{- $graphName := get $graphConfig "graphName" | default $.Values.graph.graphName -}}
{{- $prepareMemoryVolume := get $graphConfig "prepareMemoryVolume" | default false -}}
{{- $graphSourcePath := $prepareMemoryVolume | ternary (print "/srv/dataset/" $datasetName "/compressed") "" -}}
{{- $graphImageVersion := get $graphConfig "imageVersion" | default $.Values.graph.imageVersion | default $.Values.swh_graph_image_version -}}
{{- $versionChecksum := print $graphImageVersion | sha256sum -}}
{{- $jobName := print $serviceType "-job-fetch-dataset-" (substr 0 6 $versionChecksum) -}}
{{- $graphReindexDataset := dig "dataset" "reindex" false $graphConfig -}}
---
apiVersion: batch/v1
kind: Job
metadata:
  namespace: {{ $.Values.namespace }}
  name: {{ $jobName }}
  labels:
    app: {{ $serviceType }}
spec:
  backoffLimit: 0
  template:
    metadata:
      labels:
        app: {{ $serviceType }}
    spec:
      restartPolicy: Never
      {{- $affinity := $graphConfig.affinity | default $.Values.graph.affinity | default dict -}}
      {{- if $affinity }}
      affinity:
        {{- toYaml $affinity | nindent 8 }}
      {{- end }}
      {{- $nodeSelector := $graphConfig.nodeSelector | default $.Values.graph.nodeSelector | default dict -}}
      {{- if $nodeSelector }}
      nodeSelector:
        {{- toYaml $nodeSelector | nindent 8 }}
      {{- end }}
      {{- if and $.Values.podPriority.enabled $.Values.graph.priorityClassName }}
      priorityClassName: {{ $.Values.namespace }}-{{ $.Values.graph.priorityClassName }}
      {{ end }}
      initContainers:
        - name: prepare-configuration
          image: {{ $.Values.swh_utils_image }}:{{ $.Values.swh_utils_image_version }}
          imagePullPolicy: IfNotPresent
          command:
          - /entrypoints/prepare-configuration.sh
          env: {{ include "swh.secrets.envFromDeploymentConfig"
            (dict "deploymentConfig" $graphConfig
                  "Values" $.Values ) | nindent 10 }}
          volumeMounts:
          - name: configuration
            mountPath: /etc/swh
          - name: configuration-template
            mountPath: /etc/swh/configuration-template
          - name: config-utils
            mountPath: /entrypoints
            readOnly: true
      containers:
        {{ include "swh.graph.fetchDataset" (dict "Values" $.Values
                                                  "imagePrefixName" "swh_graph_image"
                                                  "imageVersion" $graphImageVersion
                                                  "graphName" $graphName
                                                  "graphPath" (ne $graphSourcePath "" | ternary $graphSourcePath $graphPath)
                                                  "config" $graphConfig.dataset
                                                  "extraVolumes" $graphConfig.extraVolumes) | nindent 8 }}
        {{- if $graphReindexDataset }}
        {{ include "swh.graph.reindexDataset" (dict "Values" $.Values
                                                    "imagePrefixName" "swh_graph_image"
                                                    "imageVersion" $graphImageVersion
                                                    "graphPath" ($prepareMemoryVolume | ternary $graphSourcePath $graphPath)
                                                    "graphName" $graphName
                                                    "extraVolumes" $graphConfig.extraVolumes) | nindent 8 }}
        {{ end }}
        {{- if $prepareMemoryVolume }}
        {{ include "swh.graph.prepareMemoryVolume" (dict "Values" $.Values
                                                         "graphName" $graphName
                                                         "pathDatasetSource" $graphSourcePath
                                                         "pathDatasetDestination" $graphPath
                                                         "waitForReindex" $graphReindexDataset
                                                         "extraVolumes" $graphConfig.extraVolumes) | nindent 8 }}
        {{- end }}
      volumes:
      - name: configuration
        emptyDir: {}
      - name: configuration-template
        configMap:
          name: {{ $serviceType }}-configuration-template
          items:
          - key: "config.yml.template"
            path: "config.yml.template"
      - name: backend-utils
        configMap:
          name: backend-utils
          defaultMode: 0555
      - name: config-utils
        configMap:
          name: config-utils
          defaultMode: 0555
      {{- range $volumeName, $volumeConfig := $graphConfig.extraVolumes }}
      - name: {{ $volumeName }}
        persistentVolumeClaim:
          claimName: {{ $volumeName }}-pvc
      {{ end }}
{{ end }}
{{ end }}
{{ end }}
{{- end }}
