{{ if .Values.graphql.enabled -}}
{{ range $graphql_name, $graphql_config := .Values.graphql.deployments }}
{{- if or (not (hasKey $graphql_config "enabled")) (get $graphql_config "enabled") -}}
{{- $serviceType := ( print "graphql-" $graphql_name ) -}}
{{- $configArgsDict := dict "serviceType" $serviceType
                            "configuration" $graphql_config
                            "Values" $.Values -}}
{{- $configChecksum := include "swh.graphql.configmap" $configArgsDict | sha256sum -}}
{{- $configLoggingChecksum := include "swh.graphql.gunicorn.logging" $configArgsDict | sha256sum -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $serviceType }}
  namespace: {{ $.Values.namespace }}
  labels:
    app: {{ $serviceType }}
spec:
  revisionHistoryLimit: 2
  replicas: {{ $graphql_config.replicas | default 1 }}
  selector:
    matchLabels:
      app: {{ $serviceType }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
  template:
    metadata:
      labels:
        app: {{ $serviceType }}
      annotations:
        # Force a rollout upgrade if the configuration changes
        checksum/config: {{ $configChecksum }}
        checksum/config-logging: {{ $configLoggingChecksum }}
    spec:
      {{- if $.Values.graphql.affinity }}
      affinity:
        {{- toYaml $.Values.graphql.affinity | nindent 8 }}
      {{- end }}
      {{- if and $.Values.podPriority.enabled (or $.Values.graphql.priorityClassName $graphql_config.priorityClassName) }}
      priorityClassName: {{ $.Values.namespace }}-{{ $graphql_config.priorityClassName | default $.Values.graphql.priorityClassName }}
      {{ end }}
      containers:
        - name: {{ $serviceType }}
          image: {{ $.Values.swh_graphql_image }}:{{ $.Values.swh_graphql_image_version }}
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              memory: {{ $graphql_config.requestedMemory | default "150Mi" }}
              cpu: {{ $graphql_config.requestedCpu | default "50m" }}
          {{- if or $graphql_config.limitedMemory $graphql_config.limitedCpu }}
            limits:
            {{- if $graphql_config.limitedMemory }}
              memory: {{ $graphql_config.limitedMemory }}
            {{- end }}
            {{- if $graphql_config.limitedCpu }}
              cpu: {{ $graphql_config.limitedCpu }}
            {{- end }}
          {{ end }}
          ports:
            - containerPort: {{ $graphql_config.port }}
              name: rpc
          startupProbe:
            httpGet:
              path: /
              port: rpc
            failureThreshold: 30
            periodSeconds: 5
          livenessProbe:
            tcpSocket:
              port: rpc
            initialDelaySeconds: 10
            periodSeconds: 5
          env:
          - name: PORT
            value: {{ $.Values.graphql.port | quote }}
          - name: STATSD_HOST
            value: {{ $.Values.statsdExternalHost | default "prometheus-statsd-exporter" }}
          - name: STATSD_PORT
            value: {{ $.Values.statsdPort | default "9125" | quote }}
          - name: STATSD_TAGS
            value: deployment:{{ $serviceType }}
          - name: STATSD_SERVICE_TYPE
            value: {{ $serviceType }}
          - name: SWH_LOG_LEVEL
            value: {{ $graphql_config.logLevel | default $.Values.graphql.logLevel | quote }}
          - name: SWH_LOG_CONFIG_JSON
            value: /etc/swh/logging/logging-gunicorn.json
          {{ if $graphql_config.gunicorn -}}
          - name: THREADS
            value: {{ $graphql_config.gunicorn.threads | default 5 | quote }}
          - name: WORKERS
            value: {{ $graphql_config.gunicorn.workers | default 2 | quote }}
          - name: TIMEOUT
            value: {{ $graphql_config.gunicorn.timeout | default 60 | quote }}
          {{ end -}}
          {{ if $.Values.graphql.sentry.enabled -}}
          - name: SWH_SENTRY_ENVIRONMENT
            value: {{ $.Values.sentry.environment }}
          - name: SWH_MAIN_PACKAGE
            value: swh.graphql
          - name: SWH_SENTRY_DSN
            valueFrom:
              secretKeyRef:
                name: {{ $.Values.graphql.sentry.secretKeyRef }}
                key: {{ $.Values.graphql.sentry.secretKeyName }}
                # 'name' secret should exist & include key
                # if the setting doesn't exist, sentry pushes will be disabled
                optional: true
          {{ end -}}
          volumeMounts:
            - name: config
              mountPath: /etc/swh/config.yml
              subPath: config.yml
              readOnly: true
            - name: configuration-logging
              mountPath: /etc/swh/logging
      volumes:
        - name: config
          configMap:
            name: {{ $serviceType }}-configuration-template
            defaultMode: 0444
        - name: configuration-logging
          configMap:
            name: {{ $serviceType }}-configuration-logging
            items:
            - key: "logging-gunicorn.json"
              path: "logging-gunicorn.json"
{{ end }}
{{ end -}}
{{- end -}}
