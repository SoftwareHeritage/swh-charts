{{/*
   * Create a graphql configmap for service .serviceType
   */}}
{{ define "swh.graphql.configmap" }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: {{ .Values.namespace }}
  name: {{ .serviceType }}-configuration-template
data:
  # TODO: rename to not have a dot in the name to allow testing
  config.yml: |
    {{- if .configuration.storageConfigurationRef }}
    {{- include "swh.storageConfiguration" (dict "configurationRef" .configuration.storageConfigurationRef
                                                 "Values" .Values) | nindent 4 }}
    {{- end -}}
    {{- if .configuration.searchConfigurationRef }}
    {{ include "swh.service.fromYaml" (dict "service" "search"
                                            "configurationRef" .configuration.searchConfigurationRef
                                            "Values" .Values) | nindent 4 }}
    {{- end }}

    debug: {{ .configuration.debug | default $.Values.graphql.debug }}

    introspection: {{ .configuration.introspection | default $.Values.graphql.introspection }}
    {{- if .configuration.maxRawContentSize }}

    max_raw_content_size: {{ .configuration.maxRawContentSize }}
    {{- end }}

    max_query_cost:
      anonymous: {{ .configuration.anonymousUserMaxQueryCost | default $.Values.graphql.anonymousUserMaxQueryCost }}
      user: {{ .configuration.authenticatedUserMaxQueryCost | default $.Values.graphql.authenticatedUserMaxQueryCost }}

    {{ if .configuration.auth.enabled -}}
    auth:
      server: {{ .configuration.auth.server | default "" }}
      {{ if .configuration.auth.publicServer -}}
      public_server: {{ .configuration.auth.publicServer }}
      {{ end -}}
      realm: {{ .configuration.auth.realm | default "" }}
      client: {{ .configuration.auth.client | default "swh-web" }}
      cache:
        url: {{ .configuration.auth.cacheUrl | default "memory://" }}
    {{- end }}

{{- end -}}

{{/*
   * Create an objstorage gunicorn logging json config file for service .serviceType
   */}}
{{ define "swh.graphql.gunicorn.logging" }}
{{- $defaultLoggingConfig := .configuration.defaultLoggingConfig | default .Values.graphql.defaultLoggingConfig -}}
{{- $rpcGunicornLoggingConfig := .configuration.rpcGunicornLoggingConfig | default .Values.graphql.rpcGunicornLoggingConfig -}}
{{ include "swh.gunicorn.logging"
  (dict "serviceType" .serviceType
        "defaultLoggingConfig" $defaultLoggingConfig
        "rpcGunicornLoggingConfig" $rpcGunicornLoggingConfig
        "Values" .Values) -}}
{{ end }}

