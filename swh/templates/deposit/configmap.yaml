{{- if .Values.deposit.enabled -}}
{{- $hosts := .Values.deposit.hosts }}
{{- $allowed_instance := first $hosts }}
{{- $configuration := get .Values .Values.deposit.blobstorageConfigurationRef -}}
{{- $connection_string := get $configuration "connection_string" | default "" -}}
{{- $container_name := get $configuration "container_name" | default "" -}}
{{- $content_type := get $configuration "content_type" | default "" -}}
{{- $content_encoding := get $configuration "content_encoding" | default "" -}}
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: {{ .Values.namespace }}
  name: deposit-configuration-template
data:
  config.yml.template: |
    instance_name: {{ $allowed_instance }}
    allowed_hosts:
      {{- range $host := $hosts }}
      - {{ $host }}
      {{- end }}
    swh_authority_url: {{ $allowed_instance }}
    {{- include "swh.service.fromYaml" (dict "service" "storage"
                                             "configurationRef" .Values.deposit.storageConfigurationRef
                                             "Values" .Values) | nindent 4 }}
    {{- include "swh.service.fromYaml" (dict "service" "storage_metadata"
                                             "configurationRef" .Values.deposit.storageConfigurationRef
                                             "Values" .Values) | nindent 4 }}
    {{- include "swh.service.fromYaml" (dict "service" "scheduler"
                                             "configurationRef" .Values.deposit.schedulerConfigurationRef
                                             "Values" .Values) | nindent 4 }}

    {{- if .Values.deposit.keycloakConfigurationRef }}
    authentication_provider: keycloak
    {{- include "swh.service.fromYaml" (dict "service" "keycloak"
                                             "configurationRef" .Values.deposit.keycloakConfigurationRef
                                             "Values" .Values) | nindent 4 }}
    {{ end }}
    private:
      secret_key: ${DJANGO_SECRET_KEY}
      db:
        {{- include "django.postgresql" (dict "configurationRef" .Values.deposit.databaseConfigurationRef
                                              "Values" .Values) | nindent 8 -}}
    {{- if .Values.deposit.extraConfig -}}
    {{ toYaml .Values.deposit.extraConfig | nindent 4 }}
    {{- end }}
    {{- if and $container_name $connection_string }}
    azure:
      container_name: "{{ $container_name | quote }}"
      connection_string: "{{ $connection_string | quote }}"
      content_type: {{ $content_type | quote }}
      content_encoding: {{ $content_encoding | quote }}
    {{ end }}
{{- end -}}
