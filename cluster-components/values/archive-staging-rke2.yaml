clusterName: archive-staging-rke2

# Relay prometheus alerts to the admin cluster's ingress relay
alertmanager:
  enabled: true

alertmanagerConfig:
  enabled: true

metallb:
  enabled: true
  # Generic ipAddressPool (e.g. for main cluster ingress)
  ipAddressPools:
    # main external-ip for LoadBalancer (but postgres')
    - ip: 192.168.130.139/32
      suffixName: ingress
      serviceAllocation:
        priority: 50
        namespaces:
          - ingress-nginx
    - ip: 192.168.130.138/32
      suffixName: pooler
      serviceAllocation:
        priority: 50
        namespaces:
          - swh-cassandra-next-version
        serviceSelectors:
          - matchExpressions:
            - key: app
              operator: In
              values:
                - next-version-dbs-pooler

podPriority:
  enabled: true

svix:
  enabled: true
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: svix-server
            operator: In
            values:
            - "true"
  ingress:
    host: svix.internal.staging.swh.network
    createTLS: true
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-production-gandi
      kubernetes.io/tls-acme: "true"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    whitelistSourceRange:
      # cluster internal range ip
      - 10.42.0.0/16
      - 10.43.0.0/16
      # admin ip
      - 192.168.50.0/24
  requestedMemory: 100Mi
  requestedCpu: 100m
  namespace: svix-server
  redis:
    # When false, the redis is not deployed through the chart but through the
    # k8s-cluster-config repository configuration
    managedByChart: false
    dsn: redis-svix.svix-server
  postgresDsn: db1.internal.staging.swh.network

alerting:
  enabled: true
  environment: staging
  saveCodeNow:
    threshold: 5

scrapeExternalMetrics:
  enabled: true
  deployments:
    cassandra:
      namespace: cassandra
      metricsName: jmx-exporter
      serviceMonitorName: cassandra-jmx-exporter
      port: 7070
      ips:
        - 192.168.130.181
        - 192.168.130.182
        - 192.168.130.183
      relabelings:
        # https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config
        - sourceLabels:
            - __address__
          targetLabel: __address__
          regex: "192.168.130.18(\\d)(.*)"
          replacement: "cassandra$1.internal.staging.swh.network$2"
          action: replace
    # Integrate the rabbitmq metrics into the cluster. To allow crafting alertmanager
    # alerts. With this, we need to deactivate the prometheus scrapping from pergamon to
    # avoid duplicates (those are not readable from the cluster alertmanager)
    rabbitmq:
      namespace: rabbitmq
      port: 9419
      ips:
        - 192.168.130.50
      relabelings:
        # https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config
        - sourceLabels:
            - __address__
          targetLabel: __address__
          regex: "192.168.130.50(.*)"
          replacement: "scheduler0.internal.staging.swh.network$1"
          action: replace

clusterPgStagingDb1:
  name: cluster-pg-staging-db1
  password:
    name: cluster-staging-db1-postgres-user-credential
    key: password
  connectionParameters:
    # Use the correct IP or host name for the source database
    host: db1.internal.staging.swh.network
    user: postgres
    port: "5433"

cloudnativePg:
  enabled: true
  namespace: swh-cassandra-next-version
  # Specific postgresql setup (can be overridden per instance)
  externalClusterRef: clusterPgStagingDb1
  postgresql:
    parameters:
      # https://cloudnative-pg.io/documentation/1.23/postgresql_conf/#changing-configuration
      max_worker_processes: "60"
      # max_connections: "400"
      # shared_buffers: "32GB" # min 128kB
      # log_timezone: 'Etc/UTC'
      # timezone: 'Etc/UTC'
      # lc_messages: 'C.UTF-8' # locale for system error message strings
      # lc_monetary: 'C.UTF-8' # locale for monetary formatting
      # lc_numeric: 'C.UTF-8' # locale for number formatting
      # lc_time: 'C.UTF-8' # locale for time formatting
    pg_hba:
    - host all all all md5
  roles:
    - name: guest
      ensure: present
      comment: Guest
      login: true
      superuser: false
      passwordSecret:
        name: swh-postgresql-guest-secret
  # Exists as many cluster as we want
  deployments:
    next-version-swh:
      enabled: true
      initdb:
        type: microservice
        secretKeyRef: swh-postgresql-swh-swh-secret
        databases:
          - swh
    next-version-dbs:
      enabled: true
      testing: true
      instances: 1
      pooler:
        enabled: true
        type: rw
        default_pool_size: "10"
        max_client_conn: "1000"
      # Managed dbs
      initdb:
        type: monolith
        databases:
        - swh-blocking
        - swh-deposit
        - swh-masking
        - swh-vault
        - swh-web
        - swh-scheduler
        source: cluster-pg-staging-db1

rabbitmq:
  enabled: true
  replicas: 1
  deployments:
    scheduler:
      enabled: true
      namespace: swh-cassandra-next-version
