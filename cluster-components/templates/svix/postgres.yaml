{{ if .Values.svix.postgres.enabled -}}
{{ with .Values.svix -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .namespace }}
  name: svix-postgres
  labels:
    app: svix-postgres
spec:
  revisionHistoryLimit: 2
  replicas: {{ .replicas | default 1 }}
  selector:
    matchLabels:
      app: svix-postgres
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
  template:
    metadata:
      labels:
        app: svix-postgres
    spec:
      {{- if .affinity }}
      affinity:
        {{- toYaml .affinity | nindent 8 }}
      {{- end }}
      containers:
        - name: postgres
          resources:
            requests:
              memory: {{ .postgres.requestedMemory | default "512Mi" }}
              cpu: {{ .postgres.requestedCpu | default "500m" }}
          image: postgres:13.12
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
              name: postgres
          readinessProbe:
            exec:
              command:
                - psql
                - "-U"
                - "swh-svix"
                - "-c"
                - "select version();"
            initialDelaySeconds: 5
            failureThreshold: 30
            periodSeconds: 10
          livenessProbe:
            exec:
              command:
                - psql
                - "-U"
                - "swh-svix"
                - "-c"
                - "select version();"
            initialDelaySeconds: 3
            periodSeconds: 10
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: svix-server-secrets
                  key: APP_DB_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: svix-server-secrets
                  key: APP_DB_PASS
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: svix-server-secrets
                  key: APP_DB_NAME
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
      volumes:
      - name: postgres-data
      {{- if .postgres.persistentVolume }}
        volumeClaimTemplate:
          metadata:
            labels:
              type: persistent-volume
          spec:
            accessModes:
            - ReadWriteOnce
            resources:
              requests:
                storage: 10Gi
            storageClassName: local-persistent
      {{- else }}
        emptyDir: {}
      {{- end }}
{{- end }}
{{- end }}
