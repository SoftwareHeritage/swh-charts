{{ if .Values.svix.enabled -}}
{{ with .Values.svix -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .namespace }}
  name: svix-server
  labels:
    app: svix-server
spec:
  revisionHistoryLimit: 2
  replicas: {{ .replicas | default 1 }}
  selector:
    matchLabels:
      app: svix-server
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
  template:
    metadata:
      labels:
        app: {{ .name }}
    spec:
      {{- if .affinity }}
      affinity:
        {{- toYaml .affinity | nindent 8 }}
      {{- end }}
      containers:
        - name: svix-server
          resources:
            requests:
              memory: {{ .requestedMemory | default "512Mi" }}
              cpu: {{ .requestedCpu | default "500m" }}
          image: svix/svix-server:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8071
              name: svix
          readinessProbe:
            httpGet:
              path: /
              port: svix
            initialDelaySeconds: 5
            failureThreshold: 30
            periodSeconds: 10
            timeoutSeconds: 30
          livenessProbe:
            httpGet:
              path: /
              port: svix
            initialDelaySeconds: 3
            periodSeconds: 10
            timeoutSeconds: 30
          env:
            - name: SVIX_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: svix-server-secrets
                  key: SVIX_JWT_SECRET
            - name: SVIX_DB_PASS
              valueFrom:
                secretKeyRef:
                  name: svix-server-secrets
                  key: APP_DB_PASS
            - name: SVIX_DB_USER
              valueFrom:
                secretKeyRef:
                  name: svix-server-secrets
                  key: APP_DB_USER
            - name: WAIT_FOR
              value: "true"  # We want to wait for the default services
            - name: SVIX_REDIS_DSN
              value: "redis://redis:6379"
            - name: SVIX_DB_DSN
              value: "postgresql://$(SVIX_DB_USER):$(SVIX_DB_PASS)@postgres"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .namespace }}
  name: svix-postgres
  labels:
    app: svix-postgres
spec:
  revisionHistoryLimit: 2
  replicas: {{ .replicas | default 1 }}
  selector:
    matchLabels:
      app: svix-postgres
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
  template:
    metadata:
      labels:
        app: svix-postgres
    spec:
      {{- if .affinity }}
      affinity:
        {{- toYaml .affinity | nindent 8 }}
      {{- end }}
      containers:
        - name: postgres
          resources:
            requests:
              memory: {{ .postgres.requestedMemory | default "512Mi" }}
              cpu: {{ .postgres.requestedCpu | default "500m" }}
          image: postgres:13.12
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
              name: postgres
          readinessProbe:
            exec:
              command:
                - psql
                - "-U"
                - "postgres"
                - "-c"
                - "select version();"
            initialDelaySeconds: 5
            failureThreshold: 30
            periodSeconds: 10
          livenessProbe:
            exec:
              command:
                - psql
                - "-U"
                - "postgres"
                - "-c"
                - "select version();"
            initialDelaySeconds: 3
            periodSeconds: 10
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: svix-server-secrets
                  key: POSTGRES_PASSWORD
            - name: APP_DB_USER
              valueFrom:
                secretKeyRef:
                  name: svix-server-secrets
                  key: APP_DB_USER
            - name: APP_DB_PASS
              valueFrom:
                secretKeyRef:
                  name: svix-server-secrets
                  key: APP_DB_PASS
            - name: APP_DB_NAME
              valueFrom:
                secretKeyRef:
                  name: svix-server-secrets
                  key: APP_DB_NAME
          volumeMounts:
            - name: init-svix-db
              mountPath: /docker-entrypoint-initdb.d/
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
      volumes:
      - name: init-svix-db
        configMap:
          name: postgres-init-svix-db
          items:
          - key: "init.sh.template"
            path: "init.sh"
      - name: postgres-data
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .namespace }}
  name: svix-redis
  labels:
    app: svix-redis
spec:
  revisionHistoryLimit: 2
  replicas: {{ .replicas | default 1 }}
  selector:
    matchLabels:
      app: svix-redis
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
  template:
    metadata:
      labels:
        app: svix-redis
    spec:
      {{- if .affinity }}
      affinity:
        {{- toYaml .affinity | nindent 8 }}
      {{- end }}
      containers:
        - name: redis
          image: redis:7-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 6379
              name: redis
          resources:
            requests:
              memory: {{ .redis.requestedMemory | default "512Mi" }}
              cpu: {{ .redis.requestedCpu | default "500m" }}
          command: [ "redis-server", "--save", "60", "500", "--appendonly", "yes", "--appendfsync", "everysec" ]
          volumeMounts:
            - name: redis-data
              mountPath: /data
      volumes:
      - name: redis-data
        emptyDir: {}
{{- end }}
{{- end }}
